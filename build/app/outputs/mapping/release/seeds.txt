com.google.android.material.search.SearchBar$ScrollingViewBehavior
com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings$DirectoryBasePaths
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods
com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$2
androidx.recyclerview.widget.LinearLayoutManager
androidx.constraintlayout.widget.ConstraintLayout
com.dexterous.flutterlocalnotifications.models.ScheduleMode
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper
com.google.gson.internal.sql.SqlTimeTypeAdapter
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface
com.google.gson.internal.sql.SqlTimestampTypeAdapter
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface
me.carda.awesome_notifications.BuildConfig
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$CreateWindowCallback
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnWindowFocusEventJS
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$5
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$5
android.support.v4.media.AudioAttributesCompatParcelizer
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$1
com.google.firebase.messaging.FirebaseMessagingService
com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse
com.pichillilorenzo.flutter_inappwebview_android.types.SslCertificateExt
me.carda.awesome_notifications.core.models.NotificationChannelModel
com.google.android.material.snackbar.Snackbar$SnackbarLayout
com.google.android.material.internal.BaselineLayout
me.carda.awesome_notifications.core.utils.SerializableUtils
com.google.android.gms.common.api.internal.BasePendingResult
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$2
com.google.gson.internal.bind.ObjectTypeAdapter
me.carda.awesome_notifications.core.background.BackgroundExecutor
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface
io.flutter.plugins.firebase.analytics.FlutterFirebaseAnalyticsPlugin
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.KeepAliveService
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy$1
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior
me.carda.awesome_notifications.core.listeners.AwesomeActionEventListener
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$3
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.JavaScriptBridgeJS
com.google.gson.Gson$2
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionChannelDelegate
com.google.firebase.installations.FirebaseInstallationsRegistrar
android.support.v4.app.RemoteActionCompatParcelizer
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace
me.carda.awesome_notifications.core.listeners.AwesomeExceptionListener
com.google.android.gms.measurement.AppMeasurementReceiver
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$GeolocationPermissionsShowPromptCallback
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback
me.carda.awesome_notifications.core.models.NotificationIntervalModel
me.carda.awesome_notifications.core.utils.CronUtils
com.pichillilorenzo.flutter_inappwebview_android.R$animator
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$4
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt
me.carda.awesome_notifications.core.externalLibs.CronExpression
androidx.core.graphics.drawable.IconCompatParcelizer
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$1
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface
androidx.appcompat.widget.ActionMenuView
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$3
androidx.core.app.RemoteActionCompat
com.google.gson.internal.bind.TypeAdapters$15
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$11
com.google.android.gms.common.annotation.KeepName
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource
com.google.firebase.firestore.core.ActivityScope$StopListenerSupportFragment
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction
com.dexterous.flutterlocalnotifications.models.NotificationAction
com.google.gson.internal.bind.NumberTypeAdapter
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController$4
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener$1
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceContract
com.pichillilorenzo.flutter_inappwebview_android.R$attr
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader
me.carda.awesome_notifications.core.managers.ScheduleManager
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.TrustedWebActivitySingleInstance
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse
me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler
io.flutter.plugin.text.ProcessTextPlugin
me.carda.awesome_notifications.core.models.NotificationLocalizationModel
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ActionBroadcastReceiver
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation
com.pichillilorenzo.flutter_inappwebview_android.webview.ContextMenuSettings
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin
kotlinx.coroutines.android.AndroidDispatcherFactory
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$9
com.google.firebase.FirebaseCommonKtxRegistrar
com.google.firebase.firestore.ktx.FirebaseFirestoreKtxRegistrar
io.flutter.plugins.firebase.crashlytics.FlutterFirebaseAppRegistrar
com.google.gson.internal.bind.TypeAdapters$8
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$14
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout$1
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$8
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$2
androidx.appcompat.view.menu.ExpandedMenuView
me.carda.awesome_notifications.core.utils.JsonUtils
me.carda.awesome_notifications.core.managers.RepositoryManager
kotlinx.coroutines.internal.StackTraceRecoveryKt
io.grpc.internal.PickFirstLoadBalancerProvider
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$2
android.support.v4.media.AudioAttributesImplApi26Parcelizer
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$1
com.google.firebase.crashlytics.CrashlyticsRegistrar
com.google.gson.stream.MalformedJsonException
me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$4
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient
com.google.android.gms.common.api.internal.LifecycleCallback
com.dexterous.flutterlocalnotifications.models.NotificationStyle
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$5
com.google.gson.internal.bind.TypeAdapters$11
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$FormResubmissionCallback
com.pichillilorenzo.flutter_inappwebview_android.R
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeSafariBrowserManager
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings
com.google.android.gms.common.api.Status
me.carda.awesome_notifications.core.utils.TimeZoneUtils
com.pichillilorenzo.flutter_inappwebview_android.types.BaseCallbackResultImpl
com.google.firebase.ktx.FirebaseCommonKtxRegistrar
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$1
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsAlertCallback
me.carda.awesome_notifications.core.utils.ThreadUtils
me.carda.awesome_notifications.core.managers.ChannelManager
com.google.gson.internal.bind.TypeAdapters$EnumTypeAdapter
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PrintJS
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebauthnSupport
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface
me.carda.awesome_notifications.core.broadcasters.receivers.RefreshSchedulesReceiver
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks
com.google.android.gms.common.api.internal.zzd
com.google.android.material.transformation.FabTransformationScrimBehavior
com.google.gson.internal.Excluder
com.google.android.material.carousel.CarouselLayoutManager
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface
androidx.appcompat.widget.ActionBarOverlayLayout
me.carda.awesome_notifications.core.AwesomeNotificationsExtension
com.google.android.material.timepicker.ChipTextInputComboView
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingSettings
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigManager
com.pichillilorenzo.flutter_inappwebview_android.types.SyncBaseCallbackResultImpl
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ShouldOverrideUrlLoadingCallback
com.google.gson.internal.bind.TypeAdapters$3
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsBeforeUnloadCallback
me.carda.awesome_notifications.core.services.ForegroundService$ForegroundServiceIntent
com.google.android.material.chip.Chip
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView$1
com.google.gson.internal.bind.TypeAdapters$4
me.carda.awesome_notifications.DartRefreshSchedulesReceiver
com.google.gson.internal.Excluder$1
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobChannelDelegate
android.support.v4.media.session.MediaSessionCompat$QueueItem
androidx.fragment.app.FragmentContainerView
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceDao
me.carda.awesome_notifications.core.models.NotificationCrontabModel
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin
com.google.android.gms.common.GooglePlayServicesManifestException
me.carda.awesome_notifications.core.models.AbstractModel
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedClientCertRequestCallback
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails
androidx.startup.InitializationProvider
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.ActivityResultListener
androidx.profileinstaller.ProfileInstallerInitializer
android.support.v4.media.session.MediaSessionCompat$Token
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants
com.dexterous.flutterlocalnotifications.models.MessageDetails
com.google.firebase.crashlytics.ktx.FirebaseCrashlyticsKtxRegistrar
com.google.android.material.timepicker.ClockHandView
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar
com.google.android.material.sidesheet.SideSheetBehavior
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$FieldReflectionAdapter
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebViewManager
androidx.media.AudioAttributesImplApi26
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$LoadResourceWithCustomSchemeCallback
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$6
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface
com.google.gson.internal.bind.TypeAdapters$7
androidx.browser.browseractions.BrowserActionsFallbackMenuView
io.flutter.view.FlutterCallbackInformation
com.pichillilorenzo.flutter_inappwebview_android.Util$1
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager
android.support.v4.media.MediaBrowserCompat$SearchResultReceiver
me.carda.awesome_notifications.core.logs.Logger
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExt
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException
me.carda.awesome_notifications.core.models.DefaultsModel
com.google.gson.internal.bind.TypeAdapters$22
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt
me.carda.awesome_notifications.core.managers.LostEventsManager
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack
com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustChallenge
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionSettings
me.carda.awesome_notifications.core.broadcasters.receivers.NotificationActionReceiver
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$3
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt
com.google.firebase.messaging.FirebaseMessagingRegistrar
me.leolin.shortcutbadger.impl.XiaomiHomeBadger
androidx.media.AudioAttributesImplApi26Parcelizer
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar
com.pichillilorenzo.flutter_inappwebview_android.types.SslErrorExt
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$7
com.google.android.datatransport.cct.CctBackendFactory
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate$SyncShouldInterceptRequestCallback
com.dexterous.flutterlocalnotifications.models.ScheduleMode$Deserializer
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptAjaxRequestJS
androidx.window.extensions.core.util.function.Predicate
com.google.gson.internal.bind.TypeAdapters$32
com.pichillilorenzo.flutter_inappwebview_android.R$interpolator
android.support.v4.media.AudioAttributesImplBaseParcelizer
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerChannelDelegate
com.google.gson.internal.bind.TypeAdapters$6
androidx.appcompat.view.menu.ListMenuItemView
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$3
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$1
com.pichillilorenzo.flutter_inappwebview_android.R$anim
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate$ShouldInterceptRequestCallback
org.chromium.support_lib_boundary.PrefetchParamsBoundaryInterface
me.carda.awesome_notifications.DartBackgroundExecutor
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView$1
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver
com.google.android.gms.auth.api.signin.GoogleSignInAccount
com.google.firebase.provider.FirebaseInitProvider
me.carda.awesome_notifications.core.enumerators.MediaSource
me.carda.awesome_notifications.core.managers.EventManager
androidx.versionedparcelable.CustomVersionedParcelable
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar
com.google.firebase.firestore.FirebaseFirestoreKtxRegistrar
me.carda.awesome_notifications.core.models.NotificationButtonModel
me.carda.awesome_notifications.core.models.returnedData.ActionReceived
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements
com.google.gson.internal.bind.CollectionTypeAdapterFactory$Adapter
com.google.android.gms.common.GooglePlayServicesIncorrectManifestValueException
com.google.gson.internal.bind.TypeAdapters$13
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$16
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$16
com.dexterous.flutterlocalnotifications.models.NotificationDetails
com.google.gson.internal.bind.TypeAdapters$9
me.carda.awesome_notifications.core.utils.CalendarUtils
me.carda.awesome_notifications.core.enumerators.LogLevel
com.google.firebase.messaging.FirebaseMessaging
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$SyncShouldInterceptRequestCallback
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants$ProcessGlobalConfigMapKey
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior
com.google.gson.internal.bind.TypeAdapters$21
com.google.gson.internal.sql.SqlTimeTypeAdapter$1
com.google.firebase.messaging.FirebaseMessagingKtxRegistrar
me.carda.awesome_notifications.core.Definitions
com.google.gson.internal.bind.TypeAdapters$26
androidx.appcompat.widget.FitWindowsFrameLayout
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$14
me.carda.awesome_notifications.R$animator
com.google.gson.Gson$5
io.grpc.internal.DnsNameResolverProvider
com.pichillilorenzo.flutter_inappwebview_android.R$string
com.pichillilorenzo.flutter_inappwebview_android.types.PrintAttributesExt
org.chromium.support_lib_boundary.StaticsBoundaryInterface
com.google.gson.stream.package-info
com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt
me.carda.awesome_notifications.DartNotificationActionReceiver
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$4
me.carda.awesome_notifications.core.services.ForegroundService
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$18
com.google.gson.internal.bind.TypeAdapters$23
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$1
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10
com.google.android.material.bottomappbar.BottomAppBar$Behavior
com.google.android.gms.measurement.AppMeasurementService
me.carda.awesome_notifications.R$string
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$1
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface
androidx.coordinatorlayout.widget.CoordinatorLayout
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsMenuItem
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$3
android.support.v4.media.session.MediaControllerCompat$MediaControllerImplApi21$ExtraBinderRequestResultReceiver
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory
me.carda.awesome_notifications.core.listeners.AwesomeLifeCycleEventListener
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar
me.carda.awesome_notifications.core.listeners.AwesomeEventListener
me.carda.awesome_notifications.core.completion_handlers.ActivityCompletionHandler
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings
com.pichillilorenzo.flutter_inappwebview_android.webview.FlutterWebViewFactory
android.support.v4.media.MediaMetadataCompat
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior
com.google.gson.stream.JsonReader
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebViewMediaIntegrityApiStatus
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty
com.google.android.material.transformation.ExpandableTransformationBehavior
com.google.android.material.internal.ClippableRoundedCornerLayout
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10$1
me.carda.awesome_notifications.core.enumerators.NotificationLayout
me.carda.awesome_notifications.core.utils.MediaUtils
com.google.android.gms.common.internal.ReflectedParcelable
me.carda.awesome_notifications.core.managers.CancellationManager
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeBroadcastReceiver
me.carda.awesome_notifications.core.completion_handlers.BitmapCompletionHandler
com.google.firebase.components.ComponentRegistrar
com.google.firebase.concurrent.ExecutorsRegistrar
io.flutter.view.TextureRegistry$SurfaceProducer
com.google.android.material.behavior.HideBottomViewOnScrollBehavior
com.pichillilorenzo.flutter_inappwebview_android.R$dimen
android.support.v4.media.AudioAttributesImplApi21Parcelizer
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$9
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper$ConnectionCallback
androidx.appcompat.widget.ViewStubCompat
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript$1
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedHttpAuthRequestCallback
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback
com.google.firebase.components.ComponentDiscoveryService
com.google.gson.internal.bind.ArrayTypeAdapter$1
com.google.android.material.appbar.AppBarLayout$Behavior
androidx.appcompat.view.menu.ActionMenuItemView
com.google.gson.internal.bind.TypeAdapters$31
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$3
com.pichillilorenzo.flutter_inappwebview_android.R$layout
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$4$1
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference
net.jonhanson.flutter_native_splash.FlutterNativeSplashPlugin
com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$13
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$6
com.google.firebase.firestore.FirestoreRegistrar
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertChallenge
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$8
com.google.gson.Gson$3
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$1
com.google.firebase.sessions.SessionLifecycleService
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface
me.carda.awesome_notifications.core.models.NotificationScheduleModel
me.leolin.shortcutbadger.impl.DefaultBadger
me.carda.awesome_notifications.core.managers.SharedManager
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate$SyncHandleCallback
com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$4
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListenerChannelDelegate
com.google.gson.internal.bind.DefaultDateTypeAdapter
io.flutter.embedding.engine.FlutterJNI
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$RenderProcessUnresponsiveCallback
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate
com.google.firebase.crashlytics.FirebaseCrashlyticsKtxRegistrar
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate
me.carda.awesome_notifications.core.databases.SqLiteCypher
me.carda.awesome_notifications.core.managers.DisplayedManager
com.google.android.material.internal.TouchObserverFrameLayout
com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate
com.google.android.material.button.MaterialButton
com.google.firebase.analytics.FirebaseAnalytics
com.pichillilorenzo.flutter_inappwebview_android.types.IChannelDelegate
me.carda.awesome_notifications.core.enumerators.NotificationImportance
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$5
com.google.android.material.button.MaterialButtonToggleGroup
androidx.room.MultiInstanceInvalidationService
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessWebViewChannelDelegate
androidx.appcompat.widget.AlertDialogLayout
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings
com.google.android.gms.common.api.GoogleApiActivity
me.carda.awesome_notifications.core.enumerators.ActionType
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$17
com.google.gson.internal.bind.ArrayTypeAdapter
me.carda.awesome_notifications.core.services.AutoCancelService
com.qilowatt.qilowatt.MainActivity
com.google.android.material.bottomsheet.BottomSheetBehavior
com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannelChannelDelegate
com.google.gson.TypeAdapter$1
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceContract$FeedEntry
com.google.android.material.datepicker.MaterialCalendarGridView
me.carda.awesome_notifications.core.utils.MapUtils
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$2
com.google.gson.internal.bind.TypeAdapters$1
me.carda.awesome_notifications.R$dimen
com.google.firebase.firestore.FirebaseFirestore
com.google.gson.internal.bind.TypeAdapters$24
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$2
androidx.appcompat.widget.ActivityChooserView$InnerLayout
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface
com.google.gson.internal.bind.TypeAdapters$10
me.carda.awesome_notifications.core.managers.DismissedManager
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserChannelDelegate
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2
kotlin.coroutines.jvm.internal.BaseContinuationImpl
org.chromium.support_lib_boundary.ProfileBoundaryInterface
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver
com.google.android.material.transformation.FabTransformationSheetBehavior
me.carda.awesome_notifications.core.threads.NotificationThread
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$12
com.google.gson.internal.bind.DateTypeAdapter
androidx.appcompat.widget.ActionBarContainer
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$SyncLoadResourceWithCustomSchemeCallback
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$SafeBrowsingHitCallback
me.carda.awesome_notifications.core.managers.PermissionManager
me.leolin.shortcutbadger.impl.NovaHomeBadger
me.carda.awesome_notifications.core.BuildConfig
me.carda.awesome_notifications.core.enumerators.NotificationSource
com.google.gson.internal.bind.TypeAdapters$34
androidx.window.extensions.core.util.function.Consumer
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation
com.google.android.gms.measurement.AppMeasurement
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$1
me.carda.awesome_notifications.R$id
me.carda.awesome_notifications.core.utils.HtmlUtils
io.flutter.view.TextureRegistry$GLTextureConsumer
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController$2
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider
me.carda.awesome_notifications.core.listeners.AwesomeNotificationEventListener
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$7
io.flutter.view.AccessibilityViewEmbedder
me.carda.awesome_notifications.core.managers.CreatedManager
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$12
android.support.v4.media.session.PlaybackStateCompat$CustomAction
me.carda.awesome_notifications.DartScheduledNotificationReceiver
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$15
org.chromium.support_lib_boundary.WebMessageBoundaryInterface
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$6
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse
com.google.android.gms.measurement.AppMeasurementJobService
com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse
com.dexterous.flutterlocalnotifications.models.Time
io.flutter.view.TextureRegistry$SurfaceTextureEntry
androidx.lifecycle.ProcessLifecycleInitializer
androidx.annotation.Keep
com.google.android.material.textfield.TextInputLayout
me.carda.awesome_notifications.core.threads.NotificationSender
com.google.android.gms.common.api.Scope
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$4
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$7
android.support.v4.media.MediaBrowserCompat$ItemReceiver
com.pichillilorenzo.flutter_inappwebview_android.types.ICallbackResult
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView
me.leolin.shortcutbadger.impl.SonyHomeBadger
com.google.gson.internal.bind.TypeAdapters$12
com.google.gson.internal.bind.TypeAdapters$16
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlocker
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings
me.carda.awesome_notifications.core.utils.StringUtils
com.dexterous.flutterlocalnotifications.models.SoundSource
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks$1
androidx.core.app.CoreComponentFactory
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedServerTrustAuthRequestCallback
io.grpc.okhttp.OkHttpChannelProvider
com.google.firebase.sessions.FirebaseSessionsRegistrar
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior
android.support.v4.media.RatingCompat
com.google.android.material.appbar.MaterialToolbar
android.support.v4.media.session.PlaybackStateCompat
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode
androidx.transition.FragmentTransitionSupport
com.dexterous.flutterlocalnotifications.models.PersonDetails
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHandler
androidx.window.extensions.core.util.function.Function
me.carda.awesome_notifications.R$color
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$PermissionRequestCallback
me.carda.awesome_notifications.core.utils.ListUtils
io.grpc.internal.JndiResourceResolverFactory
com.google.firebase.FirebaseCommonRegistrar
me.carda.awesome_notifications.DartBackgroundService
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$19
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver$1
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface
com.pichillilorenzo.flutter_inappwebview_android.R$color
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface
me.carda.awesome_notifications.R$styleable
me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$15
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$3
me.carda.awesome_notifications.AwesomeNotificationsPlugin
me.carda.awesome_notifications.R$anim
androidx.webkit.ProcessGlobalConfig
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$4
com.google.gson.internal.bind.NumberTypeAdapter$1
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService
androidx.fragment.app.DialogFragment
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface
me.carda.awesome_notifications.R$layout
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerManager
me.carda.awesome_notifications.core.utils.BooleanUtils
org.chromium.support_lib_boundary.PrefetchOperationResultBoundaryInterface
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse
me.carda.awesome_notifications.core.models.returnedData.NotificationReceived
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$8
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse
com.pichillilorenzo.flutter_inappwebview_android.R$xml
me.leolin.shortcutbadger.impl.ApexHomeBadger
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager
com.google.gson.stream.JsonToken
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface
me.carda.awesome_notifications.core.enumerators.NotificationPlayState
com.google.gson.internal.sql.SqlTimestampTypeAdapter$1
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin
me.carda.awesome_notifications.core.exceptions.ExceptionCode
com.google.gson.internal.bind.TypeAdapters$5
com.google.gson.internal.bind.TypeAdapters$2
com.google.gson.internal.sql.SqlDateTypeAdapter
com.dexterous.flutterlocalnotifications.models.RepeatInterval
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback
android.support.v4.media.MediaDescriptionCompat
com.google.gson.internal.bind.TypeAdapters$33
com.google.gson.internal.bind.TypeAdapters$29
com.pichillilorenzo.flutter_inappwebview_android.R$style
com.pichillilorenzo.flutter_inappwebview_android.types.URLAuthenticationChallenge
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ShouldInterceptRequestCallback
com.google.gson.internal.bind.TypeAdapters$18
com.dexterous.flutterlocalnotifications.utils.BooleanUtils
me.carda.awesome_notifications.core.broadcasters.receivers.ScheduledNotificationReceiver
androidx.recyclerview.widget.RecyclerView
androidx.appcompat.widget.ActionBarContextView
me.carda.awesome_notifications.core.exceptions.ExceptionFactory
me.carda.awesome_notifications.core.models.NotificationContentModel
androidx.appcompat.widget.FitWindowsLinearLayout
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$6
com.google.gson.stream.JsonScope
android.support.v4.media.session.ParcelableVolumeInfo
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$4
me.carda.awesome_notifications.AwesomeNotificationsFlutterExtension
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptFetchRequestJS
com.google.gson.internal.bind.ObjectTypeAdapter$1
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$7
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin
com.google.gson.internal.bind.TypeAdapters$30
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential
me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType
io.flutter.plugins.firebase.crashlytics.FirebaseCrashlyticsTestCrash
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface
me.carda.awesome_notifications.core.models.NotificationChannelGroupModel
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$18
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger
com.google.android.material.datepicker.MaterialCalendar
com.google.android.material.timepicker.TimePickerView
androidx.media.AudioAttributesImplBase
com.google.android.gms.common.util.DynamiteApi
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil
com.google.gson.internal.bind.TreeTypeAdapter$SingleTypeFactory
com.google.android.material.behavior.SwipeDismissBehavior
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider
io.flutter.embedding.engine.FlutterOverlaySurface
io.flutter.view.TextureRegistry$ImageTextureEntry
com.pichillilorenzo.flutter_inappwebview_android.ISettings
me.carda.awesome_notifications.core.managers.BadgeManager
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService
me.carda.awesome_notifications.core.broadcasters.receivers.DismissedNotificationReceiver
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnLoadResourceJS
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialContract$FeedEntry
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings
me.carda.awesome_notifications.core.models.NotificationCalendarModel
androidx.core.graphics.drawable.IconCompat
me.carda.awesome_notifications.R$integer
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.TrustedWebActivity
com.google.android.material.transformation.ExpandableBehavior
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel$1
me.carda.awesome_notifications.core.utils.BitmapUtils
androidx.constraintlayout.helper.widget.Flow
com.pichillilorenzo.flutter_inappwebview_android.PlatformUtil
me.leolin.shortcutbadger.impl.AdwHomeBadger
com.google.gson.Gson$FutureTypeAdapter
me.carda.awesome_notifications.R$style
com.pichillilorenzo.flutter_inappwebview_android.R$drawable
me.carda.awesome_notifications.core.enumerators.SafeEnum
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate
com.google.android.material.timepicker.ClockFaceView
com.google.gson.internal.bind.TypeAdapters$14
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager$DummyServiceWorkerClientCompat
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$7
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$20
com.google.gson.Gson$4
me.carda.awesome_notifications.R$attr
me.carda.awesome_notifications.core.enumerators.NotificationCategory
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface
com.dexterous.flutterlocalnotifications.models.DateTimeComponents
androidx.appcompat.widget.ButtonBarLayout
me.carda.awesome_notifications.core.AwesomeNotifications
me.carda.awesome_notifications.core.builders.NotificationBuilder
com.dexterous.flutterlocalnotifications.ActionBroadcastReceiver
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsConfirmCallback
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$2
com.google.gson.internal.bind.DateTypeAdapter$1
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController$1
androidx.appcompat.widget.Toolbar
androidx.recyclerview.widget.StaggeredGridLayoutManager
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$1
me.carda.awesome_notifications.core.threads.NotificationScheduler
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PromisePolyfillJS
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction
androidx.appcompat.widget.SearchView$SearchAutoComplete
me.carda.awesome_notifications.core.managers.ChannelGroupManager
com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface
io.flutter.plugins.GeneratedPluginRegistrant
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate$HandleCallback
me.carda.awesome_notifications.core.managers.ActionManager
com.pichillilorenzo.flutter_inappwebview_android.types.Disposable
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$3
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$CallJsHandlerCallback
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthenticationChallenge
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction
com.google.android.material.appbar.AppBarLayout$BaseBehavior
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar
me.carda.awesome_notifications.DartDismissedNotificationReceiver
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel$2
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$1
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$13
io.flutter.plugins.firebase.crashlytics.FlutterFirebaseCrashlyticsPlugin
me.carda.awesome_notifications.core.R
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$21
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$3
com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt
com.google.android.gms.common.SupportErrorDialogFragment
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory
com.pichillilorenzo.flutter_inappwebview_android.WebViewFeatureManager
com.google.android.material.datepicker.MaterialDatePicker
com.google.android.material.snackbar.SnackbarContentLayout
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivitySingleInstance
me.leolin.shortcutbadger.impl.NewHtcHomeBadger
com.google.android.material.search.SearchView$Behavior
dev.fluttercommunity.plus.connectivity.ConnectivityPlugin
androidx.media.AudioAttributesCompat
com.pichillilorenzo.flutter_inappwebview_android.types.ChannelDelegateImpl
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$2
com.google.gson.internal.bind.TypeAdapters$17
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency
com.pichillilorenzo.flutter_inappwebview_android.R$menu
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController
com.google.gson.internal.bind.TypeAdapters$28
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver
me.carda.awesome_notifications.core.threads.NotificationForegroundSender
me.carda.awesome_notifications.core.enumerators.NotificationPermission
me.carda.awesome_notifications.core.models.NotificationMessageModel
com.google.gson.internal.bind.SerializationDelegatingTypeAdapter
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$5
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$6
com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter
androidx.media.AudioAttributesImplApi21Parcelizer
com.pichillilorenzo.flutter_inappwebview_android.R$integer
me.carda.awesome_notifications.R
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager
com.dexterous.flutterlocalnotifications.models.BitmapSource
com.google.gson.internal.bind.TypeAdapters$27
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation
androidx.appcompat.app.AlertController$RecycleListView
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D
org.chromium.support_lib_boundary.PrefetchStatusCodeBoundaryInterface
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$DownloadStartListener
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse
com.google.android.material.textfield.TextInputEditText
androidx.core.app.RemoteActionCompatParcelizer
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder
me.carda.awesome_notifications.core.utils.IntegerUtils
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$1
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$2
android.support.v4.media.MediaBrowserCompat$CustomActionResultReceiver
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$3
me.carda.awesome_notifications.core.services.BackgroundService
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$1
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper
com.google.android.material.theme.MaterialComponentsViewInflater
androidx.recyclerview.widget.GridLayoutManager
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$2
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobManager
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper
com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$1
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage
com.google.gson.Gson$1
androidx.appcompat.widget.DialogTitle
com.google.firebase.messaging.ktx.FirebaseMessagingKtxRegistrar
androidx.media.AudioAttributesImpl
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings$1
androidx.versionedparcelable.ParcelImpl
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem
com.google.gson.stream.JsonReader$1
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFileProvider
me.carda.awesome_notifications.core.utils.EnumUtils
com.pichillilorenzo.flutter_inappwebview_android.R$bool
com.google.gson.internal.bind.TypeAdapters$34$1
com.google.android.material.internal.NavigationMenuView
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery
com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialDao
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout$2
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialContract
me.carda.awesome_notifications.core.managers.LocalizationManager
com.google.gson.stream.JsonWriter
io.flutter.view.TextureRegistry$ImageConsumer
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService
com.pichillilorenzo.flutter_inappwebview_android.Util
androidx.core.widget.NestedScrollView
com.pichillilorenzo.flutter_inappwebview_android.types.PrintJobInfoExt
com.pichillilorenzo.flutter_inappwebview_android.BuildConfig
com.google.android.material.internal.NavigationMenuItemView
com.google.gson.reflect.TypeToken
me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle
me.carda.awesome_notifications.core.enumerators.GroupSort
androidx.media.AudioAttributesCompatParcelizer
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$4
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$2
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshChannelDelegate
com.google.android.material.datepicker.MaterialTextInputPicker
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsPromptCallback
com.google.firebase.iid.FirebaseInstanceIdReceiver
me.carda.awesome_notifications.core.utils.AudioUtils
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$SpeculativeLoadingStatus
androidx.appcompat.widget.ContentFrameLayout
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$3
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$1
me.carda.awesome_notifications.core.utils.CompareUtils
com.google.gson.internal.bind.TypeAdapters$19
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat
com.pichillilorenzo.flutter_inappwebview_android.R$id
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabsHelper
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation
com.google.android.material.transformation.FabTransformationBehavior
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$11
io.flutter.plugins.firebase.analytics.FlutterFirebaseAppRegistrar
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin
androidx.emoji2.text.EmojiCompatInitializer
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$1
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnWindowBlurEventJS
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$1
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$10
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$3
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$17
android.support.v4.media.MediaBrowserCompat$MediaItem
androidx.media.AudioAttributesImplBaseParcelizer
me.carda.awesome_notifications.R$drawable
com.google.gson.internal.bind.TypeAdapters$20
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$2
androidx.profileinstaller.ProfileInstallReceiver
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController$3
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$2
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ServiceConnection
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$3
me.carda.awesome_notifications.core.managers.DefaultsManager
com.dexterous.flutterlocalnotifications.utils.StringUtils
com.google.gson.internal.sql.SqlDateTypeAdapter$1
com.pichillilorenzo.flutter_inappwebview_android.R$styleable
io.flutter.plugin.platform.SingleViewPresentation
androidx.webkit.WebViewClientCompat
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ServiceConnectionCallback
android.support.v4.graphics.drawable.IconCompatParcelizer
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$PrintRequestCallback
me.carda.awesome_notifications.FlutterBitmapUtils
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation
com.pichillilorenzo.flutter_inappwebview_android.Util$PrivateKeyAndCertificates
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory$1
com.google.android.material.internal.CheckableImageButton
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessage
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper
com.google.firebase.datatransport.TransportRegistrar
com.google.gson.internal.bind.CollectionTypeAdapterFactory
com.google.gson.internal.bind.TreeTypeAdapter
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager$1
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor
me.carda.awesome_notifications.core.models.NotificationModel
com.google.gson.internal.bind.MapTypeAdapterFactory
androidx.media.AudioAttributesImplApi21
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript
me.carda.awesome_notifications.core.managers.LifeCycleManager
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt
io.flutter.plugins.firebase.core.FlutterFirebasePlugin
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$RenderProcessResponsiveCallback
com.pichillilorenzo.flutter_inappwebview_android.types.CreateWindowAction
io.flutter.plugins.firebase.crashlytics.FlutterError
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession
com.dexterous.flutterlocalnotifications.models.IconSource
com.google.gson.internal.bind.TypeAdapters$25
me.carda.awesome_notifications.core.managers.StatusBarManager
com.google.android.gms.internal.measurement.zzfy$zzk: long zzan
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: java.lang.String defType
me.carda.awesome_notifications.core.externalLibs.CronExpression: int YEAR
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ByteArray
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_colorControlActivated
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean $assertionsDisabled
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_windowMinWidthMajor
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType microphone
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType[] valueList
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BG_HANDLE_CLASS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean colorized
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionMenuTextColor
kotlinx.coroutines.selects.SelectImplementation: java.lang.Object state
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer audioAttributesUsage
kotlinx.coroutines.sync.SemaphoreImpl: long enqIdx
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActionButton_CloseMode
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int logoDescription
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_android_fontFamily
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mOrigin
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_ARRAY_BUFFER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_Light
me.carda.awesome_notifications.core.utils.CronUtils: java.lang.String validDateFormat
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.String navigationBarColor
com.google.firestore.v1.CommitResponse: int COMMIT_TIME_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$5: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate this$0
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int splitMinSmallestWidthDp
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_search_view_preferred_width
com.google.android.gms.internal.measurement.zzfy$zza: com.google.android.gms.internal.measurement.zzll zzd
me.carda.awesome_notifications.R$id: int tag_transition_group
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean mediaPlaybackRequiresUserGesture
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_PRECISE_SCHEDULES
com.dexterous.flutterlocalnotifications.models.NotificationStyle: com.dexterous.flutterlocalnotifications.models.NotificationStyle Media
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_MESSAGE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean animating
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Timestamp readTime_
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptAjaxRequestJS: java.lang.String FLAG_VARIABLE_FOR_SHOULD_INTERCEPT_AJAX_REQUEST_JS_SOURCE
me.carda.awesome_notifications.core.models.NotificationScheduleModel: java.util.TimeZone timeZone
com.google.android.gms.internal.measurement.zzfy$zzd: com.google.android.gms.internal.measurement.zzfy$zzm zzg
com.google.firestore.v1.Target$QueryTarget: java.lang.Object queryType_
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.String toolbarBackgroundColor
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzax
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeBroadcastReceiver: java.lang.String TAG
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentController mFragments
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Object bigPicture
me.carda.awesome_notifications.core.threads.NotificationSender: long startTime
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String LOG_TAG
com.google.firestore.v1.WriteResult: com.google.protobuf.Internal$ProtobufList transformResults_
com.google.firestore.v1.Document: int CREATE_TIME_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tag_unhandled_key_event_manager
com.google.firebase.firestore.proto.NoDocument: com.google.protobuf.Timestamp readTime_
com.pichillilorenzo.flutter_inappwebview_android.R$id: int checkbox
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnLoadResourceJS: java.lang.String ON_LOAD_RESOURCE_JS_SOURCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_NOTIFICATION_REPEAT_FREQUENCY
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: java.util.Set allowedOriginRules
com.google.firestore.v1.Value: int INTEGER_VALUE_FIELD_NUMBER
me.carda.awesome_notifications.core.models.NotificationScheduleModel: java.lang.Boolean preciseAlarm
me.carda.awesome_notifications.core.Definitions: java.lang.String BACKGROUND_HANDLE
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Integer badge
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModeCloseButtonStyle
com.google.firestore.v1.TransactionOptions: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzfr$zzd: boolean zzm
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_titleTextAppearance
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory StopWatch
com.google.firestore.v1.ExistenceFilter: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int activityChooserViewStyle
com.pichillilorenzo.flutter_inappwebview_android.types.CreateWindowAction: int windowId
me.carda.awesome_notifications.core.enumerators.LogLevel: me.carda.awesome_notifications.core.enumerators.LogLevel error
me.carda.awesome_notifications.core.BuildConfig: boolean DEBUG
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_list_pressed_holo_light
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$8: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_MODEL_LOCALIZATIONS
com.google.firebase.firestore.proto.WriteBatch: int WRITES_FIELD_NUMBER
com.google.firestore.v1.AggregationResult: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_tab_indicator_mtrl_alpha
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnWindowBlurEventJS: java.lang.String ON_WINDOW_BLUR_EVENT_JS_PLUGIN_SCRIPT_GROUP_NAME
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String name
androidx.datastore.preferences.PreferencesProto$StringSet: int STRINGS_FIELD_NUMBER
me.carda.awesome_notifications.core.services.ForegroundService$ForegroundServiceIntent: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType foregroundServiceType
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_DESCRIPTION
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource DrawableResource
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_menu_space_shortcut_label
me.carda.awesome_notifications.core.threads.NotificationScheduler: me.carda.awesome_notifications.core.enumerators.NotificationSource createdSource
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance[] $VALUES
com.google.android.gms.signin.internal.zaa: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_ALPHA
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_mode_bar
me.carda.awesome_notifications.R$animator: int fragment_open_exit
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_logo
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat inAppWebViewClientCompat
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.WebViewFeatureManager webViewFeatureManager
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_SearchResult
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$8: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: java.lang.Integer statusCode
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_item_background_holo_light
com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse: java.util.List resources
com.google.firestore.v1.BatchGetDocumentsRequest: int consistencySelectorCase_
com.pichillilorenzo.flutter_inappwebview_android.R$id: int titleDividerNoCustom
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_button_padding_vertical_material
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionBarSize
com.pichillilorenzo.flutter_inappwebview_android.R$id: int webView
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_scrubber_control_to_pressed_mtrl_000
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat_Light_DialogWhenLarge
com.google.android.gms.internal.measurement.zzfy$zzm: com.google.android.gms.internal.measurement.zzjz zze
com.dexterous.flutterlocalnotifications.models.NotificationStyle: com.dexterous.flutterlocalnotifications.models.NotificationStyle Default
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairRule_splitMinSmallestWidthDp
com.google.android.gms.internal.measurement.zzfr$zzb: com.google.android.gms.internal.measurement.zzkc zzg
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ActionBar_TabView
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2: android.webkit.HttpAuthHandler val$handler
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_Compat_NotificationActionContainer
com.google.android.gms.common.api.Status: android.os.Parcelable$Creator CREATOR
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType camera
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActionBar_TabView_Inverse
com.pichillilorenzo.flutter_inappwebview_android.R$style: int ThemeOverlay_AppCompat_DayNight
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _removedRef
me.carda.awesome_notifications.core.utils.ThreadUtils: me.carda.awesome_notifications.core.utils.ThreadUtils instance
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$12: android.webkit.JsResult val$result
me.carda.awesome_notifications.DartBackgroundExecutor: io.flutter.plugin.common.PluginRegistry$PluginRegistrantCallback pluginRegistrantCallback
me.carda.awesome_notifications.R$animator: int fragment_fade_enter
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ic_clear_material
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListenerChannelDelegate channelDelegate
me.carda.awesome_notifications.R$string: int call_notification_answer_action
me.carda.awesome_notifications.R$styleable: int Fragment_android_name
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int deferredInsetTypes
me.carda.awesome_notifications.R$id: int tag_state_description
com.google.firestore.v1.Document: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerManager: androidx.webkit.TracingController tracingController
me.carda.awesome_notifications.R$attr: int splitMaxAspectRatioInPortrait
com.google.firestore.v1.TransactionOptions$ReadOnly: int consistencySelectorCase_
com.google.firebase.firestore.proto.Target: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_SearchResult_Title
me.carda.awesome_notifications.R$id: int icon_group
com.google.android.material.textfield.TextInputLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int trackTint
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.PreferencesProto$Value DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$string: int action_share
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_android_shadowDx
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.Class backgroundServiceClass
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dropdownitem_text_padding_right
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_19
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String ID
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND_SOURCE
me.carda.awesome_notifications.core.managers.RepositoryManager: java.lang.String hashedReference
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ListView_Menu
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int nestedScrollViewStyle
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$11: android.webkit.JsPromptResult val$result
androidx.datastore.preferences.PreferencesProto$Value: int STRING_FIELD_NUMBER
com.google.firestore.bundle.BundledQuery: com.google.firestore.bundle.BundledQuery DEFAULT_INSTANCE
com.google.gson.stream.JsonReader: int BUFFER_SIZE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_splitTrack
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Integer timeoutAfter
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean displayZoomControls
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String EVALUATE_JAVASCRIPT_WITH_CONTENT_WORLD_WRAPPER_JS_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_Compat_Notification_Time
com.google.android.gms.internal.measurement.zzfy$zzb: com.google.android.gms.internal.measurement.zzfy$zzb zzc
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$4: android.webkit.ClientCertRequest val$request
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeSafariBrowserManager: java.util.Map shared
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int windowMinWidthMajor
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerManager: java.lang.String METHOD_CHANNEL_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_screen_simple
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int elevation
me.carda.awesome_notifications.R$id: int accessibility_custom_action_11
androidx.core.content.FileProvider: java.util.HashMap sCache
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String STOP_FOREGROUND_SERVICE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int drawableTint
me.carda.awesome_notifications.core.enumerators.NotificationSource: me.carda.awesome_notifications.core.enumerators.NotificationSource Local
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper$ConnectionCallback mConnectionCallback
androidx.activity.result.IntentSenderRequest: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_CompoundButton_Switch
com.google.firestore.v1.ListenResponse: int FILTER_FIELD_NUMBER
me.carda.awesome_notifications.core.models.NotificationChannelModel: me.carda.awesome_notifications.core.enumerators.NotificationImportance importance
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Small
me.carda.awesome_notifications.core.models.NotificationChannelModel: me.carda.awesome_notifications.core.enumerators.GroupSort groupSort
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int thumbTint
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.TreeSet seconds
me.carda.awesome_notifications.core.managers.SharedManager: java.lang.String packageName
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_action_mode_close_item_material
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.firestore.v1.DocumentTransform$FieldTransform DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt: java.lang.String url
com.google.android.gms.internal.measurement.zzfo$zzb: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.auth.api.signin.GoogleSignInAccount: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$16: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.BitmapSource largeIconBitmapSource
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Spinner
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_SearchView
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean needsSave
com.google.type.LatLng: double latitude_
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$2: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView val$webView
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ListPopupWindow_android_dropDownVerticalOffset
androidx.core.app.JobIntentService: boolean mInterruptIfStopped
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods isInFullscreen
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzj
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods pause
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String CODE_EVENT_EXCEPTION
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AnimatedStateListDrawableCompat_android_exitFadeDuration
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_android_id
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_MESSAGES
com.google.firestore.v1.ListenResponse: java.lang.Object responseType_
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$9: android.widget.EditText val$input
me.carda.awesome_notifications.core.enumerators.GroupSort: me.carda.awesome_notifications.core.enumerators.GroupSort[] valueList
me.carda.awesome_notifications.core.AwesomeNotifications: java.util.List notificationEventListeners
io.flutter.plugin.platform.SingleViewPresentation: android.content.Context outerContext
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_android_textAppearance
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: java.util.List ports
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Count: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.R$id: int screen
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_disabled_alpha_material_light
com.dexterous.flutterlocalnotifications.models.RepeatInterval: com.dexterous.flutterlocalnotifications.models.RepeatInterval[] $VALUES
com.google.gson.stream.JsonScope: int EMPTY_DOCUMENT
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzf
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_btn_colored_material
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_TITLE_LOC_ARGS
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_android_icon
me.carda.awesome_notifications.R$drawable: int notification_template_icon_low_bg
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Count: com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Count DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairRule_splitMinWidthDp
com.google.firestore.admin.v1.Index: int NAME_FIELD_NUMBER
me.carda.awesome_notifications.R$id: int dialog_button
com.google.firestore.v1.BatchGetDocumentsRequest: int DOCUMENTS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$animator: int fragment_close_enter
me.carda.awesome_notifications.core.managers.StatusBarManager: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_emojiCompatEnabled
me.carda.awesome_notifications.core.models.NotificationChannelModel: me.carda.awesome_notifications.core.enumerators.NotificationPrivacy defaultPrivacy
com.google.firebase.firestore.proto.Target: int QUERY_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int lineHeight
com.pichillilorenzo.flutter_inappwebview_android.R$string: int call_notification_answer_video_action
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_go_forward
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$9: java.lang.String val$flagVariable
kotlinx.coroutines.scheduling.WorkQueue: int producerIndex
com.pichillilorenzo.flutter_inappwebview_android.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_0
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState playing
com.google.firestore.v1.Target$QueryTarget: int PARENT_FIELD_NUMBER
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_GET_FCM_TOKEN
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Body1
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_ID
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_content_margin_start
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean useShouldInterceptFetchRequest
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzfy$zzi zzbc
me.carda.awesome_notifications.R$id: int accessibility_custom_action_3
com.google.firestore.admin.v1.Index: int queryScope_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int backgroundStacked
com.pichillilorenzo.flutter_inappwebview_android.R$id: int topToBottom
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_DropDownItem_Spinner
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int subtitle
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_fontFamily
me.carda.awesome_notifications.core.services.ForegroundService: java.lang.String TAG
com.google.firestore.v1.DocumentTransform$FieldTransform: java.lang.String fieldPath_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int CompoundButton_android_button
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] ActionMode
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_screen_simple_overlay_action_mode
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_checkedTextViewStyle
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_ThemeOverlay_AppCompat_Dialog_Alert
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: me.carda.awesome_notifications.core.builders.NotificationBuilder notificationBuilder
com.google.firestore.v1.WriteResult: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModeWebSearchDrawable
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_popupMenuStyle
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat_Dialog_Alert
io.flutter.embedding.engine.FlutterJNI: android.os.Looper mainLooper
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String CODE_PAGE_NOT_FOUND
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView flutterWebView
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int color
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_SUFFIX
me.carda.awesome_notifications.core.managers.LifeCycleManager: java.lang.String TAG
me.carda.awesome_notifications.R$id: int line1
me.carda.awesome_notifications.R$id: int action_image
com.pichillilorenzo.flutter_inappwebview_android.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_0
androidx.core.content.FileProvider: java.lang.String TAG_ROOT_PATH
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2: java.lang.String val$handlerName
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int notification_bg_normal
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionBarWidgetTheme
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Subhead
com.google.firestore.v1.BitSequence: int BITMAP_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String VAR_CONTENT_WORLD_NAME_ARRAY
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: java.lang.String buttonKeyPressed
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ActivityChooserView
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer maxProgress
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_menu_material
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_list_menu_item_layout
me.carda.awesome_notifications.core.exceptions.ExceptionFactory: java.lang.String TAG
com.google.firestore.v1.Precondition: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionBarTheme
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_CompoundButton_CheckBox
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_searchHintIcon
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$6: android.os.Message val$resend
com.google.android.gms.internal.measurement.zzfy$zzh: com.google.android.gms.internal.measurement.zzkc zzk
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int fontProviderCerts
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: java.lang.String COLUMN_CHANNEL_KEY
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_MODEL_CONTENT
com.google.firestore.v1.ListenResponse: int DOCUMENT_REMOVE_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_autoShowKeyboard
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_ICON_ERROR_CODE
com.google.firestore.v1.TransactionOptions$ReadOnly: java.lang.Object consistencySelector_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] PopupWindowBackgroundState
me.carda.awesome_notifications.core.Definitions: java.lang.String EVENT_NOTIFICATION_CREATED
com.google.android.gms.internal.measurement.zzfy$zzo: com.google.android.gms.internal.measurement.zzfy$zzo zzc
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int notification_bg_low
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Button_Borderless
androidx.browser.customtabs.CustomTabsCallback: int ACTIVITY_LAYOUT_STATE_SIDE_SHEET
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_bar_subtitle
com.google.gson.stream.JsonReader: int PEEKED_TRUE
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: int resultCount
com.google.firestore.v1.Cursor: com.google.protobuf.Parser PARSER
com.google.firestore.bundle.BundledQuery: int LIMIT_TYPE_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$15: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.pichillilorenzo.flutter_inappwebview_android.types.PrintJobInfoExt: com.pichillilorenzo.flutter_inappwebview_android.types.PrintAttributesExt attributes
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$13: java.lang.String val$itemTitle
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_INCREMENT_BADGE_COUNT
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int tooltip_y_offset_touch
me.carda.awesome_notifications.core.managers.DefaultsManager: me.carda.awesome_notifications.core.managers.RepositoryManager shared
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int state_above_anchor
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: boolean handledByClient
com.google.android.gms.internal.measurement.zzfr$zzi: int zze
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int hideOnContentScroll
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.Boolean groupConversation
com.pichillilorenzo.flutter_inappwebview_android.R$color: int material_deep_teal_200
me.carda.awesome_notifications.R$attr: int fontProviderFetchStrategy
me.carda.awesome_notifications.core.enumerators.ActionType: me.carda.awesome_notifications.core.enumerators.ActionType[] valueList
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_go_back
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ROUNDED_LARGE_ICON
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$7: int[] $SwitchMap$com$pichillilorenzo$flutter_inappwebview_android$types$NavigationActionPolicy
com.google.firestore.v1.AggregationResult: com.google.protobuf.MapFieldLite aggregateFields_
com.google.android.gms.internal.measurement.zzfy$zza: java.lang.String zzh
com.google.android.gms.internal.measurement.zzfo$zzd: int zze
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_TAG
com.google.firestore.v1.Write: java.lang.Object operation_
me.carda.awesome_notifications.R$styleable: int ColorStateListItem_android_alpha
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$2: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int closeItemLayout
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int track
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long millisecondsSinceEpoch
com.google.android.gms.internal.measurement.zzfy$zzk: long zzx
com.google.gson.stream.JsonReader: java.lang.String peekedString
com.google.android.material.checkbox.MaterialCheckBox$SavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int btn_radio_off_to_on_mtrl_animation
me.carda.awesome_notifications.core.managers.SharedManager: java.lang.String TAG
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_WAKE_UP_SCREEN
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: java.lang.String confirmButtonTitle
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_edit_text_material
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_alert_dialog_button_dimen
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamilyFont_android_fontStyle
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CHANNEL_DESCRIPTION
me.carda.awesome_notifications.R$styleable: int GradientColor_android_type
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean hideExpandedLargeIcon
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String verticalScrollbarTrackColor
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int CompoundButton_buttonTint
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.lang.Boolean hideUrlBar
com.google.firestore.v1.Target: int RESUME_TOKEN_FIELD_NUMBER
me.carda.awesome_notifications.core.enumerators.MediaSource: me.carda.awesome_notifications.core.enumerators.MediaSource Unknown
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: java.lang.String origin
com.pichillilorenzo.flutter_inappwebview_android.R$color: int primary_text_default_material_light
com.google.firestore.v1.TargetChange: int CAUSE_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int autoSizeMaxTextSize
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AnimatedStateListDrawableCompat_android_enterFadeDuration
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_thumbTint
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.String TABLE_STRING
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified sessionLifecycleServiceBinder
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int buttonPanelSideLayout
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExt: java.lang.String id
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$8: java.lang.String val$defaultValue
com.google.gson.stream.JsonReader: int PEEKED_BEGIN_OBJECT
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$13: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.google.firestore.v1.StructuredAggregationQuery: int STRUCTURED_QUERY_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_cascading_menus_min_smallest_width
com.pichillilorenzo.flutter_inappwebview_android.webview.FlutterWebViewFactory: java.lang.String VIEW_TYPE_ID
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int highlight_alpha_material_dark
me.carda.awesome_notifications.core.enumerators.LogLevel: java.lang.String safeName
me.carda.awesome_notifications.core.models.NotificationChannelModel: long[] vibrationPattern
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.lang.String contentDisposition
com.pichillilorenzo.flutter_inappwebview_android.R$animator: int fragment_open_exit
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat_Light_Dialog_Alert
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Boolean hideLargeIconOnExpand
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort: java.lang.String name
com.google.android.gms.internal.measurement.zzfy$zzl: com.google.android.gms.internal.measurement.zzkc zzg
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String title
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: int type
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_viewInflaterClass
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Medium_Inverse
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean allowContentAccess
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.Integer millisecond
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String VAR_CONTENT_WORLD_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int browser_actions_context_menu_row
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_GET_LOCAL_TIMEZONE_IDENTIFIER
com.google.firestore.v1.BitSequence: com.google.firestore.v1.BitSequence DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listDividerAlertDialog
com.google.android.gms.internal.measurement.zzfy$zzo: double zzk
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPlaceholderRule_splitRatio
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: boolean hasGesture
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_alertDialogButtonGroupStyle
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int checkboxStyle
com.google.android.gms.common.internal.GetServiceRequest: android.os.Parcelable$Creator CREATOR
androidx.core.app.JobIntentService: boolean mStopped
com.pichillilorenzo.flutter_inappwebview_android.R$id: int edit_text_id
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamilyFont_fontStyle
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int dropdownListPreferredItemHeight
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModeWebSearchDrawable
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int buttonBarPositiveButtonStyle
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event$Companion Companion
com.pichillilorenzo.flutter_inappwebview_android.R$color: int material_grey_100
me.carda.awesome_notifications.core.background.BackgroundExecutor: java.lang.Class awesomeBackgroundExecutorClass
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource ContentUri
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods show
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: java.lang.String METHOD_CHANNEL_NAME_PREFIX
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mExpiredEventName
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
com.google.firestore.v1.ExistenceFilter: int COUNT_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient inAppWebViewClient
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer visibility
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] $VALUES
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.String TABLE_BOOLEAN
com.pichillilorenzo.flutter_inappwebview_android.R$id: int content
me.carda.awesome_notifications.core.utils.SerializableUtils: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tag_accessibility_actions
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String ticker
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_ThemeOverlay_AppCompat_Light
com.google.firebase.firestore.proto.Target: com.google.protobuf.Timestamp snapshotVersion_
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity chromeCustomTabsActivity
com.google.firestore.v1.TransactionOptions$ReadOnly: int READ_TIME_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$1: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity this$0
com.google.protobuf.Timestamp: int nanos_
com.google.firestore.v1.ArrayValue: int VALUES_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$3: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity this$0
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean saveFormData
com.google.android.gms.internal.measurement.zzfr$zzb: int zze
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfWeekAndTime
com.google.firestore.v1.WriteRequest: com.google.protobuf.ByteString streamToken_
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_COLOR
com.google.firebase.firestore.proto.Target: int RESUME_TOKEN_FIELD_NUMBER
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_CANCEL_NOTIFICATIONS_BY_CHANNEL_KEY
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_colorAccent
com.google.gson.stream.JsonScope: int EMPTY_OBJECT
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_titleTextColor
com.google.firestore.v1.BatchGetDocumentsResponse: int TRANSACTION_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$color: int secondary_text_default_material_dark
com.google.firestore.v1.StructuredQuery: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager: java.lang.String METHOD_CHANNEL_NAME
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_SHOW_GLOBAL_DND_PAGE
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: android.widget.SearchView searchView
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Promo
com.pichillilorenzo.flutter_inappwebview_android.R$color: int background_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ActionButton
me.carda.awesome_notifications.core.Definitions: java.lang.String BROADCAST_CREATED_NOTIFICATION
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int homeLayout
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int notification_bg_low_pressed
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tag_on_receive_content_listener
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_screen_content_include
com.google.firestore.v1.StructuredAggregationQuery: com.google.protobuf.Parser PARSER
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatContentTitle
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_textfield_search_activated_mtrl_alpha
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.platform.PlatformViewsController platformViewsController
me.carda.awesome_notifications.R$id: int ltr
com.google.firestore.v1.ListenResponse: int DOCUMENT_CHANGE_FIELD_NUMBER
com.google.firestore.v1.CommitRequest: int DATABASE_FIELD_NUMBER
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_CANCEL_NOTIFICATIONS_BY_GROUP_KEY
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback animationCallback
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingSettings: java.lang.Integer tracingMode
me.carda.awesome_notifications.core.threads.NotificationSender: android.content.Intent originalIntent
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertChallenge: java.security.Principal[] principals
com.google.firestore.v1.StructuredQuery: int END_AT_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods clearCache
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int autoSizeMinTextSize
com.google.android.gms.internal.measurement.zzfy$zzm: com.google.android.gms.internal.measurement.zzkc zzg
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: boolean allow
com.pichillilorenzo.flutter_inappwebview_android.types.SyncBaseCallbackResultImpl: java.util.concurrent.CountDownLatch latch
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_thumbTintMode
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler threadCompletionHandler
com.google.firestore.v1.StructuredQuery: int START_AT_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int compat_button_padding_vertical_material
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean builtInZoomControls
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_star_small
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_submitBackground
me.carda.awesome_notifications.R$styleable: int FontFamily_fontProviderFetchStrategy
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FragmentContainerView_android_tag
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColorItem_android_offset
com.google.firestore.v1.BatchGetDocumentsRequest: int TRANSACTION_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: double top
com.google.firestore.v1.StructuredQuery: int SELECT_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.R$id: int activity_chooser_view_content
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_contentInsetLeft
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat_Light_Dialog_FixedSize
com.google.android.gms.internal.measurement.zzfy$zzg: java.lang.String zzf
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title_Inverse
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT
com.google.android.gms.internal.measurement.zzgd$zzd: boolean zzj
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.util.Map evaluateJavaScriptContentWorldCallbacks
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int logo
com.google.android.gms.internal.measurement.zzfy$zzo: java.lang.String zzh
me.carda.awesome_notifications.core.threads.NotificationScheduler: java.lang.String TAG
com.google.firestore.v1.Target: java.lang.Object targetType_
com.pichillilorenzo.flutter_inappwebview_android.R$color: int background_floating_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int isLightTheme
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_popupTheme
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods loadUrl
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_bar_root
com.google.firestore.v1.ArrayValue: com.google.firestore.v1.ArrayValue DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzfy$zzj: java.lang.String zzh
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_menu_presenter
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings: java.lang.String LOG_TAG
com.google.firestore.v1.CommitResponse: com.google.protobuf.Timestamp commitTime_
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods canGoBackOrForward
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_trackTint
com.pichillilorenzo.flutter_inappwebview_android.R$id: int report_drawn
com.google.firestore.v1.Target$QueryTarget: int queryTypeCase_
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: java.lang.Integer action
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D: double height
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int textAppearanceSearchResultTitle
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int MAX_IMAGES
me.carda.awesome_notifications.R$id: int accessibility_custom_action_25
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Internal$ProtobufList strings_
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout pullToRefreshView
com.pichillilorenzo.flutter_inappwebview_android.R$color: int bright_foreground_inverse_material_dark
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback this$0
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int LinearLayoutCompat_Layout_android_layout_height
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission Badge
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int buttonBarStyle
com.google.firestore.v1.StructuredQuery$Filter: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_android_gravity
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzkc zzi
com.google.firestore.v1.WriteResponse: int STREAM_TOKEN_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$1: java.util.Map val$headers
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.Integer iconResourceId
me.carda.awesome_notifications.R$drawable: int notification_bg
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int commitIcon
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt: java.util.List customPathHandlers
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int panelMenuListWidth
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: long endTime
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction Update
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActivityFilter_activityAction
me.carda.awesome_notifications.R$id: int forever
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.AccessibilityEventsDelegate accessibilityEventsDelegate
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource FlutterBitmapAsset
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VISIBILITY
kotlinx.coroutines.android.HandlerDispatcherKt: android.view.Choreographer choreographer
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int PopupWindow_android_popupAnimationStyle
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified sessionsSettings
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int emojiCompatEnabled
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer day
com.google.android.material.sidesheet.SideSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout BigPicture
androidx.core.content.FileProvider: java.lang.String TAG_FILES_PATH
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String CODE_CLASS_NOT_FOUND
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int switchMinWidth
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_disabled_alpha_material_dark
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONLY_ALERT_ONCE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets lastWindowInsets
com.google.firestore.v1.ListenResponse: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int textColorAlertDialogListItem
com.google.android.gms.internal.measurement.zzjt: int zzd
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController: com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionSettings settings
me.carda.awesome_notifications.R$id: int tag_accessibility_actions
androidx.datastore.preferences.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigManager: java.lang.String LOG_TAG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_LIGHTS
me.carda.awesome_notifications.core.Definitions: java.lang.String SHARED_DISMISSED
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: java.lang.String initialReferrer
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_alertDialogTheme
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$3: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
me.carda.awesome_notifications.core.managers.PermissionManager: int REQUEST_CODE
io.flutter.plugin.platform.SingleViewPresentation: android.widget.FrameLayout container
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_GREEN
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int btn_radio_to_off_mtrl_ring_outer_path_animation
com.google.firebase.firestore.proto.Target: long lastListenSequenceNumber_
com.google.firestore.v1.Document: int bitField0_
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_DISMISS_NOTIFICATIONS_BY_CHANNEL_KEY
com.pichillilorenzo.flutter_inappwebview_android.R$id: int normal
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamilyFont_android_fontVariationSettings
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCurrentTargetOffsetTop
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NAME
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebViewMediaIntegrityApiStatus: int ENABLED
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager deferredComponentManager
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_spinnerStyle
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$1: java.lang.String val$message
com.pichillilorenzo.flutter_inappwebview_android.R$id: int edit_query
com.google.android.gms.internal.measurement.zzfy$zzi: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzao
com.google.android.gms.internal.measurement.zzfr$zzf: int zzg
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$1: android.webkit.JsResult val$result
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V23_Theme_AppCompat
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$2: com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort this$0
me.carda.awesome_notifications.core.managers.LifeCycleManager: java.util.List listeners
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType manifest
com.pichillilorenzo.flutter_inappwebview_android.R$color: int error_color_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextHelper_android_drawableTop
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mInitialMotionY
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings: java.lang.Integer slingshotDistance
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] ActionMenuItemView
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_android_textColorLink
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.Object lock
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuGroup_android_visible
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_fontVariationSettings
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsMenuItem: int id
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_star_black_48dp
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int tooltip_frame_dark
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int colorControlNormal
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController: com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobChannelDelegate channelDelegate
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_listChoiceIndicatorSingleAnimated
me.carda.awesome_notifications.core.managers.RepositoryManager: java.lang.String packageName
com.google.firestore.v1.TargetChange: int bitField0_
me.carda.awesome_notifications.core.models.NotificationButtonModel: java.lang.Boolean autoDismissible
com.google.firebase.firestore.proto.UnknownDocument: com.google.protobuf.Timestamp version_
me.carda.awesome_notifications.core.enumerators.ActionType: me.carda.awesome_notifications.core.enumerators.ActionType DisabledAction
com.google.firestore.v1.RunAggregationQueryRequest: java.lang.Object queryType_
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient inAppWebViewRenderProcessClient
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: java.lang.ClassLoader sClassLoader
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_VIBRATION
com.google.android.gms.signin.internal.zag: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior: int WEB_SOURCE_AND_WEB_TRIGGER
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: java.lang.String value
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_contentInsetStartWithNavigation
com.google.gson.stream.JsonReader: int PEEKED_NONE
com.google.android.gms.internal.measurement.zzfr$zzf: int zzh
com.google.firestore.v1.ExistenceFilter: com.google.firestore.v1.BloomFilter unchangedNames_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_dialogTheme
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToStartPosition
com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType: int value
me.carda.awesome_notifications.core.logs.Logger: java.text.DateFormat dateFormat
com.google.android.gms.internal.measurement.zzfy$zzc: com.google.android.gms.internal.measurement.zzll zzd
kotlinx.coroutines.internal.LimitedDispatcher: int runningWorkers
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] TextAppearance
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.lang.Boolean hideProgressBar
me.carda.awesome_notifications.core.Definitions: java.lang.String SCHEDULER_HELPER_ALL
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_textAllCaps
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: java.lang.String body
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: boolean isBindSuccess
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_textfield_search_material
com.pichillilorenzo.flutter_inappwebview_android.R$color: int bright_foreground_disabled_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int activityAction
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy: me.carda.awesome_notifications.core.enumerators.NotificationPrivacy Private
com.google.protobuf.Int64Value: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$id: int async
com.google.gson.stream.JsonReader: int NUMBER_CHAR_DIGIT
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_btn_radio_to_on_mtrl_015
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DISPATCHER_HANDLE
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int ic_call_answer_low
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int closeIcon
me.carda.awesome_notifications.core.Definitions: java.lang.String SHARED_MANAGER
com.google.firestore.v1.Cursor: com.google.firestore.v1.Cursor DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods setSettings
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_list_item_height_material
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String DETAILED_REQUIRED_ARGUMENTS
com.google.firestore.bundle.BundledQuery: int PARENT_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_search_url_text_pressed
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$2: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity this$0
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] ColorStateListItem
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_textfield_activated_mtrl_alpha
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$1: com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager this$0
com.google.firestore.v1.BitSequence: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$color: int foreground_material_dark
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String GET_SELECTED_TEXT_JS_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_2
androidx.appcompat.widget.AppCompatSpinner$SavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_prepend_shortcut_label
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModeBackground
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: boolean handledByClient
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_ALPHA
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface: java.lang.String LOG_TAG
com.google.firestore.v1.WriteResponse: int COMMIT_TIME_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int indeterminateProgressStyle
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Listener listeners
me.carda.awesome_notifications.R$styleable: int SplitPairRule_splitMaxAspectRatioInPortrait
com.google.firestore.v1.Write: int DELETE_FIELD_NUMBER
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_DISMISS_NOTIFICATIONS_BY_GROUP_KEY
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.lang.Runnable checkContextMenuShouldBeClosedTask
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int splitMinWidthDp
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String description
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int dividerPadding
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigManager: java.lang.String METHOD_CHANNEL_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionOverflowButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_thumbTextPadding
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ALLOW_GENERATED_REPLIES
me.carda.awesome_notifications.R$dimen: int notification_top_pad_large_text
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean newFrameAvailable
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MILLISECONDS_SINCE_EPOCH
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int btn_radio_to_off_mtrl_ring_outer_animation
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_bar_elevation_material
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: java.util.List initialOtherLikelyURLs
com.pichillilorenzo.flutter_inappwebview_android.R$color: int primary_material_dark
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobManager printJobManager
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHandler credentialDatabaseHandler
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int contentInsetStart
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: java.lang.String url
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.utils.SerializableUtils serializableUtils
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior: int DISABLED
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int View_paddingStart
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FragmentContainerView_android_name
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptAjaxRequestJS: com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript INTERCEPT_AJAX_REQUEST_JS_PLUGIN_SCRIPT
me.carda.awesome_notifications.R$id: int accessibility_custom_action_5
androidx.webkit.ProcessGlobalConfig: java.util.concurrent.atomic.AtomicReference sProcessGlobalConfig
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle_Inverse
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_small_icon_background_padding
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper: java.lang.String SQL_DELETE_PROTECTION_SPACE_TABLE
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String userAgent
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$9: java.lang.String val$finalValue
me.carda.awesome_notifications.R$attr: int splitMaxAspectRatioInLandscape
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Button
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listItemLayout
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean released
me.carda.awesome_notifications.core.models.NotificationModel: boolean groupSummary
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_ActionBar_TitleItem
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int fontProviderFetchStrategy
com.pichillilorenzo.flutter_inappwebview_android.R$id: int text2
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods canGoForward
com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType: com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.lang.String toolbarTopBackgroundColor
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_windowActionBarOverlay
me.carda.awesome_notifications.core.models.NotificationContentModel: java.util.List messages
me.carda.awesome_notifications.core.utils.StringUtils: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModeFindDrawable
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_search_view
com.google.firestore.v1.WriteResult: com.google.protobuf.Timestamp updateTime_
com.google.firestore.v1.BatchGetDocumentsRequest: java.lang.Object consistencySelector_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Small_Inverse
com.google.firestore.v1.RunAggregationQueryResponse: com.google.protobuf.ByteString transaction_
me.carda.awesome_notifications.R$styleable: int GradientColor_android_centerY
com.google.firestore.v1.Target: com.google.protobuf.Parser PARSER
com.google.gson.stream.JsonReader: int PEEKED_END_ARRAY
me.carda.awesome_notifications.core.managers.RepositoryManager: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: java.lang.Integer duplexMode
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int splitMaxAspectRatioInPortrait
com.google.protobuf.Any: com.google.protobuf.Any DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10: java.lang.String val$finalScriptToInject
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String defaultTextEncodingName
com.pichillilorenzo.flutter_inappwebview_android.R$id: int always
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebViewMediaIntegrityApiStatus: int ENABLED_WITHOUT_APP_IDENTITY
com.google.firestore.v1.StructuredQuery: int offset_
com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt: java.lang.String schemeFilter
me.carda.awesome_notifications.core.models.NotificationContentModel: java.util.Calendar displayedDate
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$3: com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager this$0
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$3: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat this$0
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModeCloseDrawable
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_AUTHENTICATION_REQUIRED
com.pichillilorenzo.flutter_inappwebview_android.R$color: int dim_foreground_disabled_material_dark
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String START_FOREGROUND_SERVICE
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: int PICKER_LEGACY
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$1: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.google.android.gms.internal.measurement.zzfy$zzj: int zzi
com.google.android.gms.internal.measurement.zzfr$zzb: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int placeholderActivityName
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_MODEL
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ic_arrow_drop_right_black_24dp
me.carda.awesome_notifications.core.Definitions: java.lang.String SELECT_NOTIFICATION
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int imageButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getProgress
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter mFullyDrawnReporter
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_GET_LOCALIZATION
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int viewInflaterClass
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Boolean fullScreenIntent
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_GET_BADGE_COUNT
me.carda.awesome_notifications.R$attr: int alpha
com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime: com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient: java.lang.String LOG_TAG
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzf
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_hideOnContentScroll
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$1: io.flutter.plugin.common.MethodChannel$Result val$result
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzp
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory LocalSharing
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int icon
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String REQUEST_NOTIFICATIONS_PERMISSION_METHOD
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_LAUNCHED_APP
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_popupWindowStyle
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuGroup_android_id
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_tint_spinner
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Boolean displayOnForeground
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabsHelper: java.lang.String BETA_PACKAGE
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int ALPHA_ANIMATION_DURATION
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager: int windowAutoincrementId
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int checkedTextViewStyle
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_DISPLAYED_LIFECYCLE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Menu
me.carda.awesome_notifications.core.enumerators.GroupSort: me.carda.awesome_notifications.core.enumerators.GroupSort Desc
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int fontProviderFetchTimeout
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource Uri
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle Background
com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult: java.lang.String extra
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_list_focused_holo
io.flutter.view.AccessibilityViewEmbedder: int nextFlutterId
me.carda.awesome_notifications.core.databases.SqLiteCypher: boolean isInitialized
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_INITIAL_DATE_TIME
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_selectableItemBackgroundBorderless
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_Compat_Notification_Title
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PromisePolyfillJS: java.lang.String PROMISE_POLYFILL_JS_PLUGIN_SCRIPT_GROUP_NAME
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String EXACT_ALARMS_PERMISSION_ERROR_CODE
me.carda.awesome_notifications.R$styleable: int FontFamilyFont_fontStyle
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$1: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$12: android.view.ActionMode$Callback val$callback
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$14: int val$y
com.google.firestore.v1.TargetChange: com.google.protobuf.Internal$IntList targetIds_
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$1: com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface this$0
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_RatingBar
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnConfigurationChangedListeners
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image image
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DRAWABLE
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: java.lang.String label
me.carda.awesome_notifications.core.models.NotificationContentModel: java.util.List bodyLocArgs
me.carda.awesome_notifications.core.Definitions: java.lang.String SHARED_PREFERENCES_CHANNEL_MANAGER
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods canGoBack
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$12: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt: int type
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String NAME
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ACTION_JSON
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ActionBroadcastReceiver: java.lang.String LOG_TAG
com.google.gson.stream.JsonReader: int PEEKED_UNQUOTED_NAME
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods loadFile
com.google.android.gms.internal.measurement.zzfy$zzk: long zzn
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzkc zzo
com.google.android.gms.internal.measurement.zzfr$zza$zza: com.google.android.gms.internal.measurement.zzfr$zza$zza zzc
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_27
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ratingbar_small_material
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERIODICALLY_SHOW_WITH_DURATION
com.google.firestore.v1.Precondition: int EXISTS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_RatingBar_Indicator
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_DrawerArrowToggle
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory MissedCall
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int windowFixedWidthMajor
com.pichillilorenzo.flutter_inappwebview_android.R$color: int material_grey_600
com.google.firebase.firestore.proto.Target: int TARGET_ID_FIELD_NUMBER
me.carda.awesome_notifications.core.utils.BitmapUtils: java.lang.String TAG
me.carda.awesome_notifications.DartBackgroundExecutor: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_btn_default_mtrl_shape
com.google.firestore.v1.StructuredQuery$UnaryFilter: int op_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_actionLayout
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType MAKE_HTTPS
me.carda.awesome_notifications.R$id: int blocking
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int DrawerArrowToggle_gapBetweenBars
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_activity_chooser_view
me.carda.awesome_notifications.core.managers.ChannelManager: me.carda.awesome_notifications.core.managers.ChannelManager instance
androidx.fragment.app.FragmentState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_subtitle
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_background_cache_hint_selector_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_android_titleCondensed
com.google.android.gms.internal.measurement.zzgd$zzc: com.google.android.gms.internal.measurement.zzkc zzf
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExt: com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate channelDelegate
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager inAppBrowserManager
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_autoSizePresetSizes
me.carda.awesome_notifications.core.managers.ChannelManager: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialDao: java.lang.String[] projection
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$20: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_btn_switch_to_on_mtrl_00001
com.google.android.gms.internal.measurement.zzfo$zza: int zze
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_commitIcon
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuView_android_itemBackground
com.pichillilorenzo.flutter_inappwebview_android.R$color: int switch_thumb_disabled_material_dark
com.dexterous.flutterlocalnotifications.models.PersonDetails: com.dexterous.flutterlocalnotifications.models.IconSource iconBitmapSource
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.lang.Runnable checkScrollStoppedTask
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: int CHROME_CUSTOM_TAB_REQUEST_CODE
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mMediumAnimationDuration
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.util.Map contextMenu
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission Vibration
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabsHelper: java.lang.String sPackageNameToUse
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.Integer minute
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionDropDownStyle
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.lang.String textEncodingName
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Title_Inverse
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_SeekBar_Discrete
com.pichillilorenzo.flutter_inappwebview_android.R$string: int call_notification_screening_text
com.google.android.gms.internal.measurement.zzfy$zzj: int zze
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$2: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity this$0
com.google.firestore.admin.v1.Index: java.lang.String name_
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_METHOD
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getScrollX
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_android_imeOptions
com.google.firestore.v1.StructuredQuery$FieldFilter: int VALUE_FIELD_NUMBER
androidx.core.content.FileProvider: java.lang.String TAG_EXTERNAL_MEDIA
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AlertDialog_showTitle
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource ByteArray
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_secondary_text_material_light
me.carda.awesome_notifications.core.enumerators.MediaSource: me.carda.awesome_notifications.core.enumerators.MediaSource Network
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_button_min_width_overflow_material
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int windowFixedHeightMajor
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ListPopupWindow
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int splitLayoutDirection
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatSeekBar_tickMarkTint
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$6: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.google.android.material.button.MaterialButton$SavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int notification_tile_bg
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: int widthMils
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_android_alphabeticShortcut
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10: com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld val$contentWorld
com.google.firestore.v1.DocumentChange: int targetIdsMemoizedSerializedSize
com.google.firebase.firestore.proto.WriteBatch: int LOCAL_WRITE_TIME_FIELD_NUMBER
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec createArgsCodec
com.google.firestore.v1.BitSequence: int padding_
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: java.lang.Object icon
me.carda.awesome_notifications.R$styleable: int FontFamilyFont_fontWeight
com.google.firestore.v1.StructuredAggregationQuery: java.lang.Object queryType_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_windowMinWidthMinor
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ViewBackgroundHelper_android_background
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int alwaysExpand
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String CACHE_DIRECTORY_BASE_PATH
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Tooltip
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified backgroundDispatcher
com.google.firebase.firestore.proto.MaybeDocument: int UNKNOWN_DOCUMENT_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_text_select_handle_right_mtrl
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatSeekBar_tickMark
me.carda.awesome_notifications.R$id: int tag_on_apply_window_listener
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Fragment_android_name
me.carda.awesome_notifications.R$id: int rtl
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.Boolean criticalAlerts
com.pichillilorenzo.flutter_inappwebview_android.R$color: int primary_text_default_material_dark
androidx.fragment.app.FragmentManagerState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int buttonBarNeutralButtonStyle
com.google.android.gms.internal.measurement.zzfr$zza: com.google.android.gms.internal.measurement.zzfr$zza zzc
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission Light
com.google.gson.stream.JsonScope: int NONEMPTY_DOCUMENT
com.google.android.gms.internal.measurement.zzfy$zzi: java.lang.String zzf
com.pichillilorenzo.flutter_inappwebview_android.R$id: int dialog_button
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$6: android.os.Message val$dontResend
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$13: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairRule_splitRatio
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuView_preserveIconSpacing
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_MODEL_SCHEDULE
me.carda.awesome_notifications.core.externalLibs.CronExpression: boolean lastdayOfMonth
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SHOW_BADGE
com.google.firestore.v1.DocumentTransform$FieldTransform: int REMOVE_ALL_FROM_ARRAY_FIELD_NUMBER
me.carda.awesome_notifications.core.enumerators.GroupSort: me.carda.awesome_notifications.core.enumerators.GroupSort[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean useWideViewPort
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: java.lang.String LOG_TAG
me.carda.awesome_notifications.core.managers.ActionManager: java.util.Map actionCache
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: boolean isLocked
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActionBar_TabBar_Inverse
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_NEW_FCM_TOKEN
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int titleMarginStart
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean hardwareAcceleration
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_searchIcon
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_CONTENT_TITLE
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods clearFocus
me.carda.awesome_notifications.core.background.BackgroundExecutor: java.lang.Long actionCallbackHandle
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance Min
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_divider
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$1: com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager this$0
com.google.firestore.v1.ListenResponse: int DOCUMENT_DELETE_FIELD_NUMBER
kotlinx.coroutines.internal.DispatchedContinuation: java.lang.Object _reusableCancellableContinuation
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_useDrawerArrowDrawable
me.carda.awesome_notifications.R$style: int TextAppearance_Compat_Notification_Line2
com.pichillilorenzo.flutter_inappwebview_android.Util: java.lang.String ANDROID_ASSET_URL
com.pichillilorenzo.flutter_inappwebview_android.R$id: int info
com.google.firestore.v1.DocumentTransform$FieldTransform: int MINIMUM_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean playSound
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$7: android.webkit.JsResult val$result
me.carda.awesome_notifications.core.models.NotificationChannelModel: me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour groupAlertBehavior
com.google.android.gms.internal.measurement.zzfy$zzf: int zzj
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource DrawableResource
com.google.android.gms.internal.measurement.zzfo$zzb: boolean zzl
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$1: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity val$chromeCustomTabsActivity
me.carda.awesome_notifications.R$styleable: int Capability_shortcutMatchRequired
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_windowFixedWidthMajor
me.carda.awesome_notifications.core.enumerators.MediaSource: me.carda.awesome_notifications.core.enumerators.MediaSource File
com.google.firestore.v1.StructuredQuery$Projection: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String VAR_RANDOM_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$id: int icon_group
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission Sound
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_suggestionRowLayout
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialDao: com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper credentialDatabaseHelper
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int contentInsetLeft
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_tint_switch_track
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_URI
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ICON
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map labelToSubtype
com.pichillilorenzo.flutter_inappwebview_android.R$id: int message
me.carda.awesome_notifications.R$id: int accessibility_custom_action_8
com.google.gson.stream.JsonReader: int PEEKED_SINGLE_QUOTED
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String SECOND
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int backgroundTintMode
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.util.List webMessageListeners
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int divider
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Display3
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] LinearLayoutCompat_Layout
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_android_checked
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_textAppearanceListItemSmall
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_edit_text_inset_bottom_material
me.carda.awesome_notifications.core.services.ForegroundService$ForegroundServiceIntent: me.carda.awesome_notifications.core.models.NotificationModel notificationModel
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage: android.webkit.WebStorage webStorageManager
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object sendSegment
kotlinx.coroutines.CancellableContinuationImpl: int _decisionAndIndex
androidx.core.content.FileProvider: java.lang.String META_DATA_FILE_PROVIDER_PATHS
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript$1: com.pichillilorenzo.flutter_inappwebview_android.types.UserScript this$0
me.carda.awesome_notifications.R$attr: int lStar
me.carda.awesome_notifications.AwesomeNotificationsPlugin: me.carda.awesome_notifications.core.listeners.AwesomeEventListener awesomeEventListener
com.google.firestore.v1.Target$DocumentsTarget: com.google.protobuf.Internal$ProtobufList documents_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_textAppearanceLargePopupMenu
com.google.firestore.v1.WriteRequest: int LABELS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_drawableTopCompat
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int btn_checkbox_to_unchecked_box_inner_merged_animation
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: java.lang.String DATABASE_NAME
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.JavaScriptBridgeJS: java.lang.String JAVASCRIPT_UTIL_VAR_NAME
com.pichillilorenzo.flutter_inappwebview_android.WebViewFeatureManager: java.lang.String LOG_TAG
com.google.firestore.v1.StructuredQuery$Filter: com.google.firestore.v1.StructuredQuery$Filter DEFAULT_INSTANCE
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_PERMISSIONS
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_GREEN
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzbf
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzj
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModeStyle
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$9: com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript val$pluginScript
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Small
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$1: com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage this$0
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum: com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$bool: int abc_config_actionMenuItemAllCaps
com.google.type.LatLng: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$id: int browser_actions_menu_item_text
me.carda.awesome_notifications.R$integer: int status_bar_notification_info_maxnum
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_PRIVATE_MESSAGE
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean javaScriptEnabled
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_LED_COLOR
com.google.gson.stream.JsonWriter: java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS
me.carda.awesome_notifications.R$id: int time
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String serifFontFamily
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$4: com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager this$0
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$DownloadStartListener: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt: java.lang.String webMessageChannelId
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_SHOW_NOTIFICATION_PAGE
com.google.firestore.v1.DocumentMask: int FIELD_PATHS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean clearSessionCache
me.carda.awesome_notifications.R$styleable: int SplitPlaceholderRule_splitMaxAspectRatioInLandscape
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_color_highlight_material
me.carda.awesome_notifications.R$dimen: int notification_action_icon_size
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceDao protectionSpaceDao
com.pichillilorenzo.flutter_inappwebview_android.R$string: int fallback_menu_item_copy_link
com.google.android.gms.internal.measurement.zzfy$zzk: long zzbg
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_colorError
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_btn_check_to_on_mtrl_000
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.Time repeatTime
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_showAsAction
com.google.firebase.crashlytics.ktx.FirebaseCrashlyticsKtxRegistrar: com.google.firebase.crashlytics.ktx.FirebaseCrashlyticsKtxRegistrar$Companion Companion
com.pichillilorenzo.flutter_inappwebview_android.R$id: int line3
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2: java.lang.String val$realm
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ViewBackgroundHelper_backgroundTint
me.carda.awesome_notifications.R$attr: int ttcIndex
com.google.firestore.admin.v1.Index: int state_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat_Light_Dialog_MinWidth
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView: com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessWebViewChannelDelegate channelDelegate
com.google.android.gms.internal.measurement.zzfy$zzd: com.google.android.gms.internal.measurement.zzfy$zzm zzh
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_autoSizeMaxTextSize
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods stopLoading
com.pichillilorenzo.flutter_inappwebview_android.R$color: int material_deep_teal_500
com.google.firebase.firestore.proto.UnknownDocument: com.google.firebase.firestore.proto.UnknownDocument DEFAULT_INSTANCE
me.carda.awesome_notifications.R$id: int accessibility_custom_action_22
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int StateListDrawable_android_exitFadeDuration
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tag_on_receive_content_mime_types
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_star_half_black_48dp
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tag_window_insets_animation_callback
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Subhead
me.carda.awesome_notifications.core.Definitions: java.lang.String SHARED_CHANNEL_GROUP
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialContract$FeedEntry: java.lang.String TABLE_NAME
me.carda.awesome_notifications.core.utils.SerializableUtils: me.carda.awesome_notifications.core.utils.EnumUtils enumUtils
me.carda.awesome_notifications.core.threads.NotificationSender: me.carda.awesome_notifications.core.enumerators.NotificationSource createdSource
com.google.protobuf.Any: int TYPE_URL_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModeSplitBackground
me.carda.awesome_notifications.R$styleable: int[] SplitPlaceholderRule
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer priority
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2: android.webkit.HttpAuthHandler val$handler
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExt pathHandler
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatSummaryText
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_share
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_button_inset_vertical_material
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_background
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dropdownitem_text_padding_left
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior: int APP_SOURCE_AND_WEB_TRIGGER
me.carda.awesome_notifications.R$attr: int fontStyle
com.pichillilorenzo.flutter_inappwebview_android.R$id: int search_edit_frame
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Spinner_android_entries
com.google.protobuf.Timestamp: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int controlBackground
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextHelper_android_drawableStart
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int abc_tooltip_enter
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction: java.lang.String selector
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Large_Inverse
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_DayNight_Dialog_Alert
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission Alert
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int selectableItemBackground
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: java.lang.String LOG_TAG
me.carda.awesome_notifications.R$attr: int fontVariationSettings
com.pichillilorenzo.flutter_inappwebview_android.R$id: int alwaysAllow
me.carda.awesome_notifications.core.models.NotificationModel: me.carda.awesome_notifications.core.models.NotificationScheduleModel schedule
com.pichillilorenzo.flutter_inappwebview_android.R$color: int primary_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dialog_list_padding_bottom_no_buttons
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$2: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler this$0
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: java.lang.String realm
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int contentInsetEndWithActions
com.pichillilorenzo.flutter_inappwebview_android.R$animator: int fragment_fade_enter
com.pichillilorenzo.flutter_inappwebview_android.R$string: int call_notification_ongoing_text
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String CODE_BACKGROUND_EXECUTION_EXCEPTION
com.google.android.gms.internal.measurement.zzfy$zzk: long zzam
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean allowUniversalAccessFromFileURLs
com.google.firestore.v1.TransactionOptions: int modeCase_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_AlertDialog_AppCompat_Light
com.pichillilorenzo.flutter_inappwebview_android.R$style: int ThemeOverlay_AppCompat_Dark_ActionBar
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int LinearLayoutCompat_Layout_android_layout_width
me.carda.awesome_notifications.R$styleable: int FontFamily_fontProviderCerts
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int LinearLayoutCompat_android_gravity
me.carda.awesome_notifications.R$style: int TextAppearance_Compat_Notification
me.carda.awesome_notifications.R$id: int accessibility_custom_action_10
me.carda.awesome_notifications.R$id: int info
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: java.lang.Integer order
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy$1: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy this$0
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: java.util.Map registeredPlugins
com.google.type.LatLng: double longitude_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int alpha
com.google.android.gms.internal.measurement.zzgd$zzd: double zzk
com.google.firestore.v1.ExistenceFilter: int count_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int firstBaselineToTopHeight
me.carda.awesome_notifications.R$dimen: int notification_large_icon_height
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.List unlessDomain
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PAYLOAD
com.google.firestore.v1.StructuredQuery: int FROM_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ActionBar
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerManager: com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerChannelDelegate channelDelegate
com.pichillilorenzo.flutter_inappwebview_android.R$id: int alwaysDisallow
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_PAYLOAD
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_closeIcon
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_subtitleTextStyle
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int finishPrimaryWithPlaceholder
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean showBadge
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int floating_action_mode_item
me.carda.awesome_notifications.R$styleable: int ColorStateListItem_android_color
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int shortcutMatchRequired
me.carda.awesome_notifications.R$attr: int fontProviderFetchTimeout
com.google.firestore.v1.TargetChange: com.google.rpc.Status cause_
me.carda.awesome_notifications.R$styleable: int SplitPairFilter_primaryActivityName
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Internal$ProtobufList baseWrites_
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnWindowFocusEventJS: java.lang.String ON_WINDOW_FOCUS_EVENT_JS_PLUGIN_SCRIPT_GROUP_NAME
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout[] valueList
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ActionBar_TabText
com.dexterous.flutterlocalnotifications.models.NotificationAction: com.dexterous.flutterlocalnotifications.models.IconSource iconSource
me.carda.awesome_notifications.core.managers.PermissionManager: java.util.List oldAndroidShouldShowRationale
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_ThemeOverlay_AppCompat_Dark
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String METHOD_CHANNEL
me.carda.awesome_notifications.core.managers.CancellationManager: java.lang.String TAG
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum: com.google.protobuf.Parser PARSER
me.carda.awesome_notifications.R$styleable: int SplitPairFilter_secondaryActivityAction
com.google.protobuf.Int64Value: com.google.protobuf.Int64Value DEFAULT_INSTANCE
me.carda.awesome_notifications.core.services.ForegroundService: java.util.Map serviceIntentStack
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_body_1_material
me.carda.awesome_notifications.R$id: int line3
com.google.firestore.v1.DocumentMask: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView: java.lang.String id
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$2: com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager this$0
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState error
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: java.lang.Object concurrencyLock
com.google.android.gms.common.api.internal.BasePendingResult: com.google.android.gms.common.api.internal.zas resultGuardian
kotlinx.coroutines.android.AndroidExceptionPreHandler: java.lang.Object _preHandler
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionButtonStyle
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ENABLE_LIGHTS
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean loadsImagesAutomatically
com.google.android.gms.internal.measurement.zzfr$zzb: java.lang.String zzf
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzh
com.dexterous.flutterlocalnotifications.models.NotificationDetails: int[] additionalFlags
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int srcCompat
me.carda.awesome_notifications.R$styleable: int FontFamilyFont_android_ttcIndex
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: java.lang.String contentType
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean useShouldOverrideUrlLoading
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_Button
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_DialogWindowTitle_AppCompat
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_SubmenuArrow
com.dexterous.flutterlocalnotifications.models.ScheduleMode: com.dexterous.flutterlocalnotifications.models.ScheduleMode[] $VALUES
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_REPEATS
com.google.android.gms.internal.measurement.zzfy$zzn: com.google.android.gms.internal.measurement.zzfy$zzn zzc
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_RESET_BADGE
me.carda.awesome_notifications.core.services.ForegroundService$ForegroundServiceIntent: me.carda.awesome_notifications.core.enumerators.ForegroundStartMode startMode
com.google.android.gms.internal.measurement.zzfr$zza$zzf: java.lang.String zzg
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$style: int ThemeOverlay_AppCompat
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_control_background_material
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzap
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$8: android.webkit.WebView val$view
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mTotalDragDistance
com.google.firestore.v1.StructuredQuery$Order: int DIRECTION_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzdw: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_android_hint
me.carda.awesome_notifications.R$id: int tag_unhandled_key_event_manager
me.carda.awesome_notifications.core.models.NotificationMessageModel: java.lang.String message
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int disabled_alpha_material_dark
com.google.firebase.firestore.proto.Target: int DOCUMENTS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Spinner_Underlined
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Fragment_android_id
com.google.firestore.v1.DocumentChange: int REMOVED_TARGET_IDS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ListView_DropDown
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.TrustedWebActivity: java.lang.String LOG_TAG
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy: me.carda.awesome_notifications.core.enumerators.NotificationPrivacy Public
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DateAndTime
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_hint_foreground_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_16
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object closeHandler
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ic_menu_share_mtrl_alpha
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings$1: int[] $SwitchMap$android$webkit$WebSettings$LayoutAlgorithm
com.pichillilorenzo.flutter_inappwebview_android.R$interpolator: int btn_checkbox_checked_mtrl_animation_interpolator_1
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] ActionBar
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActionMode_Inverse
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_menu_alt_shortcut_label
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] AnimatedStateListDrawableTransition
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzae
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_OFF_MS
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] mNestedScrollingV2ConsumedCompat
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType none
com.google.firestore.v1.StructuredQuery$Projection: com.google.protobuf.Internal$ProtobufList fields_
me.carda.awesome_notifications.core.managers.SharedManager: java.lang.String reference
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int DrawerArrowToggle_barLength
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_display_2_material
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods loadData
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: byte[] body
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_progressBarStyle
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String CODE_SQLITE_NOT_AVAILABLE
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String horizontalScrollbarTrackColor
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum: int FIELD_FIELD_NUMBER
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.TimeZone timeZone
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_image
io.flutter.embedding.engine.FlutterJNI: boolean prefetchDefaultFontManagerCalled
com.google.android.gms.internal.measurement.zzfr$zza$zzc: com.google.android.gms.internal.measurement.zzfr$zza$zzc zzc
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SOUND_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_DayNight_Dialog_MinWidth
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: android.os.Handler imeHandler
com.google.firestore.v1.TargetChange: int TARGET_IDS_FIELD_NUMBER
com.google.firestore.v1.StructuredQuery$Order: int bitField0_
io.flutter.plugin.platform.SingleViewPresentation: boolean startFocused
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_editTextStyle
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CHRONOMETER
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$6: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient this$0
com.pichillilorenzo.flutter_inappwebview_android.R$integer: int status_bar_notification_info_maxnum
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$12: int val$itemId
com.google.android.gms.internal.measurement.zzfy$zzk: boolean zzbj
io.flutter.embedding.engine.FlutterJNI: io.flutter.plugin.localization.LocalizationPlugin localizationPlugin
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$8: java.util.Map val$screenshotConfiguration
me.carda.awesome_notifications.core.managers.CancellationManager: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int tooltipForegroundColor
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int tooltip_margin
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy$1: java.util.ArrayList val$webViewListeners
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _state
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.Boolean addDefaultShareMenuItem
com.google.android.gms.internal.measurement.zzfr$zzf: com.google.android.gms.internal.measurement.zzfr$zzf zzc
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods requestFocusNodeHref
com.google.firestore.v1.MapValue: com.google.firestore.v1.MapValue DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int notification_icon_background
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings: java.lang.Boolean enabled
me.carda.awesome_notifications.core.managers.LifeCycleManager: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle appLifeCycle
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_DEFAULT_COLOR
com.google.firestore.v1.Value: com.google.firestore.v1.Value DEFAULT_INSTANCE
io.grpc.internal.SerializingExecutor: int runState
com.google.rpc.Status: int DETAILS_FIELD_NUMBER
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean notifiedDestroy
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mOriginalOffsetTop
com.google.android.gms.internal.measurement.zzfy$zzb: com.google.android.gms.internal.measurement.zzll zzd
me.carda.awesome_notifications.R$styleable: int GradientColorItem_android_color
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: java.lang.String LOG_TAG
me.carda.awesome_notifications.core.Definitions: java.lang.String BROADCAST_FCM_TOKEN
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_Empty
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean databaseEnabled
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_searchViewStyle
me.carda.awesome_notifications.core.threads.NotificationScheduler: java.lang.ref.WeakReference wContextReference
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int buttonTintMode
com.pichillilorenzo.flutter_inappwebview_android.R$color: int background_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int hint_pressed_alpha_material_light
com.google.firestore.v1.Value: int GEO_POINT_VALUE_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfy$zzk: int zzf
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_CompoundButton_Switch
me.carda.awesome_notifications.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout: com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshChannelDelegate channelDelegate
com.pichillilorenzo.flutter_inappwebview_android.R$animator: int fragment_fade_exit
com.pichillilorenzo.flutter_inappwebview_android.R$id: int view_tree_lifecycle_owner
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_listMenuViewStyle
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int switchPadding
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V21_Theme_AppCompat_Light
me.carda.awesome_notifications.R$drawable: int ic_call_answer
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionMode_closeItemLayout
com.google.firestore.v1.Target$QueryTarget: com.google.protobuf.Parser PARSER
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _exceptionsHolder
com.google.firebase.firestore.proto.NoDocument: com.google.protobuf.Parser PARSER
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: long startTime
com.pichillilorenzo.flutter_inappwebview_android.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.google.protobuf.GeneratedMessageLite$ExtendableMessage: com.google.protobuf.FieldSet extensions
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: androidx.browser.customtabs.CustomTabsSession mCustomTabsSession
me.carda.awesome_notifications.R$drawable: int ic_call_decline
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ID
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_HIDE_LARGE_ICON_ON_EXPAND
com.google.android.gms.internal.measurement.zzfy$zzk: boolean zzbb
com.google.firestore.v1.Document: com.google.protobuf.Timestamp createTime_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Animation_AppCompat_Tooltip
me.carda.awesome_notifications.R$id: int notification_main_column
com.google.android.gms.internal.measurement.zzfo$zza: com.google.android.gms.internal.measurement.zzkc zzg
com.pichillilorenzo.flutter_inappwebview_android.R$color: int bright_foreground_material_dark
com.google.firebase.firestore.proto.Target: int targetTypeCase_
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings customSettings
me.carda.awesome_notifications.R$styleable: int FontFamily_fontProviderFetchTimeout
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$6: android.os.Message val$dontResend
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_drawableTintMode
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_btn_radio_to_on_mtrl_000
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar secondaryToolbar
me.carda.awesome_notifications.core.utils.AudioUtils: me.carda.awesome_notifications.core.utils.AudioUtils instance
me.carda.awesome_notifications.core.Definitions: java.lang.String SHARED_SCHEDULED_NOT_GROUPS
me.carda.awesome_notifications.core.threads.NotificationScheduler: long endTime
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PRIORITY
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BUTTON_KEY
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int CIRCLE_DIAMETER_LARGE
com.google.firestore.v1.BloomFilter: com.google.firestore.v1.BloomFilter DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_DayNight_Dialog
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamilyFont_android_ttcIndex
me.carda.awesome_notifications.core.models.NotificationButtonModel: java.lang.Boolean isDangerousOption
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getSettings
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper customTabActivityHelper
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean enterpriseAuthenticationAppLinkPolicyEnabled
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_cascading_menu_item_layout
me.carda.awesome_notifications.core.Definitions: java.lang.String MEDIA_VALID_NETWORK
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Large_Inverse
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_panel_menu_list_width
me.carda.awesome_notifications.core.threads.NotificationSender: java.lang.Boolean created
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_SHOW_ALARM_PAGE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat_Light_DarkActionBar
androidx.datastore.preferences.PreferencesProto$Value: int STRING_SET_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int tooltipText
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_DISPLAY_ON_BACKGROUND
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_CREATE_NOTIFICATION
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_right_icon_size
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int View_android_theme
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.webview.FlutterWebViewFactory flutterWebViewFactory
com.pichillilorenzo.flutter_inappwebview_android.R$id: int title_template
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Spinner
com.pichillilorenzo.flutter_inappwebview_android.R$id: int fragment_container_view_tag
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher mOnBackPressedDispatcher
me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType: me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType Ringtone
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$1: com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2 this$1
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: android.os.Handler mainLooperHandler
com.google.firestore.v1.DocumentTransform$FieldTransform: int transformTypeCase_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int tickMarkTint
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: java.lang.String certificatePath
me.carda.awesome_notifications.R$styleable: int SplitPlaceholderRule_animationBackgroundColor
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int dividerVertical
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: java.lang.String groupName
com.google.android.gms.internal.measurement.zzfy$zzk: int zzac
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface$WebMessagePayloadType: int TYPE_STRING
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_WEEKOFMONTH
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_KEY
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$AttributionBehavior: int APP_SOURCE_AND_APP_TRIGGER
com.google.firestore.v1.StructuredQuery$CollectionSelector: boolean allDescendants_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] SearchView
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ACTION_DATE
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_searchview_description_voice
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BOT
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String icon
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ListView
com.google.firestore.v1.StructuredQuery$Order: int FIELD_FIELD_NUMBER
com.google.firebase.firestore.proto.Target: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_backgroundSplit
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionBarPopupTheme
me.carda.awesome_notifications.R$dimen: int notification_main_column_padding_top
com.google.firestore.v1.WriteRequest: java.lang.String streamId_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_homeLayout
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPlaceholderRule_tag
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnWindowFocusEventJS: java.lang.String ON_WINDOW_FOCUS_EVENT_JS_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int textAppearanceSearchResultSubtitle
com.google.android.gms.internal.measurement.zzfy$zzl: int zzf
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle appLifeCycle
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: java.lang.String message
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager: java.lang.String LOG_TAG
androidx.recyclerview.widget.RecyclerView$SavedState: android.os.Parcelable$Creator CREATOR
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_REMOVE_NOTIFICATION_CHANNEL
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ActionBroadcastReceiver: java.lang.String KEY_URL_TITLE
me.carda.awesome_notifications.R$drawable: int ic_call_decline_low
com.google.firebase.firestore.proto.UnknownDocument: com.google.protobuf.Parser PARSER
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout[] $VALUES
me.carda.awesome_notifications.R$id: int alwaysAllow
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Body2
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.util.Set requestedWithHeaderOriginAllowList
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.Value value_
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: int previousAuthRequestFailureCount
com.google.android.gms.internal.measurement.zzfo$zzb: java.lang.String zzg
com.google.firestore.v1.StructuredQuery$Filter: java.lang.Object filterType_
com.pichillilorenzo.flutter_inappwebview_android.Util$PrivateKeyAndCertificates: java.security.PrivateKey privateKey
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int btn_checkbox_unchecked_to_checked_mtrl_animation
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.RepeatInterval repeatInterval
androidx.browser.customtabs.CustomTabsServiceConnection: android.content.Context mApplicationContext
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_listDividerAlertDialog
me.carda.awesome_notifications.core.Definitions: java.lang.String INITIALIZE_CHANNELS
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ic_voice_search_api_material
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: java.lang.String safeName
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String tag
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_NoActionBar
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModeTheme
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime injectionTime
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V22_Theme_AppCompat_Light
com.pichillilorenzo.flutter_inappwebview_android.R$id: int browser_actions_header_text
com.google.android.gms.measurement.internal.zzbf: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfr$zzd: long zzf
com.google.android.gms.internal.measurement.zzfy$zzk: long zzav
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_bar_content_inset_material
me.carda.awesome_notifications.R$attr: int splitMinWidthDp
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods close
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_5
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_RatingBar_Small
me.carda.awesome_notifications.core.utils.CalendarUtils: boolean $assertionsDisabled
com.pichillilorenzo.flutter_inappwebview_android.R$color: int material_grey_300
me.carda.awesome_notifications.R$id: int accessibility_custom_action_26
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_DropDownItem_Spinner
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer number
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_0
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper db
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] SwitchCompat
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOnMs
com.google.android.gms.internal.measurement.zzfo$zzc: com.google.android.gms.internal.measurement.zzfo$zzd zzg
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$5: androidx.webkit.SafeBrowsingResponseCompat val$callback
com.google.firestore.v1.Value: com.google.protobuf.Parser PARSER
me.carda.awesome_notifications.R$styleable: int Fragment_android_tag
com.google.gson.stream.JsonReader: int PEEKED_SINGLE_QUOTED_NAME
me.carda.awesome_notifications.core.managers.BadgeManager: me.carda.awesome_notifications.core.managers.BadgeManager instance
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder: me.carda.awesome_notifications.core.completion_handlers.BitmapCompletionHandler completionHandler
com.pichillilorenzo.flutter_inappwebview_android.R$id: int custom
me.carda.awesome_notifications.core.Definitions: java.lang.String MEDIA_VALID_RESOURCE
com.google.firestore.v1.DocumentTransform$FieldTransform: int APPEND_MISSING_ELEMENTS_FIELD_NUMBER
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_IMPORTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V21_Theme_AppCompat
me.carda.awesome_notifications.core.Definitions: java.lang.String BROADCAST_SILENT_ACTION
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V7_Widget_AppCompat_EditText
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$13: int val$itemId
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_TIMESTAMP
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_PopupWindow
com.google.android.gms.internal.measurement.zzfy$zzk: long zzau
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_bar_subtitle_bottom_margin_material
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int StateListDrawable_android_constantSize
me.carda.awesome_notifications.R$drawable: int notification_template_icon_bg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean allowBackgroundAudioPlaying
me.carda.awesome_notifications.core.enumerators.NotificationSource: me.carda.awesome_notifications.core.enumerators.NotificationSource[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_subtitleTextColor
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_alert_dialog_button_bar_material
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.Integer year
com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime: int value
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager$1: com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager this$0
com.google.android.gms.internal.measurement.zzfr$zzg: com.google.android.gms.internal.measurement.zzfr$zzg zzc
com.google.android.gms.internal.measurement.zzfy$zzo: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_list_selector_background_transition_holo_dark
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: int COUNT_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Light_PopupMenu
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ACTIONS
me.carda.awesome_notifications.core.utils.JsonUtils: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_collapseContentDescription
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int abc_fade_out
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V21_ThemeOverlay_AppCompat_Dialog
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController$3: com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController this$0
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager: java.util.Map windowWebViewMessages
me.carda.awesome_notifications.R$color: int notification_icon_bg_color
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.protobuf.Parser PARSER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean usesChronometer
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_Widget_AppCompat_ExpandedMenu_Item
me.carda.awesome_notifications.core.threads.NotificationScheduler: java.lang.Boolean scheduled
com.google.android.gms.internal.measurement.zzfr$zzh: java.lang.String zzg
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_Widget_AppCompat_ExpandedMenu_Item
me.carda.awesome_notifications.R$drawable: int notification_icon_background
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AnimatedStateListDrawableCompat_android_constantSize
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float DRAG_RATE
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods scrollTo
me.carda.awesome_notifications.R$id: int action_text
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialContract$FeedEntry: java.lang.String COLUMN_NAME_USERNAME
com.pichillilorenzo.flutter_inappwebview_android.R$color: int call_notification_answer_color
com.google.android.gms.internal.measurement.zzfr$zza$zzf: java.lang.String zzf
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType location
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int tint
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzo
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object _closeCause
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] MenuItem
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks$1: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks this$0
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: androidx.browser.customtabs.CustomTabsServiceConnection mConnection
me.carda.awesome_notifications.R$id: int edit_text_id
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlocker: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger trigger
me.carda.awesome_notifications.R$color: int ripple_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int collapseIcon
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int colorError
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.TreeSet daysOfMonth
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController: java.lang.String LOG_TAG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelId
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String INDETERMINATE
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_GREEN
me.carda.awesome_notifications.core.managers.RepositoryManager: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_progressBarPadding
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int autoSizeStepGranularity
io.flutter.plugin.platform.SingleViewPresentation: android.view.View$OnFocusChangeListener focusChangeListener
com.google.firestore.v1.TransactionOptions$ReadOnly: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_13
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_SeekBar_Discrete
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataUri
com.google.firestore.v1.DocumentTransform: com.google.protobuf.Internal$ProtobufList fieldTransforms_
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigManager: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzal
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzkc zzbe
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.Integer day
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_context_bar
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: android.webkit.CookieManager cookieManager
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnWindowBlurEventJS: java.lang.String ON_WINDOW_BLUR_EVENT_JS_SOURCE
com.google.android.gms.internal.measurement.zzgd$zza: com.google.android.gms.internal.measurement.zzgd$zza zzc
com.pichillilorenzo.flutter_inappwebview_android.R$style: int ThemeOverlay_AppCompat_Dialog_Alert
com.google.firestore.admin.v1.Index$IndexField: java.lang.String fieldPath_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SET_AS_GROUP_SUMMARY
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String MINUTE
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: int mOriginalSystemUiVisibility
com.google.firestore.v1.StructuredQuery: int ORDER_BY_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listPreferredItemHeightLarge
me.carda.awesome_notifications.core.Definitions: java.lang.String SILENT_HANDLE
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String VAR_FUNCTION_ARGUMENTS_OBJ
com.pichillilorenzo.flutter_inappwebview_android.R$id: int listMode
com.google.android.gms.internal.measurement.zzfy$zzd: boolean zzi
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActionBar
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_BLUE
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_media_narrow_margin
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback mChildScrollUpCallback
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String title
me.carda.awesome_notifications.core.threads.NotificationSender: java.lang.String TAG
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance Max
com.google.firestore.v1.StructuredQuery$CompositeFilter: int OP_FIELD_NUMBER
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float DECELERATE_INTERPOLATION_FACTOR
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_buttonBarStyle
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int backgroundSplit
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController: java.lang.String METHOD_CHANNEL_NAME_PREFIX
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState unknown
kotlinx.coroutines.InvokeOnCancelling: int _invoked
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_Light_Dialog
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairRule_splitMinHeightDp
com.google.android.gms.common.internal.TelemetryData: android.os.Parcelable$Creator CREATOR
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: java.lang.String TABLE_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_alphabeticModifiers
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int btn_checkbox_to_checked_icon_null_animation
com.google.firestore.v1.DocumentChange: com.google.protobuf.Internal$IntList targetIds_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int maxButtonHeight
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: java.lang.String title
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer id
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle actionLifeCycle
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int LinearLayoutCompat_Layout_android_layout_gravity
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified transportFactory
me.carda.awesome_notifications.R$styleable: int GradientColor_android_startColor
me.carda.awesome_notifications.R$attr: int fontProviderSystemFontFamily
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods resumeTimers
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$3: com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager this$0
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Count: int UP_TO_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ic_menu_overflow_material
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_bar_activity_content
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int goIcon
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_PopupWindow
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView webView
com.google.gson.stream.JsonWriter: java.util.regex.Pattern VALID_JSON_NUMBER_PATTERN
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int thickness
com.google.firestore.v1.WriteResult: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int textLocale
com.pichillilorenzo.flutter_inappwebview_android.R$string: int call_notification_hang_up_action
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String VIBRATION_PATTERN
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: boolean mActive
com.google.firestore.v1.WriteRequest: int STREAM_TOKEN_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHandler: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] AppCompatImageView
com.pichillilorenzo.flutter_inappwebview_android.R$id: int scrollView
com.google.android.gms.internal.measurement.zzgd$zzc: com.google.android.gms.internal.measurement.zzll zzd
io.flutter.view.AccessibilityViewEmbedder: io.flutter.view.AccessibilityViewEmbedder$ReflectionAccessors reflectionAccessors
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer minimumFontSize
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_listPopupWindowStyle
com.google.firestore.admin.v1.Index$IndexField: int ORDER_FIELD_NUMBER
com.google.firestore.v1.BloomFilter: int hashCount_
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int compat_button_inset_horizontal_material
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType: java.lang.String value
me.carda.awesome_notifications.core.Definitions: java.lang.String SHARED_DEFAULTS
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int finishSecondaryWithPrimary
com.pichillilorenzo.flutter_inappwebview_android.R$id: int view_tree_saved_state_registry_owner
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate channelDelegate
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_10
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_action_text_size
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$5: android.webkit.WebResourceRequest val$request
com.google.android.gms.internal.measurement.zzfy$zzf: long zzi
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CREATED_LIFECYCLE
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.Boolean enableVibration
com.google.firestore.v1.Value: int NULL_VALUE_FIELD_NUMBER
kotlinx.coroutines.internal.Segment: int cleanedAndPointers
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int barLength
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.List ifDomain
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_action_bar_item_background_material
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.String DATABASE_NAME
me.carda.awesome_notifications.core.managers.RepositoryManager: me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB sqLitePrimitives
com.pichillilorenzo.flutter_inappwebview_android.R$id: int search_go_btn
android.support.v4.media.session.PlaybackStateCompat$CustomAction: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceContract$FeedEntry: java.lang.String COLUMN_NAME_HOST
com.google.android.gms.internal.measurement.zzgd$zzc: com.google.android.gms.internal.measurement.zzgd$zza zzg
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_CANCEL_ALL_SCHEDULES
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int colorPrimary
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHandler: com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase credentialDatabase
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder: java.lang.ref.WeakReference wContextReference
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_iconifiedByDefault
me.carda.awesome_notifications.R$styleable: int FragmentContainerView_android_name
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader lastReaderDequeuedFrom
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTimedOutEventName
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods canScrollHorizontally
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AlertDialog_listLayout
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$12: android.view.MenuItem val$menuItem
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_MODEL_BUTTONS
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int CheckedTextView_checkMarkTintMode
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dialog_fixed_height_minor
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_action_mode_bar
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int titleMarginTop
me.carda.awesome_notifications.core.Definitions: java.lang.String MEDIA_VALID_FILE
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: java.lang.String contentType
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: double left
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzl
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzfr$zza zzr
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_titleTextStyle
com.google.android.gms.internal.measurement.zzfr$zza$zza: int zzg
me.carda.awesome_notifications.R$drawable: int ic_call_answer_low
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_TITLE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_queryBackground
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$5: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer audioAttributesUsage
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] ActivityRule
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AnimatedStateListDrawableTransition_android_drawable
com.google.android.gms.internal.measurement.zzfy$zze: int zzf
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$2: androidx.webkit.WebViewRenderProcess val$renderer
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON
com.google.firestore.v1.RunAggregationQueryResponse: com.google.firestore.v1.RunAggregationQueryResponse DEFAULT_INSTANCE
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_PUSH_NEXT_DATA
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$18: android.webkit.ValueCallback val$resultCallback
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController$4: com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController this$0
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: java.lang.String LOG_TAG
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_GROUP_KEY
kotlinx.coroutines.scheduling.CoroutineScheduler: int _isTerminated
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] $VALUES
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String UNSUPPORTED_OS_VERSION_ERROR_CODE
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: java.lang.String password
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$3: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_listPreferredItemHeightSmall
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.util.concurrent.ConcurrentHashMap messagingQueue
com.google.firestore.v1.Write: int bitField0_
me.carda.awesome_notifications.core.exceptions.ExceptionFactory: me.carda.awesome_notifications.core.exceptions.ExceptionFactory instance
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int notification_bg_normal_pressed
me.carda.awesome_notifications.core.models.NotificationCrontabModel: java.lang.String crontabExpression
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_subtitleTextAppearance
com.pichillilorenzo.flutter_inappwebview_android.R$id: int title
me.carda.awesome_notifications.R$id: int notification_main_column_container
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Transport
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int abc_shrink_fade_out_from_bottom
me.carda.awesome_notifications.R$styleable: int ColorStateListItem_lStar
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int searchIcon
com.google.firebase.firestore.proto.MaybeDocument: int NO_DOCUMENT_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfr$zza$zzc: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActivityRule_alwaysExpand
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BIG_PICTURE
me.carda.awesome_notifications.core.models.NotificationButtonModel: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: boolean isForMainFrame
com.google.protobuf.AbstractMessageLite: int memoizedHashCode
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.TrustedWebActivitySingleInstance: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.PlatformUtil: java.lang.String METHOD_CHANNEL_NAME
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean supportMultipleWindows
io.flutter.embedding.engine.FlutterJNI: java.util.Set flutterUiDisplayListeners
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCustomSlingshotDistance
com.google.android.gms.internal.measurement.zzfo$zzc: int zze
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_Light_DialogWhenLarge
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks: android.app.Application$ActivityLifecycleCallbacks activityLifecycleCallbacks
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int DrawerArrowToggle_color
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String CODE_UNKNOWN_EXCEPTION
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int StateListDrawable_android_dither
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int lStar
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String CONFIGURE_PARTITIONED_COOKIES
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: java.lang.String description
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat_Light_Dialog
me.carda.awesome_notifications.core.enumerators.GroupSort: java.lang.String safeName
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean createNewReader
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel$2: int val$index
me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour: me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour[] valueList
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BODY_LOC_ARGS
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_textAllCaps
me.carda.awesome_notifications.core.models.NotificationContentModel: java.util.Calendar createdDate
com.google.android.gms.internal.measurement.zzjt: com.google.android.gms.internal.measurement.zzmj zzb
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: java.util.List activityResultListeners
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ColorStateListItem_android_alpha
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_METHOD
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String CHECK_GLOBAL_KEY_DOWN_EVENT_TO_HIDE_CONTEXT_MENU_JS_PLUGIN_SCRIPT_GROUP_NAME
io.flutter.plugin.platform.SingleViewPresentation: int viewId
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase instance
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int splitTrack
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int DrawerArrowToggle_arrowShaftLength
com.google.android.gms.internal.measurement.zzfy$zzk: int zzay
kotlinx.coroutines.scheduling.WorkQueue: int consumerIndex
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings: java.lang.Integer distanceToTriggerSync
com.google.firestore.v1.Document: com.google.protobuf.Timestamp updateTime_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionBarTabStyle
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ID
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_menu_delete_shortcut_label
com.pichillilorenzo.flutter_inappwebview_android.R$id: int contentPanel
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String DETAILED_INSUFFICIENT_PERMISSIONS
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptAjaxRequestJS: java.lang.String INTERCEPT_AJAX_REQUEST_JS_PLUGIN_SCRIPT_GROUP_NAME
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: java.lang.Integer action
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType[] $VALUES
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_LOCKED
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object head
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionDropDownStyle
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_control_padding_material
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle Foreground
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidthDp
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int LinearLayoutCompat_showDividers
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController: android.print.PrintJob job
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate inAppBrowserDelegate
com.google.gson.stream.JsonReader: java.io.Reader in
com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld: java.lang.String name
com.google.firebase.firestore.proto.WriteBatch: int BASE_WRITES_FIELD_NUMBER
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BUTTON_LABELS
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_collapseIcon
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_tint_btn_checkable
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listMenuViewStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_NAME
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptFetchRequestJS: java.lang.String FLAG_VARIABLE_FOR_SHOULD_INTERCEPT_FETCH_REQUEST_JS_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ViewStubCompat_android_id
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.webkit.ValueCallback filePathCallback
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColor_android_gradientRadius
me.carda.awesome_notifications.core.utils.SerializableUtils: me.carda.awesome_notifications.core.utils.TimeZoneUtils timeZoneUtils
com.google.android.gms.internal.measurement.zzfr$zzc: boolean zzg
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_Button_Colored
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionMode_titleTextStyle
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_defaultQueryHint
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V21_Theme_AppCompat_Dialog
com.google.gson.stream.JsonReader: int[] stack
com.google.android.gms.internal.measurement.zzfr$zza$zzc: int zzf
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: boolean shouldTint
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_Light_Dialog_Alert
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean allowFileAccess
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptFetchRequestJS: java.lang.String INTERCEPT_FETCH_REQUEST_JS_SOURCE
me.carda.awesome_notifications.core.enumerators.MediaSource: me.carda.awesome_notifications.core.enumerators.MediaSource[] valueList
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_DialogWindowTitle_AppCompat
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods pauseTimers
com.google.android.gms.internal.measurement.zzfo$zzc: com.google.android.gms.internal.measurement.zzfo$zzc zzc
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Social
androidx.core.app.JobIntentService: java.util.ArrayList mCompatQueue
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.firestore.v1.BatchGetDocumentsRequest DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_radioButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer textZoom
com.google.firestore.v1.Document: int UPDATE_TIME_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String VAR_FUNCTION_ARGUMENT_VALUES
me.carda.awesome_notifications.core.models.NotificationChannelGroupModel: java.lang.String channelGroupKey
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptAjaxRequestJS: java.lang.String INTERCEPT_AJAX_REQUEST_JS_SOURCE
me.carda.awesome_notifications.core.models.NotificationModel: java.lang.String remoteHistory
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int animationBackgroundColor
com.google.firestore.v1.CommitRequest: com.google.protobuf.Internal$ProtobufList writes_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_dividerVertical
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int measureWithLargestChild
com.google.android.gms.internal.measurement.zzfy$zza: java.lang.String zzl
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tabMode
com.pichillilorenzo.flutter_inappwebview_android.R$id: int search_plate
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager: com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate channelDelegate
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton actionButton
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColor_android_endY
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_CompoundButton_RadioButton
com.google.android.gms.internal.measurement.zzfy$zzf: java.lang.String zzg
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int titleTextAppearance
com.google.firebase.firestore.proto.NoDocument: com.google.firebase.firestore.proto.NoDocument DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ListView_DropDown
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int fontProviderPackage
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int borderlessButtonStyle
com.google.firestore.v1.CommitRequest: java.lang.String database_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Spinner_android_prompt
com.pichillilorenzo.flutter_inappwebview_android.R$color: int switch_thumb_material_dark
com.google.firestore.v1.TransactionOptions: com.google.firestore.v1.TransactionOptions DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$1: android.webkit.ValueCallback val$callback
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_START_FOREGROUND
me.carda.awesome_notifications.R$id: int accessibility_custom_action_24
me.carda.awesome_notifications.R$id: int accessibility_action_clickable_span
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout BigText
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] SwipeRefreshLayout
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_colorButtonNormal
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2: java.lang.String val$finalProtocol
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.CircularProgressDrawable mProgress
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_contentDescription
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Boolean roundedBigPicture
com.google.firestore.v1.RunAggregationQueryResponse: com.google.protobuf.Timestamp readTime_
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar: com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource layout
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int iconTintMode
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAnimateToCorrectPosition
me.carda.awesome_notifications.R$styleable: int SplitPlaceholderRule_stickyPlaceholder
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_alertDialogStyle
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mName
com.google.android.gms.internal.measurement.zzfr$zzi: int zzi
me.carda.awesome_notifications.R$styleable: int SplitPairRule_splitMinWidthDp
me.carda.awesome_notifications.R$id: int visible_removing_fragment_view_tag
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean onlyAlertOnce
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Internal$ProtobufList from_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int overlapAnchor
com.google.firestore.v1.StructuredQuery$Order: int direction_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Button_Borderless_Colored
com.google.firestore.v1.DocumentTransform: int FIELD_TRANSFORMS_FIELD_NUMBER
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.ByteString transaction_
com.google.android.gms.internal.measurement.zzfo$zzb: boolean zzm
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int disabled_alpha_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_searchview_description_submit
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_Button_Borderless_Colored
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Workout
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int seekBarStyle
com.pichillilorenzo.flutter_inappwebview_android.R$id: int home
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_WEEKOFYEAR
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController: com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface webView
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_APP_LAUNCH_DETAILS_METHOD
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_secondary_text_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_list_selector_disabled_holo_dark
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources mResources
com.google.firestore.v1.CommitResponse: int bitField0_
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INPUT_RESULT
me.carda.awesome_notifications.core.enumerators.LogLevel: me.carda.awesome_notifications.core.enumerators.LogLevel none
com.google.android.gms.internal.measurement.zzfy$zzg: com.google.android.gms.internal.measurement.zzfy$zzg zzc
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatImageView_tintMode
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String SHOWS_USER_INTERFACE
com.pichillilorenzo.flutter_inappwebview_android.R$id: int never
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.Integer second
com.google.firebase.firestore.proto.Target: com.google.firebase.firestore.proto.Target DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModeCloseContentDescription
io.flutter.embedding.engine.FlutterJNI: boolean loadLibraryCalled
com.google.firestore.v1.DocumentRemove: int REMOVED_TARGET_IDS_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String bigText
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionBarTabTextStyle
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int notification_action_tombstone
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int stickyPlaceholder
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int select_dialog_item_material
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int LinearLayoutCompat_Layout_android_layout_weight
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_decor_view_status_guard
me.carda.awesome_notifications.core.models.NotificationContentModel: boolean isRefreshNotification
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] StateListDrawableItem
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int select_dialog_singlechoice_material
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_bar_stacked_max_height
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_DrawerArrowToggle_Common
com.pichillilorenzo.flutter_inappwebview_android.R$xml: int provider_paths
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AlertDialog_multiChoiceItemLayout
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_alert_dialog_material
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int LinearLayoutCompat_divider
com.google.android.gms.internal.measurement.zzfr$zzd: int zzh
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int drawableStartCompat
me.carda.awesome_notifications.R$string: int call_notification_incoming_text
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: com.google.protobuf.Parser PARSER
androidx.core.content.FileProvider: java.lang.String ATTR_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int arrowHeadLength
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_11
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int indexInArray
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String LOG_TAG
me.carda.awesome_notifications.DartBackgroundExecutor: java.util.concurrent.atomic.AtomicBoolean isRunning
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings customSettings
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int editTextBackground
me.carda.awesome_notifications.R$id: int view_tree_on_back_pressed_dispatcher_owner
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int subtitleTextAppearance
com.google.gson.stream.JsonReader: char[] buffer
com.google.firestore.v1.ListenRequest: java.lang.Object targetChange_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int colorBackgroundFloating
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUDIO_ATTRIBUTES_USAGE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ACTION
com.google.android.gms.internal.measurement.zzfr$zza: com.google.android.gms.internal.measurement.zzkc zzf
androidx.activity.ComponentActivity: androidx.lifecycle.LifecycleRegistry mLifecycleRegistry
com.google.android.gms.internal.measurement.zzgd$zzb: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBarLayout_android_layout_gravity
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB instance
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AlertDialog_singleChoiceItemLayout
com.google.firestore.v1.RunAggregationQueryRequest: java.lang.String parent_
com.google.android.gms.internal.measurement.zzfy$zzj: com.google.android.gms.internal.measurement.zzfy$zzj zzc
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy$1: android.hardware.display.DisplayManager val$displayManager
me.carda.awesome_notifications.core.models.NotificationScheduleModel: java.lang.Integer delayTolerance
com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType: com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType DESKTOP
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.String VALUE
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.Map monthMap
com.google.firestore.v1.TransactionOptions: java.lang.Object mode_
me.carda.awesome_notifications.DartBackgroundExecutor: android.content.Context applicationContext
me.carda.awesome_notifications.core.Definitions: java.util.Map initialValues
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ActionButton_Overflow
me.carda.awesome_notifications.AwesomeNotificationsPlugin: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityBinding
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_close
me.carda.awesome_notifications.R$styleable: int FontFamilyFont_android_font
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int textAppearancePopupMenuHeader
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.core.view.NestedScrollingChildHelper mNestedScrollingChildHelper
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Reminder
com.google.android.gms.internal.measurement.zzfy$zzi: com.google.android.gms.internal.measurement.zzfy$zzi zzc
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_action_menu_item_layout
me.carda.awesome_notifications.R$layout: int notification_template_part_time
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.lang.Boolean hideDefaultMenuItems
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle Terminated
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_Light_NoActionBar
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_switchPadding
android.support.v4.media.session.MediaSessionCompat$Token: android.os.Parcelable$Creator CREATOR
me.carda.awesome_notifications.core.threads.NotificationScheduler: long startTime
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: boolean shouldAutoDismiss
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_android_maxWidth
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_vector_test
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Button
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.lang.String urlFilter
me.carda.awesome_notifications.R$id: int never
me.carda.awesome_notifications.core.models.NotificationButtonModel: java.lang.Boolean isAuthenticationRequired
com.google.firestore.v1.Write: int TRANSFORM_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LED_DETAILS_ERROR_CODE
me.carda.awesome_notifications.core.externalLibs.CronExpression: int HOUR
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: me.carda.awesome_notifications.core.enumerators.ForegroundStartMode[] valueList
me.carda.awesome_notifications.R$id: int androidx_window_activity_scope
com.pichillilorenzo.flutter_inappwebview_android.R$interpolator: int btn_checkbox_unchecked_mtrl_animation_interpolator_1
me.carda.awesome_notifications.core.Definitions: java.lang.String STORE_INITIAL_ACTION
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableVibration
com.pichillilorenzo.flutter_inappwebview_android.R$id: int progress_circular
com.google.firestore.v1.Precondition: java.lang.Object conditionType_
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String groupKey
com.google.android.gms.internal.measurement.zzfr$zzh: int zze
me.carda.awesome_notifications.core.Definitions: java.lang.String INITIALIZE_DEBUG_MODE
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.Object concurrencyLock
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: java.lang.Boolean isAuthenticationRequired
com.google.firestore.v1.Target$QueryTarget: int STRUCTURED_QUERY_FIELD_NUMBER
com.google.firestore.v1.WriteResponse: com.google.protobuf.Internal$ProtobufList writeResults_
me.carda.awesome_notifications.core.AwesomeNotifications: boolean isTheMainInstance
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_menu_hardkey_panel_mtrl_mult
com.google.firestore.v1.Write: com.google.firestore.v1.Write DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int windowNoTitle
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.Boolean showTitle
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2: android.webkit.WebView val$view
com.pichillilorenzo.flutter_inappwebview_android.R$id: int checked
me.carda.awesome_notifications.R$dimen: int notification_right_side_padding_top
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle dismissedLifeCycle
me.carda.awesome_notifications.R$animator: int fragment_fade_exit
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Service
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_windowActionModeOverlay
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer overScrollMode
me.carda.awesome_notifications.core.managers.RepositoryManager: java.lang.Class clazz
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int swipeRefreshLayoutProgressSpinnerBackgroundColor
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_android_text
androidx.browser.customtabs.CustomTabsCallback: int ACTIVITY_LAYOUT_STATE_BOTTOM_SHEET
me.carda.awesome_notifications.core.BuildConfig: java.lang.String BUILD_TYPE
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String uri
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController findInteractionController
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: java.lang.Long id
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean offscreenPreRaster
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String VAR_FUNCTION_BODY
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon2
me.carda.awesome_notifications.R$styleable: int FontFamily_fontProviderPackage
com.dexterous.flutterlocalnotifications.models.RepeatInterval: com.dexterous.flutterlocalnotifications.models.RepeatInterval Weekly
com.google.type.LatLng: int LONGITUDE_FIELD_NUMBER
me.carda.awesome_notifications.R$drawable: int notification_bg_normal
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int height
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$12: android.view.ActionMode val$actionMode
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_DISMISS_ALL_NOTIFICATIONS
com.google.firestore.v1.Target: int TARGET_ID_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfo$zzd: boolean zzg
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int abc_tooltip_exit
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Platform_ThemeOverlay_AppCompat_Light
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: android.view.View containerView
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean playSound
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ActionBar_TabText
com.google.firebase.firestore.proto.MaybeDocument: java.lang.Object documentType_
me.carda.awesome_notifications.R$styleable: int SplitPairRule_clearTop
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_ALERT_BEHAVIOR
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Navigation
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer importance
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastQueueTime
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_Compat_Notification_Info
com.google.android.gms.internal.measurement.zzfy$zzh: long zzh
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int notification_template_custom_big
com.google.firestore.v1.WriteRequest: com.google.protobuf.Parser PARSER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ID
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Internal$IntList removedTargetIds_
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$21: int[] $SwitchMap$com$pichillilorenzo$flutter_inappwebview_android$types$PreferredContentModeOptionType
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer preferredContentMode
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: boolean useHybridComposition
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$1: java.util.concurrent.CountDownLatch val$latch
com.google.firestore.v1.CommitRequest: int TRANSACTION_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Shortcut
com.google.firestore.v1.BatchGetDocumentsRequest: int DATABASE_FIELD_NUMBER
me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour: me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour Summary
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_3
com.google.firestore.admin.v1.Index$IndexField: com.google.firestore.admin.v1.Index$IndexField DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_scrubber_control_to_pressed_mtrl_005
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColor_android_centerColor
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_PLAY_SOUND
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Platform_ThemeOverlay_AppCompat
com.pichillilorenzo.flutter_inappwebview_android.R$color: int androidx_core_ripple_material_light
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatLines
com.google.android.gms.internal.measurement.zzfr$zzb: com.google.android.gms.internal.measurement.zzfr$zzb zzc
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_list_menu_item_icon
com.google.android.gms.internal.measurement.zzfy$zzh: double zzj
com.google.android.gms.common.ConnectionResult: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
com.google.android.gms.internal.measurement.zzfy$zzn: com.google.android.gms.internal.measurement.zzjz zzg
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CREATED_SOURCE
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_IS_FCM_AVAILABLE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ImageButton
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: com.dexterous.flutterlocalnotifications.models.PersonDetails person
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_scrubber_track_mtrl_alpha
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager$DummyServiceWorkerClientCompat: androidx.webkit.ServiceWorkerClientCompat INSTANCE
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_DEFAULT_PRIVACY
com.pichillilorenzo.flutter_inappwebview_android.R$string: int action_reload
me.carda.awesome_notifications.core.threads.NotificationScheduler: me.carda.awesome_notifications.core.models.NotificationModel notificationModel
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_titleMarginStart
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_menu_enter_shortcut_label
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods pageDown
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView$1: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView this$0
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggeredTimestamp
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int drawableRightCompat
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy: me.carda.awesome_notifications.core.enumerators.NotificationPrivacy[] $VALUES
com.google.android.gms.internal.measurement.zzfy$zzl: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int PopupWindow_overlapAnchor
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_GREEN
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int btn_radio_to_on_mtrl_ring_outer_animation
me.carda.awesome_notifications.R$id: int hide_ime_id
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserChannelDelegate channelDelegate
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript interceptOnlyAsyncAjaxRequestsPluginScript
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_listPreferredItemPaddingStart
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings$DirectoryBasePaths: java.lang.String LOG_TAG
com.google.firestore.v1.TransactionOptions$ReadWrite: int RETRY_TRANSACTION_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] $VALUES
com.google.android.gms.internal.measurement.zzjt: java.util.Map zzc
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType BLOCK
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairRule_splitLayoutDirection
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int editTextStyle
io.flutter.embedding.engine.FlutterJNI: java.util.concurrent.locks.ReentrantReadWriteLock shellHolderLock
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int drawableSize
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int LARGE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int toolbarStyle
me.carda.awesome_notifications.R$id: int right_icon
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat
com.pichillilorenzo.flutter_inappwebview_android.R$id: int unchecked
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_btn_radio_material_anim
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] ActionMenuView
me.carda.awesome_notifications.core.models.NotificationContentModel: me.carda.awesome_notifications.core.enumerators.NotificationPrivacy privacy
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mRefreshing
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String category
com.google.android.gms.internal.measurement.zzfy$zze: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int windowFixedWidthMinor
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int CompoundButton_buttonCompat
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AlertDialog_listItemLayout
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods setContextMenu
me.carda.awesome_notifications.R$id: int accessibility_custom_action_17
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_21
com.google.android.gms.internal.measurement.zzfy$zzk: long zzl
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzfy$zza zzbp
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout$2: com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout val$self
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] mParentOffsetInWindow
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2: java.lang.String val$_callHandlerID
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabView
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dialog_fixed_width_major
me.carda.awesome_notifications.R$styleable: int FontFamilyFont_android_fontStyle
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeSafariBrowserManager: java.lang.String LOG_TAG
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzbq
me.carda.awesome_notifications.R$attr: int secondaryActivityName
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_switch_track_mtrl_alpha
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.util.List additionalTrustedOrigins
com.google.android.gms.internal.measurement.zzfy$zzk: int zzaq
com.google.android.gms.internal.measurement.zzgd$zzb: com.google.android.gms.internal.measurement.zzgd$zzb zzc
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$7: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate this$0
com.google.android.gms.internal.measurement.zzfr$zza$zzc: int zze
me.carda.awesome_notifications.R$styleable: int[] GradientColorItem
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistryController mSavedStateRegistryController
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface webView
me.carda.awesome_notifications.core.models.NotificationButtonModel: java.lang.Integer color
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_TextView
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int navigationMode
com.pichillilorenzo.flutter_inappwebview_android.R$id: int textSpacerNoButtons
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$14: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_windowActionBar
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.firestore.v1.BatchGetDocumentsResponse DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery$CollectionSelector: int COLLECTION_ID_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzh
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int textAppearanceListItem
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionOverflowButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int checkMarkTintMode
com.google.firestore.v1.ExistenceFilter: int bitField0_
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: java.util.Calendar actionDate
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] RecycleListView
me.carda.awesome_notifications.core.externalLibs.CronExpression: int lastdayOffset
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ActionButton_CloseMode
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType IMAGE
com.google.android.gms.internal.measurement.zzfo$zza: com.google.android.gms.internal.measurement.zzll zzd
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_CANCEL_ALL_NOTIFICATIONS
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String horizontalScrollbarThumbColor
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2: java.lang.String val$host
me.carda.awesome_notifications.core.enumerators.MediaSource: me.carda.awesome_notifications.core.enumerators.MediaSource[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_windowNoTitle
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_subtitle_material_toolbar
com.google.firestore.v1.Write: com.google.firestore.v1.DocumentMask updateMask_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Platform_AppCompat_Light
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] View
me.carda.awesome_notifications.core.Definitions: java.lang.String EVENT_NOTIFICATION_DISMISSED
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_iconTint
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] ViewBackgroundHelper
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamily_fontProviderCerts
me.carda.awesome_notifications.core.logs.Logger: java.lang.String greenColor
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int drawableTopCompat
me.carda.awesome_notifications.core.models.NotificationCrontabModel: java.util.Calendar expirationDateTime
me.carda.awesome_notifications.R$styleable: int GradientColor_android_centerColor
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$4: android.webkit.JsResult val$result
com.pichillilorenzo.flutter_inappwebview_android.Util$1: com.pichillilorenzo.flutter_inappwebview_android.types.SyncBaseCallbackResultImpl val$callback
com.google.android.gms.internal.measurement.zzfr$zzi: java.lang.String zzh
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean transparentBackground
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getHitTestResult
me.carda.awesome_notifications.R$id: int accessibility_custom_action_6
kotlinx.coroutines.scheduling.WorkQueue: int blockingTasksInBuffer
com.google.android.gms.signin.internal.zak: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: int mOriginalOrientation
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout pullToRefreshLayout
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CREATED_DATE
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$2: com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager this$0
me.carda.awesome_notifications.R$id: int title
com.google.android.gms.measurement.internal.zzno: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_main_column_padding_top
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int btn_radio_to_on_mtrl_dot_group_animation
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer scrollBarStyle
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionMode_height
com.google.firestore.v1.DocumentDelete: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextHelper_android_drawableLeft
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CHANNEL_KEY
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionBarDivider
com.pichillilorenzo.flutter_inappwebview_android.R$id: int decor_content_parent
com.google.android.gms.internal.measurement.zzfo$zzf: boolean zzh
me.carda.awesome_notifications.DartBackgroundExecutor: io.flutter.plugin.common.MethodChannel$Result dartChannelResultHandle
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_CREATED_DATE
me.carda.awesome_notifications.R$styleable: int SplitPairFilter_secondaryActivityName
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getUrl
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzg
com.google.firestore.v1.RunAggregationQueryRequest: int READ_TIME_FIELD_NUMBER
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BODY
com.google.firestore.admin.v1.Index$IndexField: int FIELD_PATH_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int spinBars
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColor_android_type
kotlinx.coroutines.internal.LockFreeTaskQueue: java.lang.Object _cur
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: java.lang.String certificatePassword
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction channelAction
com.google.android.gms.internal.measurement.zzgd$zzd: java.lang.String zzi
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_activity_chooser_view_see_all
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.protobuf.Internal$ProtobufList filters_
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String sound
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] MenuGroup
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: int PICKER
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: android.view.inputmethod.InputConnection cachedConnection
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dialog_padding_top_material
me.carda.awesome_notifications.AwesomeNotificationsPlugin: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
androidx.activity.ComponentActivity: boolean mDispatchingOnPictureInPictureModeChanged
me.carda.awesome_notifications.core.threads.NotificationScheduler: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle appLifeCycle
com.google.android.gms.internal.measurement.zzfo$zzd: int zzf
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_Button
me.carda.awesome_notifications.R$string: int androidx_startup
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnLoadResourceJS: com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript ON_LOAD_RESOURCE_JS_PLUGIN_SCRIPT
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Caption
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_reload
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController: java.lang.String searchText
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$4: android.webkit.WebView val$view
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int backgroundTint
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dialog_padding_material
com.google.firestore.v1.TargetChange: com.google.firestore.v1.TargetChange DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_BIG_PICTURE_ERROR_CODE
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.Integer ledOffMs
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dialog_min_width_minor
me.carda.awesome_notifications.core.Definitions: java.lang.String EXTRA_BROADCAST_MESSAGE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_contentInsetStartWithNavigation
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_GET_INITIAL_ACTION
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Display1
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean setAsGroupSummary
me.carda.awesome_notifications.R$styleable: int Capability_queryPatterns
com.google.android.gms.measurement.internal.zzbe: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_height
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_LIST_ALL_SCHEDULES
com.google.gson.stream.JsonReader: int NUMBER_CHAR_EXP_SIGN
com.google.firestore.v1.DocumentTransform$FieldTransform: java.lang.Object transformType_
com.dexterous.flutterlocalnotifications.models.ScheduleMode: com.dexterous.flutterlocalnotifications.models.ScheduleMode inexactAllowWhileIdle
me.carda.awesome_notifications.R$id: int async
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_android_minHeight
me.carda.awesome_notifications.core.Definitions: java.lang.String INITIALIZE_DEFAULT_ICON
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean allowFileAccessFromFileURLs
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: androidx.browser.customtabs.CustomTabsClient mClient
com.google.firestore.admin.v1.Index: int FIELDS_FIELD_NUMBER
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.String packageName
com.google.android.gms.internal.measurement.zzfr$zzh: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_textColorAlertDialogListItem
me.carda.awesome_notifications.core.Definitions: java.lang.String CREATED_HANDLE
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String fantasyFontFamily
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ServiceConnection: java.lang.ref.WeakReference mConnectionCallback
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy: java.lang.String safeName
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuView_android_itemIconDisabledAlpha
me.carda.awesome_notifications.core.utils.CalendarUtils: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Large
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_DISPLAY_ON_FOREGROUND
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg: com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int showAsAction
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ListPopupWindow_android_dropDownHorizontalOffset
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_autoSizeStepGranularity
com.google.gson.stream.JsonScope: int DANGLING_NAME
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$7: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_backHandlingEnabled
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_20
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle: java.lang.String safeName
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int INVALID_POINTER
com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime: com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime AT_DOCUMENT_END
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ViewStubCompat_android_inflatedId
com.dexterous.flutterlocalnotifications.models.NotificationDetails: long[] vibrationPattern
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairRule_tag
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModePasteDrawable
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings: java.lang.String LOG_TAG
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _prev
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_actionViewClass
me.carda.awesome_notifications.core.Definitions: java.lang.String BROADCAST_DISMISSED_NOTIFICATION
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String SOUND
com.pichillilorenzo.flutter_inappwebview_android.R$color: int dim_foreground_material_light
me.carda.awesome_notifications.core.managers.CreatedManager: me.carda.awesome_notifications.core.managers.CreatedManager instance
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_menu_divider
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dialog_fixed_width_minor
com.google.android.gms.internal.measurement.zzfr$zze: com.google.android.gms.internal.measurement.zzkc zze
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int voiceIcon
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$4: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity this$0
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean interceptOnlyAsyncAjaxRequests
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType DOCUMENT
io.flutter.embedding.engine.FlutterJNI: boolean initCalled
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobManager: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean safeBrowsingEnabled
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ratingbar_indicator_material
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] StateListDrawable
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title
me.carda.awesome_notifications.R$attr: int stickyPlaceholder
com.pichillilorenzo.flutter_inappwebview_android.R$id: int blocking
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_INTERVAL
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionBarTabBarStyle
kotlinx.coroutines.JobSupport: java.lang.Object _state
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ACTION_LIFECYCLE
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackLibraryPath
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_TextView_SpinnerItem
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: double bottom
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ActionBroadcastReceiver: java.lang.String KEY_ACTION_VIEW_ID
com.google.firestore.v1.RunAggregationQueryResponse: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.BatchGetDocumentsRequest: int NEW_TRANSACTION_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String VAR_FUNCTION_ARGUMENT_NAMES
com.pichillilorenzo.flutter_inappwebview_android.R$id: int progressBar
com.google.firebase.sessions.FirebaseSessionsRegistrar: java.lang.String LIBRARY_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AlertDialog_buttonPanelSideLayout
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: android.widget.LinearLayout floatingContextMenu
com.google.firestore.v1.CommitRequest: int WRITES_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int fontProviderSystemFontFamily
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: androidx.browser.customtabs.CustomTabsCallback mCustomTabsCallback
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int lastBaselineToBottomHeight
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColorItem_android_color
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String DETAILED_INITIALIZATION_FAILED
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$CommandProcessor mCurProcessor
me.carda.awesome_notifications.R$drawable: int notification_bg_low_normal
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int tooltip_corner_radius
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: int DATABASE_VERSION
com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld: boolean $assertionsDisabled
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_JSON
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mEnableLegacyRequestDisallowInterceptTouch
com.pichillilorenzo.flutter_inappwebview_android.R$id: int adjacent
com.pichillilorenzo.flutter_inappwebview_android.R$id: int wrap_content
com.google.gson.stream.JsonReader: int PEEKED_BEGIN_ARRAY
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_autoSizeTextType
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: java.lang.Boolean handledByClient
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String GROUP_ID
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: byte[] data
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String AUDIO_ATTRIBUTES_USAGE
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Boolean autoDismissible
me.carda.awesome_notifications.R$color: int androidx_core_ripple_material_light
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_CREATE
me.carda.awesome_notifications.core.threads.NotificationSender: long endTime
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: int id
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_PROGRESS
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.List ifTopUrl
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$5: android.webkit.WebResourceRequest val$request
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: me.carda.awesome_notifications.core.enumerators.ForegroundStartMode[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_android_title
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Large
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertChallenge: java.lang.String[] keyTypes
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder: java.lang.String bitmapReference
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int StateListDrawable_android_variablePadding
com.pichillilorenzo.flutter_inappwebview_android.R$color: int switch_thumb_normal_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int abc_slide_out_bottom
com.google.android.gms.internal.measurement.zzfr$zzf: int zze
androidx.datastore.preferences.PreferencesProto$Value: androidx.datastore.preferences.protobuf.Parser PARSER
com.google.firestore.v1.DocumentMask: com.google.firestore.v1.DocumentMask DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: java.lang.String password
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.util.Map webViewAssetLoader
com.google.gson.stream.JsonReader: int peeked
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String body
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaStartAnimation
me.carda.awesome_notifications.core.services.BackgroundService: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_buttonStyleSmall
io.flutter.view.AccessibilityViewEmbedder: java.util.Map embeddedViewToDisplayBounds
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String summaryText
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Integer titleColor
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton
androidx.fragment.app.FragmentActivity: androidx.lifecycle.LifecycleRegistry mFragmentLifecycleRegistry
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer color
com.google.protobuf.GeneratedMessageLite: int MUTABLE_FLAG_MASK
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzg
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_ratingBarStyleSmall
me.carda.awesome_notifications.R$layout: int notification_action_tombstone
com.google.type.LatLng: com.google.type.LatLng DEFAULT_INSTANCE
kotlinx.coroutines.CancellableContinuationImpl: java.lang.Object _parentHandle
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle lifecycle
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.firestore.v1.StructuredQuery$UnaryFilter DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$2: io.flutter.plugin.common.MethodChannel$Result val$result
com.google.android.gms.internal.measurement.zzfy$zzl: com.google.android.gms.internal.measurement.zzfy$zzl zzc
com.google.android.gms.internal.measurement.zzfo$zzf: com.google.android.gms.internal.measurement.zzkc zzi
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType mediaPlayback
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int alertDialogButtonGroupStyle
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActivityChooserView_initialActivityCount
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.Class dismissReceiverClass
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: boolean permanentPersistence
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$19: android.webkit.ValueCallback val$callback
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: int port
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate inAppBrowserDelegate
com.google.gson.stream.JsonWriter: int[] stack
me.carda.awesome_notifications.core.models.NotificationButtonModel: java.lang.Boolean requireInputText
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$6: android.webkit.WebView val$view
com.google.protobuf.Timestamp: com.google.protobuf.Timestamp DEFAULT_INSTANCE
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_IS_DANGEROUS_OPTION
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$8: float val$pixelDensity
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int paddingBottomNoButtons
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CALLED_AT
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int buttonTint
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_small_material
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.String soundSource
com.pichillilorenzo.flutter_inappwebview_android.R$color: int browser_actions_text_color
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextHelper_android_drawableRight
me.carda.awesome_notifications.R$attr: int activityName
com.google.firestore.v1.TargetChange: int READ_TIME_FIELD_NUMBER
me.carda.awesome_notifications.R$id: int accessibility_custom_action_21
me.carda.awesome_notifications.core.externalLibs.CronExpression: int DAY_OF_MONTH
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActionBar_TabBar
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String timeZoneName
com.google.firestore.v1.BloomFilter: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_action_menu_overflow_description
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean useOnRenderProcessGone
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeSafariBrowserManager: java.util.Map browsers
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SELECT_FOREGROUND_NOTIFICATION_ACTION
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getSelectedText
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType redeliveryIntent
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerManager: java.lang.String LOG_TAG
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzfr$zzg zzu
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_PROGRESS
me.carda.awesome_notifications.core.managers.LifeCycleManager: boolean hasGoneForeground
me.carda.awesome_notifications.R$styleable: int SplitPairRule_tag
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: java.util.concurrent.ExecutorService cachedThreadPool
me.carda.awesome_notifications.core.managers.LostEventsManager: me.carda.awesome_notifications.core.managers.LostEventsManager instance
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_tint_edittext
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_container
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPlaceholderRule_splitMinWidthDp
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHRONOMETER_COUNT_DOWN
com.google.android.material.appbar.AppBarLayout$BaseBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.RunAggregationQueryResponse: int bitField0_
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Integer duration
me.carda.awesome_notifications.core.externalLibs.CronExpression: boolean expressionParsed
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.JavaScriptBridgeJS: java.lang.String UTIL_JS_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int showDividers
me.carda.awesome_notifications.AwesomeNotificationsPlugin: io.flutter.plugin.common.MethodChannel pluginChannel
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout$2: com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout this$0
com.google.gson.stream.JsonWriter: java.lang.String[] REPLACEMENT_CHARS
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int browser_actions_context_menu_min_padding
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_listPreferredItemHeightLarge
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.JavaScriptBridgeJS: java.lang.String JAVASCRIPT_BRIDGE_JS_PLUGIN_SCRIPT_GROUP_NAME
androidx.datastore.preferences.PreferencesProto$Value: int INTEGER_FIELD_NUMBER
com.google.firestore.v1.DocumentDelete: int removedTargetIdsMemoizedSerializedSize
me.carda.awesome_notifications.R$styleable: int SplitPlaceholderRule_splitMinWidthDp
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_divider
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.ArrayDeque imageReaderQueue
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_textfield_default_mtrl_alpha
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationStyle style
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int secondaryActivityAction
com.pichillilorenzo.flutter_inappwebview_android.R$color: int highlighted_text_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$style: int InAppWebViewTheme
me.carda.awesome_notifications.core.managers.SharedManager: java.lang.String hashedReference
com.google.firestore.v1.StructuredQuery$FieldReference: int FIELD_PATH_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
me.carda.awesome_notifications.core.enumerators.NotificationSource: java.lang.String safeName
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2: java.lang.String val$host
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_Spinner_DropDown_ActionBar
com.google.firestore.v1.Target: int READ_TIME_FIELD_NUMBER
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout MessagingGroup
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: boolean handledByClient
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController: java.lang.String id
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] AlertDialog
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLORIZED
com.google.android.gms.internal.measurement.zzfr$zzc: java.lang.String zzf
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: byte[] defaultVideoPoster
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_contentInsetEnd
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_9
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean trimOnMemoryPressure
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModeCutDrawable
me.carda.awesome_notifications.R$styleable: int SplitPairRule_splitMaxAspectRatioInLandscape
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessage: java.util.List ports
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_YEAR
com.pichillilorenzo.flutter_inappwebview_android.R$id: int browser_actions_menu_item_icon
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.regex.Pattern urlFilterPatternCompiled
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownAnimation
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int trackTintMode
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzbk
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ButtonBar_AlertDialog
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialContract$FeedEntry: java.lang.String COLUMN_NAME_PASSWORD
com.google.firestore.v1.DocumentDelete: int REMOVED_TARGET_IDS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: android.view.View targetView
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V7_Widget_AppCompat_Toolbar
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_alert_dialog_title_material
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_list_selector_background_transition_holo_light
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: java.lang.Object data
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager: java.util.Map shared
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle AppKilled
me.carda.awesome_notifications.core.Definitions: java.lang.String EVENT_DEFAULT_ACTION
com.pichillilorenzo.flutter_inappwebview_android.types.PrintJobInfoExt: java.lang.String printerId
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerManager: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_MONTH
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String CODE_INVALID_IMAGE
me.carda.awesome_notifications.core.managers.LocalizationManager: me.carda.awesome_notifications.core.managers.LocalizationManager instance
com.google.firestore.v1.ListenRequest: com.google.firestore.v1.ListenRequest DEFAULT_INSTANCE
me.carda.awesome_notifications.R$style: int Widget_Compat_NotificationActionText
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean useShouldInterceptRequest
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView: java.lang.String LOG_TAG
androidx.core.content.FileProvider: java.lang.String TAG_EXTERNAL_FILES
com.google.gson.stream.JsonReader: int pos
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods goForward
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: java.util.Map dialogs
com.google.android.gms.internal.measurement.zzfy$zza: java.lang.String zzf
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy: java.lang.String TAG
com.google.rpc.Status: int MESSAGE_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFileProvider: java.lang.String fileProviderAuthorityExtension
me.carda.awesome_notifications.R$id: int alwaysDisallow
com.google.android.gms.internal.measurement.zzfy$zzk: int zzai
kotlinx.coroutines.UndispatchedCoroutine: boolean threadLocalIsSet
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Small
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_Compat_Notification_Line2
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int navigationContentDescription
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Button_ButtonBar_AlertDialog
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mActivePointerId
me.carda.awesome_notifications.core.Definitions: java.lang.String SCHEDULER_HELPER_CHANNEL
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: java.lang.String METHOD_CHANNEL_NAME_PREFIX
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String summary
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_android_visible
me.carda.awesome_notifications.R$attr: int splitMinSmallestWidthDp
com.dexterous.flutterlocalnotifications.models.RepeatInterval: com.dexterous.flutterlocalnotifications.models.RepeatInterval Hourly
me.carda.awesome_notifications.R$id: int adjacent
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$6: android.webkit.JsResult val$result
me.carda.awesome_notifications.R$styleable: int FontFamilyFont_font
com.google.firestore.v1.WriteRequest: java.lang.String database_
me.carda.awesome_notifications.R$dimen: int notification_media_narrow_margin
com.dexterous.flutterlocalnotifications.models.Time: java.lang.String HOUR
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.DecelerateInterpolator mDecelerateInterpolator
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager: java.lang.String METHOD_CHANNEL_NAME
me.carda.awesome_notifications.core.builders.NotificationBuilder: me.carda.awesome_notifications.core.utils.BitmapUtils bitmapUtils
me.carda.awesome_notifications.R$layout: int notification_template_part_chronometer
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView webView
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ic_commit_search_api_mtrl_alpha
com.google.firestore.v1.TargetChange: int targetIdsMemoizedSerializedSize
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_menu_function_shortcut_label
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ActionMode
androidx.fragment.app.FragmentActivity: boolean mStopped
androidx.activity.ComponentActivity: boolean mDispatchingOnMultiWindowModeChanged
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout$1: com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout this$0
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: int newCheckContextMenuShouldBeClosedTaskTask
com.pichillilorenzo.flutter_inappwebview_android.Util: java.lang.String LOG_TAG
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BODY_LOC_KEY
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ActionBroadcastReceiver: java.lang.String KEY_ACTION_MANAGER_ID
com.google.rpc.Status: com.google.rpc.Status DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listLayout
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: boolean $assertionsDisabled
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Body1
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_Dialog_Alert
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings: com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings$DirectoryBasePaths directoryBasePaths
com.pichillilorenzo.flutter_inappwebview_android.types.PrintAttributesExt: com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt margins
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings: java.util.List proxyRules
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.util.regex.Pattern regexToCancelSubFramesLoadingCompiled
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String DETAILED_REPOSITORY
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$9: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Int32Value limit_
kotlinx.coroutines.internal.LockFreeTaskQueueCore: java.lang.Object _next
com.google.firestore.v1.BatchGetDocumentsResponse: int READ_TIME_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzgd$zzb: com.google.android.gms.internal.measurement.zzkc zzg
com.pichillilorenzo.flutter_inappwebview_android.R$color: int material_blue_grey_800
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType dataSync
me.carda.awesome_notifications.R$dimen: int compat_button_inset_vertical_material
me.carda.awesome_notifications.R$id: int accessibility_custom_action_31
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource BitmapFilePath
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Display2
com.pichillilorenzo.flutter_inappwebview_android.types.PrintJobInfoExt: int copies
me.carda.awesome_notifications.core.enumerators.NotificationSource: me.carda.awesome_notifications.core.enumerators.NotificationSource OneSignal
com.google.android.gms.internal.measurement.zzfy$zzi: com.google.android.gms.internal.measurement.zzfy$zzb zzh
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_buttonGravity
com.google.firestore.v1.StructuredQuery$FieldReference: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.proto.NoDocument: int NAME_FIELD_NUMBER
com.google.firestore.v1.Value: int STRING_VALUE_FIELD_NUMBER
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Float progress
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String body
com.google.android.gms.internal.measurement.zzfo$zzb: boolean zzi
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: io.flutter.embedding.android.FlutterView flutterView
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnLoadResourceJS: java.lang.String FLAG_VARIABLE_FOR_ON_LOAD_RESOURCE_JS_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat_DialogWhenLarge
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType STYLE_SHEET
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: java.lang.Runnable onFrameConsumed
com.pichillilorenzo.flutter_inappwebview_android.R$id: int uniform
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int initialActivityCount
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: com.google.firestore.v1.StructuredAggregationQuery$Aggregation DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods scrollBy
me.carda.awesome_notifications.R$styleable: int[] ActivityFilter
com.pichillilorenzo.flutter_inappwebview_android.R$id: int on
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_dialogCornerRadius
me.carda.awesome_notifications.R$dimen: int notification_right_icon_size
com.pichillilorenzo.flutter_inappwebview_android.R$color: int bright_foreground_disabled_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$id: int line1
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$4: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView val$webView
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String title
com.google.android.gms.measurement.internal.zzae: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V23_Theme_AppCompat_Light
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Small_Inverse
me.carda.awesome_notifications.DartBackgroundExecutor: java.util.concurrent.BlockingQueue silentDataQueue
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String FULL_SCREEN_INTENT
com.google.firestore.v1.StructuredQuery$FieldFilter: int OP_FIELD_NUMBER
com.google.gson.stream.JsonReader: int PEEKED_END_OBJECT
com.google.android.gms.internal.measurement.zzfy$zzk: int zzs
com.pichillilorenzo.flutter_inappwebview_android.R$color: int material_grey_900
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int textAppearanceSmallPopupMenu
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_LINES
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int displayOptions
com.google.firestore.v1.WriteResponse: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController printJobController
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int select_dialog_multichoice_material
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AnimatedStateListDrawableItem_android_drawable
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_menu_sym_shortcut_label
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.lang.Object id
androidx.coordinatorlayout.widget.CoordinatorLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_Light_DarkActionBar
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix finalMatrix
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.JavaScriptBridgeJS: java.lang.String WEB_MESSAGE_CHANNELS_VARIABLE_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ActionButton_CloseMode
com.google.firestore.v1.WriteResponse: com.google.firestore.v1.WriteResponse DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BODY
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$14: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10: java.lang.String val$resultUuid
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.util.List actions
com.pichillilorenzo.flutter_inappwebview_android.R$color: int tooltip_background_light
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_TICKER
com.google.firestore.v1.CommitResponse: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$3: com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage this$0
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CHANNEL_CRITICAL_ALERTS
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionProviderClass
com.google.firestore.v1.Target: com.google.firestore.v1.Target DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper: java.lang.String SQL_DELETE_CREDENTIAL_TABLE
me.carda.awesome_notifications.core.Definitions: java.lang.String BROADCAST_BACKGROUND_ACTION
com.google.firestore.v1.Cursor: boolean before_
com.pichillilorenzo.flutter_inappwebview_android.R$color: int browser_actions_divider_color
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$5: android.webkit.WebView val$view
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings: java.util.List directs
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Animation_AppCompat_Tooltip
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$1: java.lang.String val$printJobId
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$4: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate this$0
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModeShareDrawable
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String description
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer cacheMode
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] ActionBarLayout
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String channelKey
com.pichillilorenzo.flutter_inappwebview_android.R$color: int androidx_core_secondary_text_default_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_25
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: java.lang.String defPackage
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ICON
com.google.gson.stream.JsonReader: int PEEKED_LONG
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_DETAILS
me.carda.awesome_notifications.core.Definitions: java.lang.String ACTION_HANDLE
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String summaryText
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_btn_radio_material
me.carda.awesome_notifications.R$id: int accessibility_custom_action_23
com.pichillilorenzo.flutter_inappwebview_android.R$id: int src_over
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.lang.String suggestedFilename
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$1: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler this$0
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_control_corner_material
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: java.lang.String LOG_TAG
com.google.firestore.v1.MapValue: com.google.protobuf.MapFieldLite fields_
androidx.core.widget.NestedScrollView$SavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_DayNight_DialogWhenLarge
me.carda.awesome_notifications.R$attr: int fontProviderAuthority
com.google.firebase.firestore.proto.WriteBatch: int batchId_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_DropDownItem
com.google.firestore.v1.RunAggregationQueryRequest: com.google.firestore.v1.RunAggregationQueryRequest DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_contentInsetRight
com.google.android.gms.internal.measurement.zzfy$zzh: int zze
com.google.android.gms.internal.measurement.zzfr$zza: com.google.android.gms.internal.measurement.zzkc zzh
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_voiceIcon
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AnimatedStateListDrawableTransition_android_fromId
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Large
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager serviceWorkerManager
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_text_select_handle_middle_mtrl
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_PLAY_STATE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int searchHintIcon
me.carda.awesome_notifications.AwesomeNotificationsPlugin: io.flutter.plugin.common.PluginRegistry$ActivityResultListener activityResultListener
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods isLoading
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer forceDarkStrategy
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_SearchView_ActionBar
com.google.firebase.crashlytics.FirebaseCrashlyticsKtxRegistrar: com.google.firebase.crashlytics.FirebaseCrashlyticsKtxRegistrar$Companion Companion
me.carda.awesome_notifications.core.externalLibs.CronExpression: boolean nearestWeekday
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.Class scheduleReceiverClass
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int drawableLeftCompat
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int titleMarginEnd
com.google.android.gms.internal.measurement.zzgd$zzd: int zzf
com.google.android.gms.internal.measurement.zzfy$zza: long zzi
com.google.android.gms.common.api.Scope: android.os.Parcelable$Creator CREATOR
me.carda.awesome_notifications.core.Definitions: java.lang.String DATE_FORMAT
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int textAppearanceListItemSecondary
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] CheckedTextView
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer defaultFontSize
android.support.v4.media.session.ParcelableVolumeInfo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzkc zzi
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean CLEANUP_ON_MEMORY_PRESSURE
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CATEGORY
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Object icon
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: me.carda.awesome_notifications.core.enumerators.NotificationSource createdSource
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int hint_alpha_material_dark
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String AUTO_CANCEL
com.pichillilorenzo.flutter_inappwebview_android.R$id: int alertTitle
me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour: me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour[] $VALUES
com.google.android.gms.internal.measurement.zzfy$zzm: com.google.android.gms.internal.measurement.zzfy$zzm zzc
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_list_divider_material
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings: java.lang.Boolean reverseBypassEnabled
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.lang.String LIBRARY_NAME
com.google.android.gms.internal.measurement.zzfr$zza$zza: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeSafariBrowserManager: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] FontFamilyFont
me.carda.awesome_notifications.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_TITLE_LOC_KEY
me.carda.awesome_notifications.core.models.NotificationContentModel: me.carda.awesome_notifications.core.enumerators.NotificationLayout notificationLayout
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$12: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] PopupWindow
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: java.lang.Integer windowId
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int StateListDrawableItem_android_drawable
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_primary_text_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_24
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType connectedDevice
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10: android.webkit.ValueCallback val$resultCallback
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int ratingBarStyleSmall
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_SHOW_BADGE
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int notification_oversize_large_icon_bg
me.carda.awesome_notifications.core.managers.PermissionManager: java.util.concurrent.BlockingQueue activityQueue
me.carda.awesome_notifications.R$styleable: int SplitPlaceholderRule_placeholderActivityName
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Title
com.google.protobuf.Int32Value: com.google.protobuf.Int32Value DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ButtonBar
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int titleTextColor
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_PAUSE
me.carda.awesome_notifications.core.Definitions: java.lang.String SHARED_SCHEDULED_NOT_CHANNELS
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$2: java.lang.String val$jsScript
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate channelDelegate
com.pichillilorenzo.flutter_inappwebview_android.R$style: int ThemeOverlay_AppCompat_ActionBar
com.google.firestore.v1.DocumentRemove: int READ_TIME_FIELD_NUMBER
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_LAYOUT
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Integer id
com.google.rpc.Status: int code_
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: java.lang.String method
me.carda.awesome_notifications.R$color: int secondary_text_default_material_light
me.carda.awesome_notifications.R$dimen: int notification_large_icon_width
com.google.android.gms.internal.measurement.zzfo$zza: boolean zzi
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_IS_NOTIFICATION_ACTIVE
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ICON_RESOURCE_ID
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getCertificate
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ic_menu_paste_mtrl_am_alpha
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int dialogTheme
me.carda.awesome_notifications.core.enumerators.LogLevel: me.carda.awesome_notifications.core.enumerators.LogLevel warnings
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_textfield_search_default_mtrl_alpha
kotlinx.coroutines.channels.BufferedChannel: long receivers
kotlinx.coroutines.internal.LockFreeTaskQueueCore: long _state
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_list_selector_holo_dark
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ActionBar_Solid
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_WEEKDAY
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.lang.String url
com.pichillilorenzo.flutter_inappwebview_android.WebViewFeatureManager: java.lang.String METHOD_CHANNEL_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuView_android_verticalDivider
me.carda.awesome_notifications.R$style: int TextAppearance_Compat_Notification_Time
com.google.android.gms.internal.measurement.zzfo$zzc: boolean zzh
com.google.firestore.v1.StructuredQuery$CompositeFilter: int FILTERS_FIELD_NUMBER
androidx.transition.ChangeBounds$6: androidx.transition.ChangeBounds$ViewBounds mViewBounds
com.google.android.gms.internal.measurement.zzfo$zze: com.google.android.gms.internal.measurement.zzfo$zze zzc
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$1: java.lang.String[] val$webViewUrl
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] ListPopupWindow
com.google.firestore.v1.Target$DocumentsTarget: com.google.firestore.v1.Target$DocumentsTarget DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Button_Colored
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings: java.lang.Boolean bypassSimpleHostnames
me.carda.awesome_notifications.core.models.DefaultsModel: java.lang.String silentDataCallback
me.carda.awesome_notifications.core.models.NotificationModel: java.util.Map localizations
kotlinx.coroutines.internal.ConcurrentLinkedListNode: java.lang.Object _next
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionBarSplitStyle
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_TextView_SpinnerItem
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_GET_APP_LIFE_CYCLE
com.google.android.gms.internal.measurement.zzfy$zzo: long zzf
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: int newCheckScrollStoppedTask
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Headline
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] AppCompatTextHelper
me.carda.awesome_notifications.core.enumerators.MediaSource: java.lang.String safeName
com.google.firestore.v1.RunAggregationQueryRequest: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.webkit.WebChromeClient$CustomViewCallback mCustomViewCallback
me.carda.awesome_notifications.core.threads.NotificationScheduler: android.content.Intent originalIntent
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_hint_foreground_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] AppCompatEmojiHelper
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: java.util.List notificationEventListeners
me.carda.awesome_notifications.R$id: int tag_on_receive_content_listener
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BOOLEAN
me.carda.awesome_notifications.R$id: int accessibility_custom_action_27
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_PRIVACY
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String DETAILED_PAGE_NOT_FOUND
com.google.firestore.v1.ListenResponse: int responseTypeCase_
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SHOW_IN_COMPACT_VIEW
androidx.datastore.preferences.protobuf.GeneratedMessageLite: androidx.datastore.preferences.protobuf.UnknownFieldSetLite unknownFields
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver: java.lang.String TAG
me.carda.awesome_notifications.core.externalLibs.CronExpression: int MONTH
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.lang.String TAG
com.google.firestore.v1.StructuredQuery$Filter: int COMPOSITE_FILTER_FIELD_NUMBER
me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException: java.lang.String detailedCode
com.google.protobuf.Int64Value: int VALUE_FIELD_NUMBER
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified firebaseInstallationsApi
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_trackTintMode
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int windowFixedHeightMinor
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: double right
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_28
com.google.firestore.v1.WriteResult: int TRANSFORM_RESULTS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$10: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Subhead_Inverse
me.carda.awesome_notifications.R$styleable: int SplitPairRule_splitLayoutDirection
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.List loadType
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_navigationIcon
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int LinearLayoutCompat_android_orientation
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V22_Theme_AppCompat
com.google.android.gms.internal.measurement.zzfy$zzd: com.google.android.gms.internal.measurement.zzfy$zzd zzc
com.pichillilorenzo.flutter_inappwebview_android.R$integer: int config_tooltipAnimTime
com.pichillilorenzo.flutter_inappwebview_android.R$id: int chronometer
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Button
com.pichillilorenzo.flutter_inappwebview_android.R$id: int rtl
com.google.firestore.v1.BatchGetDocumentsResponse: java.lang.Object result_
com.google.firestore.v1.ExistenceFilter: com.google.firestore.v1.ExistenceFilter DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat_Light
com.google.firestore.v1.StructuredQuery: int WHERE_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$interpolator: int fast_out_slow_in
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int DrawerArrowToggle_drawableSize
com.google.android.gms.internal.measurement.zzfy$zzk: int zzbo
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] LinearLayoutCompat
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Internal$ProtobufList writes_
com.google.gson.stream.JsonReader: int NUMBER_CHAR_SIGN
com.pichillilorenzo.flutter_inappwebview_android.R$string: int copy_toast_msg
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_textAppearancePopupMenuHeader
me.carda.awesome_notifications.R$styleable: int FontFamily_fontProviderAuthority
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_RatingBar_Small
com.google.firebase.firestore.proto.MaybeDocument: com.google.firebase.firestore.proto.MaybeDocument DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_NOTIFICATION
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_windowFixedHeightMinor
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Title
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_actionProviderClass
me.carda.awesome_notifications.R$attr: int primaryActivityName
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort: boolean isTransferred
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_TIMEOUT_AFTER
me.carda.awesome_notifications.core.enumerators.NotificationSource: me.carda.awesome_notifications.core.enumerators.NotificationSource Firebase
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String bigPicture
androidx.datastore.preferences.PreferencesProto$Value: int BOOLEAN_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: boolean inFullscreen
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_display_4_material
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE_INFORMATION
me.carda.awesome_notifications.core.services.ForegroundService: java.util.Map serviceStack
com.google.firestore.v1.ListenRequest: int ADD_TARGET_FIELD_NUMBER
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Float playbackSpeed
com.google.protobuf.Any: com.google.protobuf.Parser PARSER
com.google.firestore.v1.BatchGetDocumentsRequest: java.lang.String database_
me.carda.awesome_notifications.core.enumerators.MediaSource: me.carda.awesome_notifications.core.enumerators.MediaSource Resource
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MAX_PROGRESS
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_colorBackgroundFloating
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.util.Map pluginScripts
com.google.android.gms.internal.measurement.zzfr$zzf: com.google.android.gms.internal.measurement.zzll zzd
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: boolean hasGesture
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Text
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_edit_text_inset_horizontal_material
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModePasteDrawable
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int colorSwitchThumbNormal
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DELETE_NOTIFICATION_CHANNEL_GROUP_METHOD
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String INPUTS
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean needInitialFocus
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int compat_button_inset_vertical_material
kotlinx.coroutines.DefaultExecutor: int debugStatus
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_bar_default_padding_start_material
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.util.List actionInputs
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModeBackground
me.carda.awesome_notifications.R$attr: int tag
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AnimatedStateListDrawableTransition_android_toId
kotlinx.coroutines.JobSupport$Finishing: java.lang.Object _rootCause
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int notification_template_part_time
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int View_theme
me.carda.awesome_notifications.AwesomeNotificationsPlugin: me.carda.awesome_notifications.core.AwesomeNotifications awesomeNotifications
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$4: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
com.google.gson.stream.JsonReader: long peekedLong
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabsHelper: java.lang.String EXTRA_CUSTOM_TABS_KEEP_ALIVE
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean released
me.carda.awesome_notifications.core.Definitions: java.lang.String ACTIVE_NOTIFICATION_IDS
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Integer color
me.carda.awesome_notifications.R$styleable: int[] SplitPairFilter
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int switchStyle
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$9: boolean val$enable
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.Timestamp readTime_
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastDequeueTime
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_android_shadowDy
com.google.firestore.v1.StructuredQuery$Filter: int filterTypeCase_
com.google.firestore.v1.Write: int UPDATE_MASK_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$id: int customPanel
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AnimatedStateListDrawableCompat_android_visible
me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour: java.lang.String safeName
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$1: com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort this$0
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: java.lang.Integer orientation
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.lang.String METHOD_CHANNEL_NAME_PREFIX
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModePopupWindowStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONVERSATION_TITLE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_textLocale
com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript: boolean requiredInAllContentWorlds
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String REQUEST_FULL_SCREEN_INTENT_PERMISSION_METHOD
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_action_bar_title_item
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_action_clickable_span
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState state
com.google.android.gms.internal.measurement.zzfy$zzh: float zzi
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int compat_notification_large_icon_max_height
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] ActivityFilter
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.ScheduleMode scheduleMode
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource RawResource
com.google.android.gms.internal.measurement.zzfr$zzg: com.google.android.gms.internal.measurement.zzll zzd
me.carda.awesome_notifications.core.models.NotificationContentModel: me.carda.awesome_notifications.core.enumerators.NotificationPlayState playState
me.carda.awesome_notifications.core.enumerators.NotificationLayout: java.lang.String safeName
me.carda.awesome_notifications.core.externalLibs.CronExpression: int nthdayOfWeek
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView: com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout pullToRefreshLayout
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Query
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int tintMode
com.google.firestore.v1.TargetChange: int targetChangeType_
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Internal$ProtobufList orderBy_
me.carda.awesome_notifications.R$styleable: int[] FragmentContainerView
me.carda.awesome_notifications.R$drawable: int notification_bg_low
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dialog_list_padding_top_no_title
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Title
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_titleMarginTop
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mCreationTimestamp
com.google.android.gms.internal.measurement.zzfo$zze: boolean zzk
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_android_textColor
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Headline
com.google.android.gms.internal.measurement.zzfo$zzb: int zzf
com.pichillilorenzo.flutter_inappwebview_android.R$id: int group_divider
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_capital_on
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] ActivityChooserView
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.JavaScriptBridgeJS: com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript JAVASCRIPT_BRIDGE_JS_PLUGIN_SCRIPT
androidx.browser.customtabs.CustomTabsCallback: int ACTIVITY_LAYOUT_STATE_FULL_SCREEN
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int background
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingSettings: java.util.List categories
me.carda.awesome_notifications.core.enumerators.NotificationImportance: java.lang.String safeName
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] Toolbar
com.google.firestore.v1.ExistenceFilter: int TARGET_ID_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$color: int material_grey_50
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: java.util.Set allowedOriginRules
androidx.datastore.preferences.PreferencesProto$Value: int valueCase_
com.google.firestore.v1.ListenRequest: int DATABASE_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActivityFilter_activityName
me.carda.awesome_notifications.core.models.NotificationButtonModel: me.carda.awesome_notifications.core.enumerators.ActionType actionType
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int windowActionBarOverlay
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ViewBackgroundHelper_backgroundTintMode
me.carda.awesome_notifications.R$styleable: int[] GradientColor
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterAssets flutterAssets
com.google.android.gms.internal.measurement.zzfr$zzg: java.lang.String zzg
com.google.android.gms.internal.measurement.zzfr$zzc: int zze
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PROGRESS
me.carda.awesome_notifications.core.Definitions: java.lang.String FIREBASE_ENABLED
me.carda.awesome_notifications.R$anim: int fragment_fast_out_extra_slow_in
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int dialogCornerRadius
com.google.firestore.v1.StructuredQuery$CollectionSelector: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int btn_radio_to_on_mtrl_ring_outer_path_animation
me.carda.awesome_notifications.core.utils.SerializableUtils: java.lang.String TAG
com.google.android.gms.measurement.internal.zzaj: android.os.Parcelable$Creator CREATOR
androidx.fragment.app.FragmentActivity: java.lang.String LIFECYCLE_TAG
androidx.browser.customtabs.CustomTabsCallback: int ACTIVITY_LAYOUT_STATE_SIDE_SHEET_MAXIMIZED
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean blockNetworkLoads
com.pichillilorenzo.flutter_inappwebview_android.R$id: int search_voice_btn
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$9: android.webkit.JsPromptResult val$result
me.carda.awesome_notifications.R$attr: int font
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Parser PARSER
me.carda.awesome_notifications.core.models.NotificationModel: me.carda.awesome_notifications.core.models.NotificationContentModel content
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_MINUTE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_Compat_NotificationActionText
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_ratingBarStyle
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings: java.util.List bypassRules
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPlaceholderRule_splitMaxAspectRatioInLandscape
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$4$1: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$4 this$1
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_android_numericShortcut
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] SplitPlaceholderRule
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel webMessageChannel
me.carda.awesome_notifications.core.managers.StatusBarManager: android.content.SharedPreferences preferences
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int hint_pressed_alpha_material_dark
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$18: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
me.carda.awesome_notifications.core.utils.StringUtils: me.carda.awesome_notifications.core.utils.StringUtils instance
me.carda.awesome_notifications.R$id: int chronometer
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int buttonBarNegativeButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.R$id: int right_side
com.pichillilorenzo.flutter_inappwebview_android.R$string: int action_go_forward
androidx.fragment.app.FragmentActivity: boolean mCreated
com.google.android.gms.internal.measurement.zzfy$zzf: com.google.android.gms.internal.measurement.zzfy$zzf zzc
me.carda.awesome_notifications.R$id: int accessibility_custom_action_14
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int colorAccent
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Email
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission CriticalAlert
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$2: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate this$0
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$12: java.lang.String val$itemTitle
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$5: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_android_shadowRadius
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextHelper_android_textAppearance
com.pichillilorenzo.flutter_inappwebview_android.R$color: int highlighted_text_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_menu_shift_shortcut_label
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PromisePolyfillJS: com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript PROMISE_POLYFILL_JS_PLUGIN_SCRIPT
com.google.firestore.v1.DocumentChange: int TARGET_IDS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$string: int call_notification_decline_action
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean attached
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_android_textSize
me.carda.awesome_notifications.core.managers.LocalizationManager: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PrintJS: java.lang.String PRINT_JS_PLUGIN_SCRIPT_GROUP_NAME
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int DEFAULT_SLINGSHOT_DISTANCE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long timeoutAfter
com.google.firestore.v1.DocumentRemove: int removedTargetIdsMemoizedSerializedSize
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatImageView_android_src
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: java.lang.String DEFAULT_MIME_TYPES
me.carda.awesome_notifications.R$styleable: int GradientColorItem_android_offset
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_bar_subtitle_top_margin_material
com.google.android.gms.internal.measurement.zzfy$zzh: com.google.android.gms.internal.measurement.zzll zzd
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int PREFER_MEDIA_QUERY_OVER_FORCE_DARK
me.carda.awesome_notifications.core.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_maxButtonHeight
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_START
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_SeekBar
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int autoCompleteTextViewStyle
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_cab_background_top_material
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager: java.util.Map keepAliveWebViews
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: java.lang.String cancelButtonTitle
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType RAW
me.carda.awesome_notifications.core.managers.StatusBarManager: java.util.Map activeNotificationsGroup
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.Boolean keepAliveEnabled
com.pichillilorenzo.flutter_inappwebview_android.R$id: int notification_background
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings$DirectoryBasePaths: java.lang.String cacheDirectoryBasePath
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_action_menu_layout
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_text_select_handle_left_mtrl
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType SVG_DOCUMENT
me.carda.awesome_notifications.R$styleable: int SplitPairRule_finishSecondaryWithPrimary
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamily_fontProviderAuthority
me.carda.awesome_notifications.core.enumerators.LogLevel: me.carda.awesome_notifications.core.enumerators.LogLevel all
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_title_material_toolbar
com.pichillilorenzo.flutter_inappwebview_android.R$animator: int fragment_open_enter
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigManager processGlobalConfigManager
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager manager
me.carda.awesome_notifications.core.enumerators.ActionType: me.carda.awesome_notifications.core.enumerators.ActionType InputField
com.google.firestore.v1.DocumentTransform$FieldTransform: int INCREMENT_FIELD_NUMBER
me.carda.awesome_notifications.core.managers.ScheduleManager: me.carda.awesome_notifications.core.managers.RepositoryManager shared
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_seekbar_track_material
com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse: java.lang.Integer action
androidx.browser.customtabs.CustomTabsCallback: int TAB_SHOWN
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer hour
androidx.browser.customtabs.CustomTabsCallback: int NAVIGATION_FINISHED
com.google.android.gms.internal.measurement.zzfy$zzb: int zze
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.Boolean debug
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_Switch
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance None
androidx.fragment.app.BackStackState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$id: int icon
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ActionBar_TabBar
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy: java.util.ArrayList listenersBeforeWebView
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks: java.util.Map noHistoryBrowserIDs
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_Title
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean released
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.TreeSet daysOfWeek
me.carda.awesome_notifications.core.broadcasters.receivers.DismissedNotificationReceiver: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: java.lang.String jsObjectName
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_DRAWABLE_RESOURCE_ERROR_MESSAGE
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: java.lang.String confirmButtonTitle
com.google.android.gms.internal.measurement.zzfy$zzh: java.lang.String zzf
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Capability_queryPatterns
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Animation_AppCompat_Dialog
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_body_2_material
me.carda.awesome_notifications.core.managers.DisplayedManager: me.carda.awesome_notifications.core.managers.RepositoryManager shared
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$4: android.webkit.WebView val$view
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzr
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum: com.google.firestore.v1.StructuredQuery$FieldReference field_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_colorPrimaryDark
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_tab_indicator_material
com.google.gson.stream.JsonReader: int NUMBER_CHAR_EXP_E
com.google.firestore.v1.ArrayValue: com.google.protobuf.Parser PARSER
com.google.firestore.v1.ListenRequest: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ActionBar_TabView
com.google.firestore.v1.StructuredQuery$Projection: int FIELDS_FIELD_NUMBER
me.carda.awesome_notifications.R$id: int accessibility_custom_action_4
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mExpiredEventParams
com.google.android.gms.internal.measurement.zzfo$zze: int zze
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebViewManager headlessInAppWebViewManager
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Menu
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_DayNight
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_layout
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int LinearLayoutCompat_dividerPadding
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.firestore.v1.TransactionOptions$ReadWrite DEFAULT_INSTANCE
kotlinx.coroutines.android.HandlerContext: kotlinx.coroutines.android.HandlerContext _immediate
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_colorControlNormal
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Caption
com.google.android.gms.internal.measurement.zzib: int zza
com.google.firestore.v1.WriteRequest: int STREAM_ID_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String id
com.google.gson.stream.JsonReader: int PEEKED_UNQUOTED
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuView_android_itemTextAppearance
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_numericModifiers
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_VIBRATION_PATTERN
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Capability_shortcutMatchRequired
com.pichillilorenzo.flutter_inappwebview_android.R$animator: int fragment_close_exit
com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld: com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld DEFAULT_CLIENT
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer disabledActionModeMenuItems
me.carda.awesome_notifications.R$id: int accessibility_custom_action_30
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: java.lang.Integer action
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int CompoundButton_buttonTintMode
com.google.firestore.admin.v1.Index$IndexField: java.lang.Object valueMode_
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String fixedFontFamily
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_activityChooserViewStyle
com.pichillilorenzo.flutter_inappwebview_android.R$string: int action_go_back
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int CheckedTextView_checkMarkCompat
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.util.List exitAnimations
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthenticationChallenge: com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential proposedCredential
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_BLUE
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String name
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ROUNDED_BIG_PICTURE
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_alert_dialog_button_bar_height
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SILENT
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int ANIMATE_TO_TRIGGER_DURATION
com.google.android.gms.internal.measurement.zzfy$zzk: int zzaj
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10$1: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10 this$1
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.Integer hour
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.CircleImageView mCircleView
com.pichillilorenzo.flutter_inappwebview_android.R$id: int scrollIndicatorUp
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String DESCRIPTION
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceDao: java.lang.String[] projection
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_checkboxStyle
com.pichillilorenzo.flutter_inappwebview_android.R$id: int notification_main_column_container
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActivityChooserView
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModeCloseButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_button_padding_horizontal_material
com.google.android.gms.internal.measurement.zzgd$zza: com.google.android.gms.internal.measurement.zzkc zze
com.dexterous.flutterlocalnotifications.models.NotificationStyle: com.dexterous.flutterlocalnotifications.models.NotificationStyle Inbox
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Fragment_android_tag
me.carda.awesome_notifications.R$id: int notification_background
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_navigationContentDescription
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int tooltip_y_offset_non_touch
com.google.firestore.bundle.BundledQuery: int limitType_
com.pichillilorenzo.flutter_inappwebview_android.R$id: int time
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Platform_AppCompat
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ic_go_search_api_material
com.google.android.gms.measurement.internal.zzo: android.os.Parcelable$Creator CREATOR
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$SpeculativeLoadingStatus: int DISABLED
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getContentWidth
com.google.protobuf.Any: com.google.protobuf.ByteString value_
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NAME
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TITLE
me.carda.awesome_notifications.core.utils.BooleanUtils: me.carda.awesome_notifications.core.utils.BooleanUtils instance
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int DrawerArrowToggle_spinBars
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Text
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_METHOD
me.carda.awesome_notifications.core.Definitions: java.lang.String SHARED_SCHEDULED_NOTIFICATIONS
me.carda.awesome_notifications.core.threads.NotificationScheduler: me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler threadCompletionHandler
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_SearchView
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionBarTheme
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCircleDiameter
com.google.firestore.v1.ExistenceFilter: int targetId_
me.carda.awesome_notifications.R$dimen: int notification_content_margin_start
com.google.firestore.v1.Write: com.google.protobuf.Parser PARSER
com.google.gson.stream.JsonWriter: boolean serializeNulls
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.String TABLE_LONG
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] AnimatedStateListDrawableItem
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivitySingleInstance: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView: java.lang.String METHOD_CHANNEL_NAME_PREFIX
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int windowMinWidthMinor
com.google.protobuf.GeneratedMessageLite: java.util.Map defaultInstanceMap
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mTouchSlop
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean networkAvailable
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean loadWithOverviewMode
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: java.lang.String message
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.String TAG
me.carda.awesome_notifications.R$attr: int queryPatterns
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: java.lang.String DATABASE_NAME
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods injectCSSCode
com.google.firestore.v1.Target: int QUERY_FIELD_NUMBER
me.carda.awesome_notifications.R$attr: int secondaryActivityAction
com.google.firestore.v1.WriteRequest: int DATABASE_FIELD_NUMBER
io.flutter.view.AccessibilityViewEmbedder: java.util.Map originToFlutterId
com.google.android.gms.internal.measurement.zzfr$zza$zzc: int zzg
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamily_fontProviderPackage
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int editTextColor
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$Filter where_
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: boolean onOpened
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory[] $VALUES
me.carda.awesome_notifications.R$styleable: int[] FontFamily
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String applicationNameForUserAgent
io.flutter.view.AccessibilityViewEmbedder: android.view.View rootAccessibilityView
com.google.firestore.v1.DocumentTransform: com.google.firestore.v1.DocumentTransform DEFAULT_INSTANCE
me.carda.awesome_notifications.core.Definitions: java.lang.String DISPLAYED_HANDLE
com.google.firestore.admin.v1.Index$IndexField: int ARRAY_CONFIG_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AlertDialog_buttonIconDimen
com.google.firebase.firestore.proto.Target: int LAST_LIMBO_FREE_SNAPSHOT_VERSION_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannelChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel webMessageChannel
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_DISMISS_NOTIFICATION
me.carda.awesome_notifications.core.Definitions: java.lang.String EXTRA_BROADCAST_FCM_TOKEN
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_textAppearanceSmallPopupMenu
com.google.firestore.v1.DocumentMask: com.google.protobuf.Internal$ProtobufList fieldPaths_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int progressBarPadding
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_toolbarNavigationButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings: java.lang.String dataDirectorySuffix
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods callAsyncJavaScript
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt: java.lang.String description
com.google.firestore.v1.DocumentChange: com.google.firestore.v1.DocumentChange DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.Boolean enableUrlBarHiding
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.String secondaryToolbarColor
androidx.fragment.app.FragmentActivity: boolean mResumed
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$17: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
com.google.firestore.v1.RunAggregationQueryRequest: int PARENT_FIELD_NUMBER
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory mDefaultFactory
com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType: com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType RECOMMENDED
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String titleLocKey
me.carda.awesome_notifications.R$id: int accessibility_custom_action_15
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_INTERVAL
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int FORCE_DARK_ONLY
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$SpeculativeLoadingStatus: int PRERENDER_ENABLED
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager inAppWebViewManager
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int progressBarStyle
me.carda.awesome_notifications.core.managers.CancellationManager: me.carda.awesome_notifications.core.managers.CancellationManager instance
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_scrubber_primary_mtrl_alpha
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ALL_METHOD
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$5: float m_downX
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_expanded_menu_layout
com.google.android.gms.internal.measurement.zzfo$zzd: java.lang.String zzh
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Button_Small
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String customSound
io.flutter.view.AccessibilityViewEmbedder: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Title
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener mListener
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PENDING_NOTIFICATION_REQUESTS_METHOD
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int ime_base_split_test_activity
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_8
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int tooltip_frame_light
com.google.android.gms.internal.measurement.zzgd$zzd: com.google.android.gms.internal.measurement.zzll zzd
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_ANY
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_6
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Inverse
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V28_Theme_AppCompat
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods evaluateJavascript
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int contentInsetRight
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: android.os.Handler mHandler
com.google.android.gms.internal.measurement.zzfy$zze: long zzg
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tag_accessibility_clickable_spans
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_tooltipForegroundColor
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_select_dialog_material
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairFilter_primaryActivityName
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_list_pressed_holo_dark
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzt
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$15: android.webkit.JsResult val$result
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat_Dialog_MinWidth
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int btn_checkbox_to_unchecked_check_path_merged_animation
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String CANCEL_NOTIFICATION
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int popupTheme
com.pichillilorenzo.flutter_inappwebview_android.R$integer: int abc_config_activityShortDur
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long lastScheduleTime
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_dropDownListViewStyle
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionBarTabTextStyle
com.pichillilorenzo.flutter_inappwebview_android.types.PrintAttributesExt: int colorMode
com.google.firestore.v1.StructuredQuery$FieldFilter: int FIELD_FIELD_NUMBER
androidx.browser.customtabs.CustomTabsCallback: int NAVIGATION_FAILED
me.carda.awesome_notifications.core.models.returnedData.NotificationReceived: android.content.Intent originalIntent
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: android.content.Context applicationContext
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat this$0
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: java.lang.String source
me.carda.awesome_notifications.core.managers.DismissedManager: me.carda.awesome_notifications.core.managers.RepositoryManager shared
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_AutoCompleteTextView
me.carda.awesome_notifications.R$id: int view_tree_lifecycle_owner
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ProgressBar_Horizontal
com.google.android.gms.internal.measurement.zzfr$zzc: com.google.android.gms.internal.measurement.zzll zzd
me.carda.awesome_notifications.core.threads.NotificationSender: me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler threadCompletionHandler
me.carda.awesome_notifications.R$id: int accessibility_custom_action_1
com.google.firestore.v1.Precondition: int conditionTypeCase_
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$3: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getScrollY
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionBarDivider
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMESTAMP
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceDao: com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper credentialDatabaseHelper
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ListMenuView
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$5: float m_downY
com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld: com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld PAGE
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.Integer screenOrientation
me.carda.awesome_notifications.R$id: int accessibility_custom_action_12
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_config_prefDialogWidth
com.google.firebase.firestore.proto.NoDocument: int READ_TIME_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.models.BitmapSource largeIconBitmapSource
me.carda.awesome_notifications.core.Definitions: java.lang.String BROADCAST_DISPLAYED_NOTIFICATION
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int panelBackground
kotlinx.coroutines.scheduling.CoroutineScheduler: long parkedWorkersStack
me.carda.awesome_notifications.core.Definitions: java.lang.String BADGE_COUNT
me.carda.awesome_notifications.core.models.NotificationContentModel: me.carda.awesome_notifications.core.enumerators.NotificationSource createdSource
com.google.gson.stream.JsonReader: java.lang.String[] pathNames
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldReference field_
com.google.android.gms.common.zzo: android.os.Parcelable$Creator CREATOR
com.google.protobuf.Int32Value: int value_
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] $VALUES
com.google.firestore.v1.Write: com.google.firestore.v1.Precondition currentDocument_
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int ic_call_decline
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int notification_template_icon_low_bg
me.carda.awesome_notifications.core.background.BackgroundExecutor: me.carda.awesome_notifications.core.background.BackgroundExecutor runningInstance
me.carda.awesome_notifications.core.logs.Logger: java.lang.String yellowColor
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SOUND_SOURCE
me.carda.awesome_notifications.core.utils.CalendarUtils: java.util.TimeZone localTimeZone
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ic_menu_cut_mtrl_alpha
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] ViewStubCompat
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_ON_MS
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Display2
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingSettings: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.util.Map userOnlyScripts
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColor_android_tileMode
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatSeekBar_android_thumb
me.carda.awesome_notifications.core.enumerators.ActionType: me.carda.awesome_notifications.core.enumerators.ActionType[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.types.PrintAttributesExt: com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt resolution
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt webViewAssetLoaderExt
com.google.firestore.v1.RunAggregationQueryRequest: int NEW_TRANSACTION_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfy$zza: java.lang.String zzg
androidx.datastore.preferences.PreferencesProto$Value: int FLOAT_FIELD_NUMBER
me.carda.awesome_notifications.core.models.NotificationScheduleModel: java.util.Calendar createdDate
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$1: boolean val$isForMainFrame
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings customSettings
com.google.firestore.v1.DocumentTransform$FieldTransform: int MAXIMUM_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.JavaScriptBridgeJS: java.lang.String PLATFORM_READY_JS_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: java.lang.String LOG_TAG
me.carda.awesome_notifications.core.utils.MediaUtils: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: java.util.HashMap perImageReaders
com.google.android.gms.internal.measurement.zzfy$zzk: int zze
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$2: android.webkit.JsResult val$result
kotlinx.coroutines.internal.AtomicOp: java.lang.Object _consensus
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActionBar_Solid_Inverse
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tag_screen_reader_focusable
me.carda.awesome_notifications.core.models.NotificationScheduleModel: java.lang.Boolean repeats
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.util.ArrayList messages
com.google.firestore.v1.StructuredAggregationQuery: com.google.firestore.v1.StructuredAggregationQuery DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$3: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity this$0
com.google.android.gms.internal.measurement.zzfo$zzb: com.google.android.gms.internal.measurement.zzkc zzh
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: android.view.GestureDetector gestureDetector
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _queue
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_ARRAY
com.google.firestore.v1.StructuredQuery$CompositeFilter: int op_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_ALPHA
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean cacheEnabled
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$3: android.net.http.SslError val$sslError
com.google.android.gms.internal.measurement.zzgd$zzc: int zze
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController: com.pichillilorenzo.flutter_inappwebview_android.types.FindSession activeFindSession
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods createWebMessageChannel
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState[] $VALUES
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder: java.lang.Exception exception
com.google.firestore.bundle.BundledQuery: int STRUCTURED_QUERY_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int buttonCompat
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: java.util.Calendar dismissedDate
androidx.datastore.preferences.protobuf.GeneratedMessageLite: int memoizedSerializedSize
com.pichillilorenzo.flutter_inappwebview_android.webview.FlutterWebViewFactory: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
com.google.android.gms.internal.measurement.zzfy$zze: com.google.android.gms.internal.measurement.zzfy$zze zzc
me.carda.awesome_notifications.core.models.NotificationChannelGroupModel: java.lang.String channelGroupName
com.google.firebase.firestore.proto.WriteBatch: com.google.firebase.firestore.proto.WriteBatch DEFAULT_INSTANCE
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate asyncWaitForVsyncDelegate
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_backgroundStacked
com.google.firestore.v1.ListenRequest: com.google.protobuf.MapFieldLite labels_
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: int DATABASE_VERSION
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: java.lang.String COLUMN_ID
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.Integer ledOnMs
com.google.gson.stream.JsonReader: int PEEKED_EOF
me.carda.awesome_notifications.core.enumerators.ActionType: java.lang.String safeName
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_switchStyle
com.pichillilorenzo.flutter_inappwebview_android.types.SyncBaseCallbackResultImpl: java.lang.Object result
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_DISPLAYED_DATE
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_bar_spinner
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String DOCUMENT_READY_WRAPPER_JS_SOURCE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$InsetsListener insetsListener
me.carda.awesome_notifications.R$id: int italic
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BUTTON_ACTION_PREFIX
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzba
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Count: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods addWebMessageListener
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods isSecureContext
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int singleChoiceItemLayout
com.pichillilorenzo.flutter_inappwebview_android.R$id: int right_icon
com.google.firestore.v1.WriteResult: int UPDATE_TIME_FIELD_NUMBER
me.carda.awesome_notifications.core.threads.NotificationScheduler: java.util.Calendar initialDate
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager proxyManager
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer progress
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnWindowBlurEventJS: com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript ON_WINDOW_BLUR_EVENT_JS_PLUGIN_SCRIPT
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int textColorSearchUrl
com.google.android.material.stateful.ExtendableSavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_android_textFontWeight
com.google.firestore.v1.ListenRequest: int LABELS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int DrawerArrowToggle_arrowHeadLength
com.pichillilorenzo.flutter_inappwebview_android.R$id: int textSpacerNoTitle
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_edit_text_inset_top_material
io.flutter.embedding.engine.FlutterJNI: java.util.Set engineLifecycleListeners
com.google.firebase.firestore.proto.MaybeDocument: int documentTypeCase_
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_cab_background_internal_bg
com.google.android.gms.internal.measurement.zzfr$zza$zzf: int zze
com.google.protobuf.GeneratedMessageLite: int MEMOIZED_SERIALIZED_SIZE_MASK
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tag_state_description
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map subtypeToLabel
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int STARTING_PROGRESS_ALPHA
com.pichillilorenzo.flutter_inappwebview_android.R$id: int bottomToTop
me.carda.awesome_notifications.R$drawable: int notification_oversize_large_icon_bg
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlUnderlay_Widget_AppCompat_ActionButton_Overflow
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int StateListDrawable_android_enterFadeDuration
com.google.gson.stream.JsonReader: int lineStart
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_list_menu_item_checkbox
me.carda.awesome_notifications.core.models.NotificationScheduleModel: java.lang.Boolean allowWhileIdle
me.carda.awesome_notifications.R$string: int call_notification_hang_up_action
com.pichillilorenzo.flutter_inappwebview_android.R$style: int AlertDialog_AppCompat_Light
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_contentInsetStart
me.carda.awesome_notifications.core.managers.PermissionManager: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.google.firestore.v1.MapValue: int FIELDS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_dialogPreferredPadding
me.carda.awesome_notifications.R$layout: int ime_secondary_split_test_activity
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzkc zzn
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_switchTextAppearance
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AlertDialog_android_layout
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.Integer era
com.google.android.gms.internal.measurement.zzfr$zzi: java.lang.String zzg
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_Search_DropDown_Icon1
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuGroup_android_checkableBehavior
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_btn_check_to_on_mtrl_015
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean ignoringFence
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: java.lang.Object operator_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPlaceholderRule_finishPrimaryWithPlaceholder
com.pichillilorenzo.flutter_inappwebview_android.R$color: int material_grey_850
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String WHEN
com.google.protobuf.Timestamp: int NANOS_FIELD_NUMBER
me.carda.awesome_notifications.core.models.NotificationCrontabModel: java.util.List preciseSchedules
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TICKER
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeSafariBrowserManager: java.lang.String id
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.String packageName
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleAnimation
com.google.android.gms.internal.measurement.zzfr$zzi: com.google.android.gms.internal.measurement.zzfr$zzi zzc
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$14: int val$x
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_search_hint
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView proxyAdapterView
com.google.android.gms.internal.measurement.zzfr$zzb: boolean zzh
com.google.android.gms.internal.measurement.zzfo$zza: com.google.android.gms.internal.measurement.zzkc zzh
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String REQUEST_EXACT_ALARMS_PERMISSION_METHOD
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionBarSize
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: byte[] icon
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$3: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionBarStyle
me.carda.awesome_notifications.R$id: int text
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_30
com.google.firestore.v1.StructuredAggregationQuery: int queryTypeCase_
com.dexterous.flutterlocalnotifications.models.RepeatInterval: com.dexterous.flutterlocalnotifications.models.RepeatInterval Daily
com.google.android.gms.internal.measurement.zzfr$zzf: int zzf
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2: int val$finalPort
me.carda.awesome_notifications.R$string: int call_notification_screening_text
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer forceDark
me.carda.awesome_notifications.core.enumerators.LogLevel: me.carda.awesome_notifications.core.enumerators.LogLevel[] valueList
me.carda.awesome_notifications.core.models.NotificationContentModel: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle displayedLifeCycle
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_bar_content_inset_with_nav
me.carda.awesome_notifications.core.broadcasters.receivers.ScheduledNotificationReceiver: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$color: int notification_icon_bg_color
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] AppCompatTheme
com.pichillilorenzo.flutter_inappwebview_android.R$id: int expanded_menu
com.pichillilorenzo.flutter_inappwebview_android.R$id: int view_tree_on_back_pressed_dispatcher_owner
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int EXACT_ALARM_PERMISSION_REQUEST_CODE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] FontFamily
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$2: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int queryBackground
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int View_android_focusable
kotlinx.coroutines.EventLoopImplBase$DelayedTask: java.lang.Object _heap
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int subtitleTextColor
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: boolean onCompletedInitialLoad
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int LinearLayoutCompat_android_weightSum
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.JavaScriptBridgeJS: java.lang.String JAVASCRIPT_BRIDGE_NAME
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String NAME
com.google.gson.stream.JsonScope: int CLOSED
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_Widget_AppCompat_Toolbar_Subtitle
com.google.firestore.v1.StructuredQuery$UnaryFilter: int operandTypeCase_
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_DOCUMENT
com.google.android.gms.internal.measurement.zzfy$zzf: int zze
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int windowActionModeOverlay
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerManager tracingControllerManager
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_BLUE
me.carda.awesome_notifications.R$id: int accessibility_custom_action_9
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceContract$FeedEntry: java.lang.String COLUMN_NAME_PROTOCOL
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int gapBetweenBars
me.carda.awesome_notifications.R$styleable: int[] Fragment
me.carda.awesome_notifications.core.background.BackgroundExecutor: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.String navigationBarDividerColor
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: io.flutter.plugin.common.MethodChannel channel
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int CIRCLE_DIAMETER
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: boolean $assertionsDisabled
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer minute
com.google.firestore.v1.Value: java.lang.Object valueType_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_RatingBar_Indicator
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledColor
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods pageUp
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_searchview_description_query
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$18: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int alertDialogStyle
com.google.android.material.internal.CheckableImageButton$SavedState: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfo$zzc: com.google.android.gms.internal.measurement.zzfo$zzf zzf
me.carda.awesome_notifications.R$color: int notification_action_color_filter
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_logoDescription
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTimedOutEventParams
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_AUTO_DISMISSIBLE
com.google.android.gms.internal.measurement.zzgd$zzb: java.lang.String zzf
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Weekly
com.pichillilorenzo.flutter_inappwebview_android.R$string: int call_notification_answer_action
com.google.gson.stream.JsonWriter: java.lang.String indent
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$7: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_list_divider_mtrl_alpha
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_PopupMenu
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState rewinding
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$10: android.webkit.JsPromptResult val$result
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean chronometerCountDown
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AnimatedStateListDrawableCompat_android_variablePadding
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2: com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface this$0
com.pichillilorenzo.flutter_inappwebview_android.R$id: int search_button
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatBody
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzfy$zzk zzc
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModeSelectAllDrawable
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUB_TEXT
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: java.util.Map initialHeaders
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String DESCRIPTION
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int tag
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView$1: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView this$0
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager: java.lang.String METHOD_CHANNEL_NAME
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String VAR_JSON_SOURCE_ENCODED
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: java.util.Map buttonLabels
com.google.gson.stream.JsonReader: int limit
me.carda.awesome_notifications.R$styleable: int ActivityFilter_activityAction
me.carda.awesome_notifications.R$attr: int fontProviderCerts
com.google.android.gms.common.zzq: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.CommitResponse: com.google.protobuf.Internal$ProtobufList writeResults_
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: android.webkit.WebView webView
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer scrollBarDefaultDelayBeforeFade
io.flutter.plugin.platform.SingleViewPresentation: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActivityRule_tag
com.google.firestore.v1.RunAggregationQueryRequest: int consistencySelectorCase_
me.carda.awesome_notifications.core.enumerators.NotificationSource: me.carda.awesome_notifications.core.enumerators.NotificationSource[] valueList
com.pichillilorenzo.flutter_inappwebview_android.R$id: int pullToRefresh
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_drawableRightCompat
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_queryHint
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: java.lang.String id
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ENABLED
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_RESUME
com.google.gson.stream.JsonReader: int lineNumber
com.google.android.gms.internal.measurement.zzfy$zzk: int zzbl
kotlinx.coroutines.EventLoopImplBase: java.lang.Object _delayed
me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour: me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour All
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$16: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.google.firestore.v1.TransactionOptions$ReadOnly: com.google.firestore.v1.TransactionOptions$ReadOnly DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzfy$zzo: java.lang.String zzg
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean thirdPartyCookiesEnabled
com.pichillilorenzo.flutter_inappwebview_android.types.PrintAttributesExt: com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt mediaSize
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionBarTabBarStyle
com.google.firebase.firestore.proto.WriteBatch: int BATCH_ID_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Spinner_DropDown_ActionBar
androidx.browser.customtabs.CustomTabsCallback: int NAVIGATION_ABORTED
me.carda.awesome_notifications.R$id: int accessibility_custom_action_29
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzkc zzj
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Toolbar
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: java.lang.String safeName
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ic_search_api_material
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout: com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings settings
com.google.gson.stream.JsonWriter: java.lang.String separator
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Timestamp readTime_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_drawableEndCompat
me.carda.awesome_notifications.R$dimen: int notification_subtext_size
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabBar
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer minimumLogicalFontSize
com.google.firestore.v1.DocumentRemove: com.google.protobuf.Parser PARSER
me.carda.awesome_notifications.core.managers.DismissedManager: me.carda.awesome_notifications.core.managers.DismissedManager instance
com.google.firestore.v1.Target: com.google.protobuf.Int32Value expectedCount_
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$8: java.lang.String val$message
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dialog_fixed_height_major
io.flutter.embedding.engine.FlutterJNI: float displayHeight
me.carda.awesome_notifications.core.enumerators.NotificationSource: me.carda.awesome_notifications.core.enumerators.NotificationSource CallKit
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_DialogWhenLarge
me.carda.awesome_notifications.R$id: int action_divider
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatContentTitle
me.carda.awesome_notifications.core.models.NotificationMessageModel: java.lang.String title
com.pichillilorenzo.flutter_inappwebview_android.R$id: int split_action_bar
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Toolbar_Button_Navigation
androidx.activity.ComponentActivity: androidx.core.view.MenuHostHelper mMenuHostHelper
me.carda.awesome_notifications.core.Definitions: java.lang.String SHARED_SCHEDULED_NOT_IDS
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_dialog_title_material
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_Compat_Notification
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Integer chronometer
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance[] valueList
com.pichillilorenzo.flutter_inappwebview_android.R$color: int browser_actions_bg_grey
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CRONTAB_EXPRESSION
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$6: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String appCachePath
me.carda.awesome_notifications.R$id: int accessibility_custom_action_2
com.google.firestore.v1.DocumentTransform: java.lang.String document_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int title
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: int verticalDpi
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ColorStateListItem_android_lStar
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$CompatJobEngine mJobImpl
com.google.gson.internal.JsonReaderInternalAccess: com.google.gson.internal.JsonReaderInternalAccess INSTANCE
me.carda.awesome_notifications.R$styleable: int GradientColor_android_endColor
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Platform_V21_AppCompat
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.TreeSet months
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BUTTON_LABEL
com.pichillilorenzo.flutter_inappwebview_android.R$id: int view_tree_view_model_store_owner
com.google.android.gms.internal.measurement.zzfr$zzg: java.lang.String zzf
com.pichillilorenzo.flutter_inappwebview_android.WebViewFeatureManager: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
me.carda.awesome_notifications.R$styleable: int SplitPlaceholderRule_finishPrimaryWithPlaceholder
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$8: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_list_selector_holo_light
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V28_Theme_AppCompat_Light
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: java.lang.String summary
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String IS_ACTIVE_ELEMENT_INPUT_EDITABLE_JS_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_iconTintMode
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int multiChoiceItemLayout
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int selectableItemBackgroundBorderless
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_activitychooserview_choose_application
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] AppCompatSeekBar
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$3: int[] $SwitchMap$com$pichillilorenzo$flutter_inappwebview_android$content_blocker$ContentBlockerActionType
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods requestImageRef
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MESSAGES
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.lang.String mimeType
com.pichillilorenzo.flutter_inappwebview_android.R$color: int foreground_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_icon
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$1: java.lang.String val$url
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_contentInsetRight
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getContentHeight
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listChoiceIndicatorMultipleAnimated
me.carda.awesome_notifications.R$attr: int splitMinHeightDp
com.google.gson.stream.JsonReader: int NUMBER_CHAR_EXP_DIGIT
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: java.lang.String confirmButtonTitle
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ENABLE_VIBRATION
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessage: java.lang.String data
androidx.activity.ComponentActivity: int mContentLayoutId
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_31
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionBarItemBackground
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$3: android.webkit.WebView val$view
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_animateMenuItems
android.support.v4.media.session.MediaSessionCompat$ResultReceiverWrapper: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$color: int ripple_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_searchview_description_search
com.dexterous.flutterlocalnotifications.models.ScheduleMode: com.dexterous.flutterlocalnotifications.models.ScheduleMode inexact
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$19: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mTotalUnconsumed
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Object largeIcon
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabsHelper: java.lang.String DEV_PACKAGE
com.pichillilorenzo.flutter_inappwebview_android.R$color: int accent_material_light
com.google.firestore.v1.Write: int UPDATE_FIELD_NUMBER
me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType: me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType[] $VALUES
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String text
com.pichillilorenzo.flutter_inappwebview_android.R$color: int primary_text_disabled_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int compat_button_padding_horizontal_material
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceContract$FeedEntry: java.lang.String COLUMN_NAME_PORT
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.lang.String cronExpression
com.pichillilorenzo.flutter_inappwebview_android.R$color: int primary_dark_material_light
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialDao credentialDao
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.Long timestamp
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2: int val$finalPort
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String VAR_RESULT_UUID
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionOverflowMenuStyle
kotlinx.coroutines.sync.SemaphoreImpl: long deqIdx
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabsHelper: java.lang.String STABLE_PACKAGE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int spinnerDropDownItemStyle
me.carda.awesome_notifications.core.models.NotificationContentModel: me.carda.awesome_notifications.core.enumerators.NotificationCategory category
androidx.core.content.FileProvider: java.lang.String TAG_EXTERNAL
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_dialog_material_background
com.google.firestore.v1.StructuredQuery$CollectionSelector: int ALL_DESCENDANTS_FIELD_NUMBER
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsMenuItem: java.lang.String label
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_18
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: java.lang.String COLUMN_CONTENT
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamilyFont_ttcIndex
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERIODICALLY_SHOW_METHOD
com.google.android.gms.internal.measurement.zzfr$zzg: int zze
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ENABLE_LIGHTS
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String DEFAULT_ICON
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: boolean ignoringFence
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int arrowShaftLength
com.google.firebase.firestore.proto.UnknownDocument: int NAME_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_star_medium
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: java.lang.String id
com.pichillilorenzo.flutter_inappwebview_android.R$color: int primary_text_disabled_material_light
me.carda.awesome_notifications.core.logs.Logger: java.lang.String redColor
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int abc_popup_exit
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum: int bitField0_
com.google.android.gms.internal.measurement.zzfr$zzd: java.lang.String zzp
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_searchview_description_clear
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_btn_check_material_anim
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHandler: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
me.carda.awesome_notifications.core.models.NotificationContentModel: me.carda.awesome_notifications.core.enumerators.ActionType actionType
me.carda.awesome_notifications.R$attr: int finishPrimaryWithSecondary
me.carda.awesome_notifications.R$id: int report_drawn
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V21_Theme_AppCompat_Light_Dialog
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Title_Inverse
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int queryPatterns
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_SearchResult_Subtitle
me.carda.awesome_notifications.R$id: int topToBottom
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_bar
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_REQUIRE_INPUT_TEXT
me.carda.awesome_notifications.R$dimen: int notification_top_pad
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_listChoiceBackgroundIndicator
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Spinner_android_dropDownWidth
com.google.android.gms.internal.measurement.zzfy$zzf: com.google.android.gms.internal.measurement.zzkc zzf
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_CompoundButton_CheckBox
me.carda.awesome_notifications.R$drawable: int ic_call_answer_video_low
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_29
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.PermissionRequestListener callback
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_Dialog_MinWidth
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String subText
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionViewClass
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Platform_V25_AppCompat
com.google.android.gms.internal.measurement.zzfo$zze: com.google.android.gms.internal.measurement.zzfo$zzc zzh
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.util.List initialUserOnlyScripts
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERMISSION_REQUEST_IN_PROGRESS_ERROR_CODE
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.String KEY
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ActionBar
me.carda.awesome_notifications.core.managers.ChannelManager: me.carda.awesome_notifications.core.managers.RepositoryManager shared
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean useShouldInterceptAjaxRequest
com.google.gson.stream.JsonWriter: java.io.Writer out
com.google.android.gms.internal.measurement.zzgd$zzb: int zze
me.carda.awesome_notifications.core.background.BackgroundExecutor: java.lang.Long dartCallbackHandle
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String CODE_MISSING_ARGUMENTS
me.carda.awesome_notifications.R$styleable: int ActivityRule_tag
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int View_paddingEnd
me.carda.awesome_notifications.core.managers.ActionManager: me.carda.awesome_notifications.core.managers.ActionManager instance
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: int heightMils
com.google.android.gms.internal.measurement.zzfo$zze: boolean zzi
com.google.firebase.firestore.proto.UnknownDocument: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: float zoomScale
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$4: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView val$webView
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Message
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods clearFormData
com.google.firestore.v1.TargetChange: int RESUME_TOKEN_FIELD_NUMBER
com.google.firestore.bundle.BundledQuery: java.lang.Object queryType_
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.utils.JsonUtils jsonUtils
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean fullScreenIntent
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.String mainTargetClassName
me.carda.awesome_notifications.core.utils.IntegerUtils: java.security.SecureRandom random
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager serviceWorkerManager
android.support.v4.media.session.PlaybackStateCompat: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: android.net.http.SslCertificate sslCertificate
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int fontFamily
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int btn_radio_to_off_mtrl_dot_group_animation
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission PreciseAlarms
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: java.util.List menuItems
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Platform_V25_AppCompat_Light
com.google.android.gms.signin.internal.zai: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long calledAt
com.google.firestore.v1.RunAggregationQueryRequest: int STRUCTURED_AGGREGATION_QUERY_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ActionMode
me.carda.awesome_notifications.R$styleable: int[] FontFamilyFont
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.String channelGroupKey
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods zoomBy
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _prev
androidx.activity.ComponentActivity: androidx.activity.contextaware.ContextAwareHelper mContextAwareHelper
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int btn_radio_off_mtrl
com.google.android.gms.internal.measurement.zzfo$zzc: java.lang.String zzi
com.google.firestore.v1.Target$QueryTarget: com.google.firestore.v1.Target$QueryTarget DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int buttonBarButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_editTextBackground
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$Order DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse: java.lang.Integer action
me.carda.awesome_notifications.core.threads.NotificationSender: java.lang.Boolean displayed
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHOW_METHOD
androidx.concurrent.futures.AbstractResolvableFuture: java.lang.Object value
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_PopupMenu
com.google.firestore.v1.TargetChange: com.google.protobuf.Parser PARSER
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class baseType
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods canScrollVertically
me.carda.awesome_notifications.core.managers.LifeCycleManager: boolean wasNotCreated
com.pichillilorenzo.flutter_inappwebview_android.R$style: int ThemeOverlay_AppCompat_DayNight_ActionBar
com.google.firestore.v1.WriteResponse: int WRITE_RESULTS_FIELD_NUMBER
com.google.protobuf.Any: int VALUE_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int FULL_SCREEN_INTENT_PERMISSION_REQUEST_CODE
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int notification_template_part_chronometer
com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse: java.lang.Integer action
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String ID
me.carda.awesome_notifications.core.enumerators.ActionType: me.carda.awesome_notifications.core.enumerators.ActionType SilentBackgroundAction
me.carda.awesome_notifications.core.managers.ChannelManager: me.carda.awesome_notifications.core.utils.AudioUtils audioUtils
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: long contentLength
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$1: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView val$webView
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$1: java.util.Map val$headers
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate inAppBrowserDelegate
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType MEDIA
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ZONED_SCHEDULE_METHOD
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_bar_default_height_material
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BUTTON_KEY_PRESSED
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int tooltipFrameBackground
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int btn_checkbox_to_unchecked_icon_null_animation
com.google.firestore.v1.WriteResponse: int STREAM_ID_FIELD_NUMBER
me.carda.awesome_notifications.R$styleable: int SplitPairRule_splitRatio
me.carda.awesome_notifications.core.models.AbstractModel: java.util.Map defaultValues
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender: java.lang.String TAG
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery DEFAULT_INSTANCE
me.carda.awesome_notifications.R$attr: int animationBackgroundColor
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB instance
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: java.lang.ref.WeakReference wContextReference
com.pichillilorenzo.flutter_inappwebview_android.BuildConfig: java.lang.String BUILD_TYPE
com.google.firestore.v1.DocumentTransform$FieldTransform: int SET_TO_SERVER_VALUE_FIELD_NUMBER
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Status
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.String TABLE_FLOAT
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHandler: java.lang.String METHOD_CHANNEL_NAME
com.google.firestore.v1.RunAggregationQueryResponse: com.google.firestore.v1.AggregationResult result_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_alertDialogCenterButtons
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.List unlessTopUrl
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_medium_material
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float MAX_PROGRESS_ANGLE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionMode_background
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ic_menu_copy_mtrl_am_alpha
com.google.firestore.v1.Document: int NAME_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.Boolean htmlFormatSummaryText
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_android_thumb
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_android_checkable
com.google.gson.stream.JsonReader: int stackSize
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.Parser PARSER
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Progress
com.google.firestore.bundle.BundledQuery: java.lang.String parent_
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String regexToCancelSubFramesLoading
com.google.firestore.v1.StructuredQuery$Projection: com.google.firestore.v1.StructuredQuery$Projection DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzy
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_INITIAL_FIXED_DATE
com.google.firestore.v1.Precondition: int UPDATE_TIME_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfo$zzb: int zze
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$15: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
me.carda.awesome_notifications.R$styleable: int GradientColor_android_startY
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState previous
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DAY
com.google.rpc.Status: java.lang.String message_
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy: com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy ALLOW
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager: java.lang.String METHOD_CHANNEL_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModeCutDrawable
me.carda.awesome_notifications.core.Definitions: java.lang.String SHARED_DISPLAYED
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.Long defaultColor
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$7: int[] $SwitchMap$com$pichillilorenzo$flutter_inappwebview_android$types$NavigationActionPolicy
me.carda.awesome_notifications.core.builders.NotificationBuilder: android.support.v4.media.session.MediaSessionCompat mediaSession
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.lang.Boolean urlFilterIsCaseSensitive
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$2: com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage this$0
com.google.android.gms.internal.measurement.zzfy$zzm: com.google.android.gms.internal.measurement.zzkc zzh
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: java.lang.String contentEncoding
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout ProgressBar
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int textAppearanceLargePopupMenu
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$1: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient this$0
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SILENT_ACTION
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int titleMarginBottom
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents Time
kotlinx.coroutines.channels.BufferedChannel: long bufferEnd
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_SECOND
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest request
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_drawableTint
com.google.android.gms.cloudmessaging.CloudMessage: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Animation_AppCompat_DropDownUp
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2: java.lang.String val$args
me.carda.awesome_notifications.R$styleable: int GradientColor_android_centerX
com.google.android.gms.internal.measurement.zzfr$zzd: java.lang.String zzl
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_DropDownItem
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout Messaging
com.google.firestore.v1.BloomFilter: int BITS_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CAN_SCHEDULE_EXACT_NOTIFICATIONS_METHOD
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: android.widget.ProgressBar progressBar
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry mActivityResultRegistry
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods removeUserScript
com.dexterous.flutterlocalnotifications.models.RepeatInterval: com.dexterous.flutterlocalnotifications.models.RepeatInterval EveryMinute
com.pichillilorenzo.flutter_inappwebview_android.types.PrintAttributesExt: java.lang.Integer duplex
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int notification_action_background
com.pichillilorenzo.flutter_inappwebview_android.R$id: int parentPanel
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int iconifiedByDefault
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_android_onClick
androidx.recyclerview.widget.LinearLayoutManager$SavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V26_Widget_AppCompat_Toolbar
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$6: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate this$0
me.carda.awesome_notifications.R$attr: int splitRatio
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat_CompactMenu
com.google.firestore.v1.StructuredQuery$CollectionSelector: com.google.firestore.v1.StructuredQuery$CollectionSelector DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] MenuView
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: me.carda.awesome_notifications.core.enumerators.ForegroundStartMode deliverIntent
android.support.v4.media.MediaMetadataCompat: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int textAllCaps
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ADDITIONAL_FLAGS
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$1: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView val$webView
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_menu_header_material
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer defaultFixedFontSize
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$3: com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort this$0
com.google.firestore.v1.AggregationResult: int AGGREGATE_FIELDS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$12: java.lang.String val$message
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt: int index
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] GradientColorItem
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamily_fontProviderFetchTimeout
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getOriginalUrl
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String VAR_PLACEHOLDER_VALUE
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.String weekdayName
com.google.android.gms.internal.measurement.zzgd$zza: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int buttonStyle
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_PopupMenu_Overflow
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_indeterminateProgressStyle
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzq
me.carda.awesome_notifications.R$styleable: int FontFamilyFont_fontVariationSettings
me.carda.awesome_notifications.R$id: int special_effects_controller_view_tag
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnMultiWindowModeChangedListeners
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction CreateIfNotExists
me.carda.awesome_notifications.core.utils.TimeZoneUtils: me.carda.awesome_notifications.core.utils.TimeZoneUtils instance
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript CHECK_GLOBAL_KEY_DOWN_EVENT_TO_HIDE_CONTEXT_MENU_JS_PLUGIN_SCRIPT
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort: boolean isClosed
kotlinx.coroutines.scheduling.CoroutineScheduler: long controlState
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_homeAsUpIndicator
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Inverse
me.carda.awesome_notifications.core.threads.NotificationSender: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle appLifeCycle
com.google.firestore.v1.Value: int REFERENCE_VALUE_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_primary_text_disable_only_material_dark
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$14: android.webkit.JsResult val$result
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: android.webkit.WebSettings$LayoutAlgorithm layoutAlgorithm
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: int DATABASE_VERSION
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver instance
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission[] valueList
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg: com.google.firestore.v1.StructuredQuery$FieldReference field_
me.carda.awesome_notifications.core.managers.PermissionManager: me.carda.awesome_notifications.core.managers.PermissionManager instance
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listPreferredItemPaddingStart
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_android_windowIsFloating
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mNestedScrollInProgress
me.carda.awesome_notifications.R$id: int bottomToTop
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_list_menu_item_radio
me.carda.awesome_notifications.R$id: int accessibility_custom_action_19
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ic_menu_selectall_mtrl_alpha
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_list_item_height_large_material
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_colorPrimary
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$1: boolean val$isForMainFrame
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Activity mainActivity
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_bar_overflow_padding_start_material
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggerEventName
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int buttonStyleSmall
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_autoCompleteTextViewStyle
com.google.android.gms.internal.measurement.zzfy$zza: java.lang.String zzk
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tag_transition_group
me.carda.awesome_notifications.R$dimen: int compat_button_inset_horizontal_material
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView$1: android.view.View val$targetView
com.google.android.gms.internal.measurement.zzfo$zzd: java.lang.String zzj
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_SearchView_ActionBar
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listPreferredItemHeight
com.google.firestore.v1.RunAggregationQueryResponse: int RESULT_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfo$zzd: com.google.android.gms.internal.measurement.zzfo$zzd zzc
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String CODE_NOTIFICATION_THREAD_EXCEPTION
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$3: android.net.http.SslError val$sslError
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean silent
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: int AVG_FIELD_NUMBER
com.google.firestore.v1.ArrayValue: com.google.protobuf.Internal$ProtobufList values_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TAG
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState stopped
com.google.firestore.v1.StructuredQuery: com.google.protobuf.Parser PARSER
com.google.firestore.v1.BatchGetDocumentsResponse: int resultCase_
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CALLBACK_HANDLE
com.google.android.gms.internal.measurement.zzfy$zzd: int zzf
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_GROUP_SORT
me.carda.awesome_notifications.R$styleable: int FontFamilyFont_android_fontVariationSettings
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: java.util.List menuItems
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int queryHint
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_logo
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int notification_template_icon_group
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_contentInsetLeft
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission Provisional
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.view.View mCustomView
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$4: io.flutter.plugin.common.MethodChannel$Result val$result
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATIONS_ERROR_MESSAGE
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver: java.util.List exceptionListeners
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods clearHistory
me.carda.awesome_notifications.core.managers.StatusBarManager: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: java.lang.String value
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColor_android_endColor
com.google.firestore.v1.BatchGetDocumentsRequest: int READ_TIME_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int colorControlHighlight
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_15
androidx.core.content.FileProvider: java.lang.Object mLock
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] AnimatedStateListDrawableCompat
com.google.firestore.v1.BatchGetDocumentsResponse: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int ratingBarStyle
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int dialogPreferredPadding
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_17
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods injectJavascriptFileFromUrl
com.google.firestore.bundle.BundledQuery: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listPreferredItemPaddingEnd
com.dexterous.flutterlocalnotifications.models.Time: java.lang.Integer second
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$1: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView val$webView
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int notification_template_icon_bg
me.carda.awesome_notifications.core.managers.PermissionManager: java.lang.String TAG
io.flutter.plugins.GeneratedPluginRegistrant: java.lang.String TAG
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_METHOD
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods goBackOrForward
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INITIALIZE_METHOD
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_SearchView_MagIcon
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_ThemeOverlay_AppCompat_Dark_ActionBar
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_elevation
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.Integer shareState
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Display3
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_editTextColor
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobManager: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
com.pichillilorenzo.flutter_inappwebview_android.R$color: int notification_action_color_filter
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULE_MODE
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CANCEL_ID
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.String TABLE_INT
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$3: android.webkit.WebView val$view
com.google.firestore.v1.Cursor: com.google.protobuf.Internal$ProtobufList values_
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: boolean isRedirect
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] AppCompatTextView
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_bar_overflow_padding_end_material
com.google.android.gms.internal.measurement.zzfy$zzj: java.lang.String zzg
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel$2: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel this$0
androidx.core.content.FileProvider: java.lang.String DISPLAYNAME_FIELD
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean channelShowBadge
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairFilter_secondaryActivityName
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] $VALUES
me.carda.awesome_notifications.core.enumerators.NotificationSource: me.carda.awesome_notifications.core.enumerators.NotificationSource Schedule
com.pichillilorenzo.flutter_inappwebview_android.R$bool: int abc_action_bar_embed_tabs
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String USER_SCRIPTS_AT_DOCUMENT_START_WRAPPER_JS_SOURCE
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_SHOULD_SHOW_RATIONALE
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: androidx.browser.customtabs.CustomTabsSession customTabsSession
com.google.firestore.v1.BatchGetDocumentsResponse: int MISSING_FIELD_NUMBER
me.carda.awesome_notifications.R$drawable: int notify_panel_notification_icon_bg
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_PLAYBACK_SPEED
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_bar_icon_vertical_padding_material
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean javaScriptCanOpenWindowsAutomatically
com.google.gson.stream.JsonReader: int PEEKED_FALSE
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$1: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate this$0
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_CANCEL_SCHEDULE
me.carda.awesome_notifications.core.enumerators.ActionType: me.carda.awesome_notifications.core.enumerators.ActionType SilentAction
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActionBar_TabView
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int abc_slide_in_bottom
com.pichillilorenzo.flutter_inappwebview_android.R$color: int bright_foreground_material_light
me.carda.awesome_notifications.R$attr: int fontProviderPackage
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$5: android.webkit.WebView val$view
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int navigationIcon
com.google.android.gms.common.internal.zat: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.DocumentTransform$FieldTransform: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_drawableStartCompat
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANCE
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$ForceDarkBehavior: int MEDIA_QUERY_ONLY
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_RANDOM_ID
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int ic_call_answer
kotlinx.coroutines.internal.ThreadSafeHeap: int _size
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_RED
com.pichillilorenzo.flutter_inappwebview_android.R$string: int action_close
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModeTheme
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$5: int val$threatType
com.pichillilorenzo.flutter_inappwebview_android.R$id: int off
kotlinx.coroutines.flow.StateFlowSlot: java.lang.Object _state
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_Dialog
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout: java.lang.String METHOD_CHANNEL_NAME_PREFIX
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int menu
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$3: android.webkit.SslErrorHandler val$handler
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: androidx.core.view.NestedScrollingParentHelper mNestedScrollingParentHelper
me.carda.awesome_notifications.core.models.NotificationModel: java.lang.String TAG
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HIDE_EXPANDED_LARGE_ICON
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ButtonBarLayout_allowStacking
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_ENABLE_WAKELOCK
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tag_on_apply_window_listener
com.google.firestore.v1.BatchGetDocumentsResponse: com.google.protobuf.Parser PARSER
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType phoneCall
com.google.gson.stream.JsonReader: int NUMBER_CHAR_NONE
com.pichillilorenzo.flutter_inappwebview_android.R$color: int material_blue_grey_950
com.dexterous.flutterlocalnotifications.models.NotificationStyle: com.dexterous.flutterlocalnotifications.models.NotificationStyle Messaging
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String LED_COLOR_RED
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType CSS_DISPLAY_NONE
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean incognito
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$WorkEnqueuer mCompatWorkEnqueuer
me.carda.awesome_notifications.core.models.NotificationButtonModel: java.lang.Boolean showInCompactView
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.Boolean isTrustedWebActivity
com.dexterous.flutterlocalnotifications.models.MessageDetails: java.lang.String dataMimeType
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_android_inputType
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_spinner_mtrl_am_alpha
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.Integer weekOfMonth
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] CompoundButton
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: java.lang.String largeIcon
me.carda.awesome_notifications.core.AwesomeNotifications: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$8: int[] $SwitchMap$com$pichillilorenzo$flutter_inappwebview_android$webview$WebViewChannelDelegateMethods
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.TrustedWebActivity: androidx.browser.trusted.TrustedWebActivityIntentBuilder builder
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Small
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int fontWeight
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken END_OBJECT
me.carda.awesome_notifications.core.enumerators.ActionType: me.carda.awesome_notifications.core.enumerators.ActionType KeepOnTop
com.google.firestore.v1.Target: int ONCE_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfy$zzk: int zzak
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ListView_DropDown
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_switch_thumb_material
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Small
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_switchMinWidth
me.carda.awesome_notifications.R$layout: int ime_base_split_test_activity
me.carda.awesome_notifications.R$styleable: int FontFamilyFont_ttcIndex
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_AutoCompleteTextView
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel$1: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel val$webMessageChannel
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_DEFAULT_RINGTONE_TYPE
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getCopyBackForwardList
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Button_Small
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance High
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_autoSizeMinTextSize
me.carda.awesome_notifications.core.enumerators.NotificationSource: me.carda.awesome_notifications.core.enumerators.NotificationSource ForegroundService
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.Object mValue
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColor_android_startX
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ActionBar_TabBar
com.pichillilorenzo.flutter_inappwebview_android.PlatformUtil: java.lang.String LOG_TAG
androidx.core.content.FileProvider: java.lang.String ATTR_PATH
com.pichillilorenzo.flutter_inappwebview_android.R$color: int accent_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Medium
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: android.os.IBinder windowToken
me.carda.awesome_notifications.core.models.NotificationContentModel: java.util.Map payload
com.google.android.gms.internal.measurement.zzgd$zzc: com.google.android.gms.internal.measurement.zzgd$zzc zzc
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager: androidx.webkit.ServiceWorkerControllerCompat serviceWorkerController
me.carda.awesome_notifications.R$id: int locale
com.google.android.gms.measurement.internal.zzon: android.os.Parcelable$Creator CREATOR
com.google.firebase.firestore.proto.Target: int targetId_
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.StructuredQuery$Projection select_
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mStartingScale
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String DETAILED_INSUFFICIENT_REQUIREMENTS
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ProgressBar
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int drawableEndCompat
com.google.firestore.v1.ListenResponse: com.google.firestore.v1.ListenResponse DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Menu
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean blockNetworkImage
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage: java.lang.String LOG_TAG
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$6: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_textAppearanceListItem
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_RESPONSE_TYPE
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods zoomIn
com.google.firestore.v1.StructuredQuery$Filter: int UNARY_FILTER_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ColorStateListItem_alpha
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getZoomScale
com.google.protobuf.Int32Value: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamilyFont_fontVariationSettings
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ImageButton
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int ime_secondary_split_test_activity
com.pichillilorenzo.flutter_inappwebview_android.R$id: int spacer
com.pichillilorenzo.flutter_inappwebview_android.R$id: int image
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AnimatedStateListDrawableCompat_android_dither
me.carda.awesome_notifications.core.models.NotificationContentModel: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle createdLifeCycle
com.pichillilorenzo.flutter_inappwebview_android.Util$1: java.lang.String val$method
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobManager: java.util.Map jobs
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
androidx.core.content.FileProvider: int mResourceId
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Borderless_Colored
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$5: io.flutter.plugin.common.MethodChannel$Result val$result
com.dexterous.flutterlocalnotifications.models.ScheduleMode: com.dexterous.flutterlocalnotifications.models.ScheduleMode exactAllowWhileIdle
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int notify_panel_notification_icon_bg
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$3: android.webkit.SslErrorHandler val$handler
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation$AnimationListener mRefreshListener
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods isHidden
androidx.lifecycle.ProcessLifecycleOwner$attach$1: androidx.lifecycle.ProcessLifecycleOwner this$0
com.google.android.gms.internal.measurement.zzfy$zzm: com.google.android.gms.internal.measurement.zzjz zzf
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String CHANNEL_ACTION
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Light_SearchResult_Title
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int expandActivityOverflowButtonDrawable
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialContract$FeedEntry: java.lang.String COLUMN_NAME_PROTECTION_SPACE_ID
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_EditText
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String GROUP_CONVERSATION
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.util.Map callAsyncJavaScriptCallbacks
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_action_bar_home_description
com.google.protobuf.Any: java.lang.String typeUrl_
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ARE_NOTIFICATIONS_ENABLED_METHOD
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_PopupMenu_Overflow
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_dropdownListPreferredItemHeight
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BADGE
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods clearMatches
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_decor_view_status_guard_light
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int finishPrimaryWithSecondary
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.lang.Boolean allowGoBackWithBackButton
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_REQUEST_NOTIFICATIONS
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController$2: com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController this$0
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModeCloseContentDescription
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_lastBaselineToBottomHeight
me.carda.awesome_notifications.core.models.NotificationCrontabModel: java.util.Calendar initialDateTime
com.pichillilorenzo.flutter_inappwebview_android.types.PrintAttributesExt: java.lang.Integer orientation
androidx.activity.result.ActivityResult: android.os.Parcelable$Creator CREATOR
me.carda.awesome_notifications.R$styleable: int Fragment_android_id
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage: java.lang.String METHOD_CHANNEL_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] SplitPairFilter
me.carda.awesome_notifications.core.externalLibs.CronExpression: long serialVersionUID
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Display4
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int ic_call_decline_low
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ListPopupWindow
com.google.android.gms.common.Feature: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceContract$FeedEntry: java.lang.String TABLE_NAME
com.google.gson.stream.JsonReader: int PEEKED_NULL
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: int previousAuthRequestFailureCount
me.carda.awesome_notifications.R$id: int actions
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.Boolean enableLights
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.Boolean instantAppsEnabled
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean showsUserInterface
com.google.firestore.v1.Write: int UPDATE_TRANSFORMS_FIELD_NUMBER
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: java.lang.String alias_
com.pichillilorenzo.flutter_inappwebview_android.R$string: int menu_search
com.google.gson.stream.JsonReader: int NUMBER_CHAR_FRACTION_DIGIT
me.carda.awesome_notifications.core.managers.PermissionManager: int OFF
me.carda.awesome_notifications.R$id: int tag_accessibility_pane_title
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActionBar_TabText
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$3: io.flutter.plugin.common.MethodChannel$Result val$result
me.carda.awesome_notifications.R$id: int normal
me.carda.awesome_notifications.R$dimen: int notification_action_text_size
androidx.datastore.preferences.PreferencesProto$Value: int LONG_FIELD_NUMBER
com.google.gson.stream.JsonReader: int PEEKED_DOUBLE_QUOTED
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_shareactionprovider_share_with
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_text_cursor_material
me.carda.awesome_notifications.R$styleable: int FragmentContainerView_android_tag
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_top_pad
com.pichillilorenzo.flutter_inappwebview_android.R$id: int src_in
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextHelper_android_drawableBottom
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder: java.lang.String TAG
com.google.rpc.Status: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Light_SearchResult_Subtitle
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.lang.String LIBRARY_NAME
com.google.firestore.admin.v1.Index$IndexField: com.google.protobuf.Parser PARSER
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CHANNEL_NAME
com.google.firestore.v1.ListenRequest: java.lang.String database_
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: android.app.Activity activity
com.google.android.gms.common.internal.RootTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$1: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity this$0
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] SplitPairRule
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer importance
com.google.firestore.v1.RunAggregationQueryRequest: java.lang.Object consistencySelector_
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceContract$FeedEntry: java.lang.String COLUMN_NAME_REALM
kotlinx.coroutines.internal.LockFreeLinkedListNode: java.lang.Object _next
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: android.graphics.Point lastTouch
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int drawerArrowStyle
me.carda.awesome_notifications.R$styleable: int SplitPairRule_animationBackgroundColor
com.google.firestore.v1.StructuredQuery: int OFFSET_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeSafariBrowserManager: java.lang.String METHOD_CHANNEL_NAME
com.google.firestore.v1.BatchGetDocumentsResponse: int FOUND_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_4
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_BIG_TEXT
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Context applicationContext
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_GROUP_ALERT_BEHAVIOR
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: java.lang.String name
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int submitBackground
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_search_view_preferred_height
me.carda.awesome_notifications.core.models.DefaultsModel: java.lang.String reverseDartCallback
com.pichillilorenzo.flutter_inappwebview_android.R$id: int multiply
me.carda.awesome_notifications.R$styleable: int GradientColor_android_tileMode
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: int highlightedResultIndex
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int contentDescription
androidx.browser.customtabs.CustomTabsCallback: int ACTIVITY_LAYOUT_STATE_UNKNOWN
androidx.fragment.app.BackStackRecordState: android.os.Parcelable$Creator CREATOR
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String id
android.support.v4.media.MediaBrowserCompat$MediaItem: android.os.Parcelable$Creator CREATOR
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairRule_splitMaxAspectRatioInLandscape
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackClassName
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_button_material
com.google.android.gms.internal.measurement.zzfy$zzc: int zze
me.carda.awesome_notifications.core.managers.PermissionManager: int ON
me.carda.awesome_notifications.core.managers.StatusBarManager: me.carda.awesome_notifications.core.managers.StatusBarManager instance
com.pichillilorenzo.flutter_inappwebview_android.R$color: int browser_actions_title_color
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper: java.lang.String SQL_CREATE_CREDENTIAL_TABLE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int alphabeticModifiers
me.carda.awesome_notifications.R$styleable: int ActivityRule_alwaysExpand
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BUTTON_ICON
com.google.android.gms.internal.measurement.zzfr$zzd: java.lang.String zzg
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String payload
com.google.android.gms.internal.measurement.zzfr$zzh: com.google.android.gms.internal.measurement.zzfr$zzh zzc
me.carda.awesome_notifications.R$drawable: int notification_action_background
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_control_inset_material
com.google.android.gms.internal.measurement.zzfy$zzg: com.google.android.gms.internal.measurement.zzll zzd
me.carda.awesome_notifications.core.managers.DefaultsManager: me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB sqLitePrimitives
com.google.firestore.v1.MapValue: com.google.protobuf.Parser PARSER
me.carda.awesome_notifications.core.AwesomeNotifications: java.util.List awesomeEventListeners
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.String groupKey
me.carda.awesome_notifications.R$style: int TextAppearance_Compat_Notification_Info
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean verticalScrollBarEnabled
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$2: android.webkit.ValueCallback val$callback
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzfr$zzf zzs
me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType: me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType Alarm
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.protobuf.Internal$ProtobufList documents_
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings: java.lang.Boolean removeImplicitRules
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer initialScale
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: java.lang.String label
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showWhen
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: java.lang.String COLUMN_GROUP_KEY
com.google.rpc.Status: int CODE_FIELD_NUMBER
com.google.firestore.v1.WriteRequest: int WRITES_FIELD_NUMBER
me.carda.awesome_notifications.R$styleable: int ColorStateListItem_android_lStar
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Medium_Inverse
com.google.gson.stream.JsonReader: int PEEKED_BUFFERED
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$5: android.webkit.SafeBrowsingResponse val$callback
com.google.firestore.v1.AggregationResult: com.google.firestore.v1.AggregationResult DEFAULT_INSTANCE
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency Daily
me.carda.awesome_notifications.R$layout: int custom_dialog
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController findInteractionController
me.carda.awesome_notifications.R$id: int accessibility_custom_action_0
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionMenuTextAppearance
com.pichillilorenzo.flutter_inappwebview_android.R$color: int material_grey_800
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V7_Theme_AppCompat_Dialog
me.carda.awesome_notifications.core.threads.NotificationSender: java.lang.ref.WeakReference wContextReference
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson gson
com.google.firestore.v1.ExistenceFilter: int UNCHANGED_NAMES_FIELD_NUMBER
kotlinx.coroutines.DispatchedCoroutine: int _decision
com.pichillilorenzo.flutter_inappwebview_android.R$id: int topPanel
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelName
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_menu_ctrl_shortcut_label
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.lang.String userAgent
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: int initialPositionScrollStoppedTask
com.google.firestore.v1.ListenResponse: int TARGET_CHANGE_FIELD_NUMBER
androidx.appcompat.widget.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int DEFAULT_CIRCLE_TARGET
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_RED
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: android.net.http.SslError sslError
com.pichillilorenzo.flutter_inappwebview_android.R$color: int secondary_text_disabled_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_list_longpressed_holo
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ListView_Menu
com.google.firestore.v1.BatchGetDocumentsRequest: int MASK_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int font
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzv
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dropdownitem_icon_width
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_switch_padding
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_screen_toolbar
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamily_fontProviderFetchStrategy
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabsHelper: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController: com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings settings
com.google.firestore.v1.Value: int ARRAY_VALUE_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzbd
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: java.lang.Boolean htmlFormatTitle
com.google.firestore.bundle.BundledQuery: int queryTypeCase_
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: java.lang.String MODULE_ID
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$9: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int suggestionRowLayout
com.google.firestore.v1.TargetChange: com.google.protobuf.Timestamp readTime_
androidx.appcompat.app.AppCompatActivity: java.lang.String DELEGATE_TAG
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods addUserScript
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: java.lang.String LOG_TAG
androidx.core.app.ComponentActivity: androidx.collection.SimpleArrayMap extraDataMap
com.google.android.gms.internal.measurement.zzfy$zzk: long zzm
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int searchViewStyle
com.pichillilorenzo.flutter_inappwebview_android.BuildConfig: boolean DEBUG
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.Cursor endAt_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairRule_animationBackgroundColor
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_DayNight_DarkActionBar
com.google.android.gms.internal.measurement.zzfo$zzf: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType SCRIPT
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$5: android.webkit.JsResult val$result
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.util.Map webMessageChannels
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] Capability
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int drawableBottomCompat
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_btn_check_material
com.google.gson.stream.JsonReader: int peekedNumberLength
me.carda.awesome_notifications.core.externalLibs.CronExpression: int NO_SPEC_INT
me.carda.awesome_notifications.core.models.NotificationButtonModel: java.lang.Boolean enabled
com.google.gson.stream.JsonReader: int PEEKED_DOUBLE_QUOTED_NAME
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionSettings: java.lang.String LOG_TAG
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.Integer weekOfYear
com.google.android.gms.internal.measurement.zzfo$zze: java.lang.String zzg
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Toolbar
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_DISMISSED_LIFECYCLE
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_display_3_material
androidx.core.app.ComponentActivity: androidx.lifecycle.LifecycleRegistry lifecycleRegistry
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean indeterminate
com.pichillilorenzo.flutter_inappwebview_android.R$color: int background_floating_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_large_icon_height
com.google.firestore.v1.Document: java.lang.String name_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Light_ActionBar
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.util.Set contentWorlds
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer groupAlertBehavior
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$1: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
com.google.firestore.v1.DocumentTransform: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel$1: android.webkit.ValueCallback val$callback
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: java.lang.Object nextParkedWorker
com.pichillilorenzo.flutter_inappwebview_android.R$style: int ThemeOverlay_AppCompat_Dialog
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance Low
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int subMenuArrow
me.carda.awesome_notifications.core.utils.SerializableUtils: me.carda.awesome_notifications.core.utils.CalendarUtils calendarUtils
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_fontFamily
io.flutter.view.FlutterCallbackInformation: java.lang.String callbackName
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.webkit.ValueCallback filePathCallbackLegacy
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_tint_default
com.google.android.gms.internal.measurement.zzfy$zzh: java.lang.String zzg
kotlinx.coroutines.scheduling.CoroutineScheduler$Worker: int workerCtl
com.pichillilorenzo.flutter_inappwebview_android.R$id: int none
com.google.firestore.v1.StructuredQuery$Filter: int FIELD_FILTER_FIELD_NUMBER
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mSpinnerOffsetEnd
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPlaceholderRule_splitMinHeightDp
com.google.android.gms.internal.measurement.zzgd$zzd: com.google.android.gms.internal.measurement.zzgd$zzd zzc
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage myWebStorage
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPlaceholderRule_splitLayoutDirection
me.carda.awesome_notifications.R$dimen: int notification_small_icon_background_padding
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Title
com.pichillilorenzo.flutter_inappwebview_android.R$menu: int menu_main
me.carda.awesome_notifications.R$styleable: int ActivityFilter_activityName
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatSummaryText
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$18: android.webkit.PermissionRequest val$request
com.google.firestore.v1.DocumentDelete: com.google.protobuf.Internal$IntList removedTargetIds_
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_list_item_padding_horizontal_material
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebauthnSupport: int BROWSER
com.google.android.gms.common.internal.zzk: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean disableHorizontalScroll
android.support.v4.media.session.MediaSessionCompat$QueueItem: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$id: int androidx_window_activity_scope
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: androidx.appcompat.app.ActionBar actionBar
androidx.core.content.FileProvider: java.lang.String TAG_CACHE_PATH
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModeSplitBackground
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.Map dayMap
me.carda.awesome_notifications.core.Definitions: java.lang.String MEDIA_VALID_ASSET
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: java.lang.String METHOD_CHANNEL_NAME_PREFIX
com.google.firestore.v1.ListenRequest: int REMOVE_TARGET_FIELD_NUMBER
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout Inbox
me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException: java.lang.String code
com.google.firestore.v1.WriteResponse: com.google.protobuf.ByteString streamToken_
me.carda.awesome_notifications.R$drawable: int notification_tile_bg
me.carda.awesome_notifications.core.builders.NotificationBuilder: me.carda.awesome_notifications.core.managers.PermissionManager permissionManager
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Boolean roundedLargeIcon
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.lang.Boolean hideToolbarTop
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V7_Theme_AppCompat_Light_Dialog
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionMenuItemView_android_minWidth
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CHANNEL_ID
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: java.lang.String buttonKeyInput
com.google.firestore.v1.Target: int resumeTypeCase_
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int activity_web_view
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SCHEDULED_NOTIFICATIONS
me.carda.awesome_notifications.R$id: int accessibility_custom_action_28
me.carda.awesome_notifications.core.managers.StatusBarManager: java.util.Map activeNotificationsChannel
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: androidx.webkit.JavaScriptReplyProxy replyProxy
androidx.lifecycle.ReportFragment$LifecycleCallbacks: androidx.lifecycle.ReportFragment$LifecycleCallbacks$Companion Companion
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzkc zzh
com.google.gson.stream.JsonScope: int NONEMPTY_ARRAY
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamilyFont_fontWeight
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionMode_backgroundSplit
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState next
me.carda.awesome_notifications.R$styleable: int[] SplitPairRule
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int abc_grow_fade_in_from_bottom
me.carda.awesome_notifications.core.externalLibs.CronExpression: int SECOND
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks noHistoryCustomTabsActivityCallbacks
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_android_textStyle
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg: int FIELD_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int alertDialogCenterButtons
com.google.firestore.v1.Document: com.google.firestore.v1.Document DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int custom_dialog
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: boolean handledByClient
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzaw
com.google.android.material.timepicker.TimeModel: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_popupTheme
com.google.firestore.admin.v1.Index$IndexField: int valueModeCase_
me.carda.awesome_notifications.R$dimen: int notification_small_icon_size_as_large
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView inAppWebView
com.google.android.gms.cloudmessaging.zzd: android.os.Parcelable$Creator CREATOR
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_LED_OFF_MS
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods hide
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_title
com.google.firestore.admin.v1.Index: com.google.firestore.admin.v1.Index DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Toolbar_Button_Navigation
com.google.firestore.v1.Document: int FIELDS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int ttcIndex
me.carda.awesome_notifications.AwesomeNotificationsPlugin: java.lang.String TAG
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy: me.carda.awesome_notifications.core.enumerators.NotificationPrivacy Secret
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$3: android.webkit.JsResult val$result
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ButtonBar_AlertDialog
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Platform_ThemeOverlay_AppCompat_Dark
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_listPreferredItemPaddingRight
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Platform_V21_AppCompat_Light
io.flutter.embedding.engine.FlutterJNI: java.lang.String vmServiceUri
com.pichillilorenzo.flutter_inappwebview_android.R$integer: int cancel_button_image_alpha
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int autoSizeTextType
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_action_bar_up_container
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ALLOW_WHILE_IDLE
com.pichillilorenzo.flutter_inappwebview_android.R$id: int search_close_btn
me.carda.awesome_notifications.core.builders.NotificationBuilder: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ActivityChooserView
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int fontVariationSettings
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int LinearLayoutCompat_android_baselineAlignedChildIndex
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzaa
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int checkMarkTint
com.google.gson.stream.JsonScope: int EMPTY_ARRAY
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String IMPORTANCE
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String CODE_INITIALIZATION_EXCEPTION
com.google.android.gms.internal.measurement.zzgd$zzd: java.lang.String zzh
androidx.core.content.FileProvider: java.lang.String[] COLUMNS
com.google.gson.stream.JsonReader: long MIN_INCOMPLETE_INTEGER
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: int NO_HISTORY_CHROME_CUSTOM_TAB_REQUEST_CODE
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.widget.FrameLayout$LayoutParams FULLSCREEN_LAYOUT_PARAMS
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzi
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String KEY
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatSeekBar_tickMarkTintMode
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int hint_alpha_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$id: int visible_removing_fragment_view_tag
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int abc_slide_in_top
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzi
com.google.firestore.v1.CommitResponse: int WRITE_RESULTS_FIELD_NUMBER
com.google.firebase.firestore.proto.MaybeDocument: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_Button_Inverse
me.carda.awesome_notifications.core.models.NotificationContentModel: boolean isRandomId
com.google.firestore.v1.StructuredAggregationQuery: int AGGREGATIONS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$id: int forever
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ViewStubCompat_android_layout
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_buttonStyle
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String summaryText
com.pichillilorenzo.flutter_inappwebview_android.R$id: int buttonPanel
com.google.android.gms.internal.measurement.zzfo$zzf: java.lang.String zzg
me.carda.awesome_notifications.core.managers.SharedManager: java.lang.Class clazz
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_LARGE_ICON_ERROR_CODE
me.carda.awesome_notifications.core.managers.SharedManager: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_android_enabled
com.google.android.gms.internal.measurement.zzfy$zzl: int zze
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.protobuf.Parser PARSER
me.carda.awesome_notifications.R$id: int view_tree_view_model_store_owner
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: java.lang.String id
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean contextual
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.StyleInformation styleInformation
me.carda.awesome_notifications.R$styleable: int SplitPlaceholderRule_splitMaxAspectRatioInPortrait
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int splitRatio
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String DETAILED_INVALID_FORMAT
me.carda.awesome_notifications.R$styleable: int FontFamilyFont_android_fontWeight
com.google.android.gms.internal.measurement.zzfy$zzg: long zzg
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: java.lang.String iconColor
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.util.ArrayList lines
com.pichillilorenzo.flutter_inappwebview_android.R$style: int ThemeOverlay_AppCompat_Light
com.google.firestore.v1.DocumentRemove: int bitField0_
com.google.firestore.v1.StructuredQuery$CollectionSelector: java.lang.String collectionId_
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents DayOfMonthAndTime
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTimeToLive
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView webView
com.google.firestore.v1.Write: int operationCase_
com.pichillilorenzo.flutter_inappwebview_android.R$id: int search_src_text
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: java.lang.String host
com.google.gson.stream.JsonWriter: int stackSize
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Tooltip
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzbm
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$4: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat this$0
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_CANCEL_SCHEDULES_BY_CHANNEL_KEY
com.google.android.gms.internal.measurement.zzfy$zzf: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_toolbarStyle
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_SeekBar
com.google.firestore.v1.CommitRequest: com.google.firestore.v1.CommitRequest DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExt: java.lang.String LOG_TAG
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$6: android.webkit.WebView val$view
com.google.firestore.v1.RunAggregationQueryRequest: int queryTypeCase_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionBarSplitStyle
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairFilter_secondaryActivityAction
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_windowFixedHeightMajor
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout Default
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_GET_UTC_TIMEZONE_IDENTIFIER
com.google.firestore.v1.StructuredQuery: com.google.firestore.v1.Cursor startAt_
me.carda.awesome_notifications.R$attr: int fontWeight
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairRule_clearTop
com.pichillilorenzo.flutter_inappwebview_android.R$id: int special_effects_controller_view_tag
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_titleMargins
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission OverrideDnD
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Animation_AppCompat_DropDownUp
androidx.datastore.preferences.PreferencesProto$Value: java.lang.Object value_
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_EXPIRATION_DATE_TIME
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState forwarding
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_android_textAppearance
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SUMMARY
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CHANNEL_SHOW_BADGE
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods saveWebArchive
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage lastDequeuedImage
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] ButtonBarLayout
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String shortcutId
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] FragmentContainerView
com.google.android.gms.internal.measurement.zzfr$zza$zzf: com.google.android.gms.internal.measurement.zzll zzd
me.carda.awesome_notifications.R$styleable: int SplitPlaceholderRule_splitMinSmallestWidthDp
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_seekBarStyle
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_search_dropdown_item_icons_2line
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_ThemeOverlay_AppCompat_Dialog
com.pichillilorenzo.flutter_inappwebview_android.R$string: int search_menu_title
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int customNavigationLayout
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: java.lang.String title
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: java.lang.Long protectionSpaceId
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int tickMark
me.carda.awesome_notifications.R$layout: int notification_template_icon_group
com.pichillilorenzo.flutter_inappwebview_android.R$color: int ripple_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_button_inset_horizontal_material
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModeCloseDrawable
com.pichillilorenzo.flutter_inappwebview_android.R$interpolator: int btn_radio_to_on_mtrl_animation_interpolator_0
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String typeFieldName
androidx.browser.customtabs.CustomTabsCallback: int ACTIVITY_LAYOUT_STATE_BOTTOM_SHEET_MAXIMIZED
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dialog_corner_radius_material
com.pichillilorenzo.flutter_inappwebview_android.R$integer: int abc_config_activityDefaultDur
androidx.core.app.JobIntentService: java.lang.String TAG
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.ref.WeakReference wContext
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int toolbarNavigationButtonStyle
me.carda.awesome_notifications.R$drawable: int ic_call_answer_video
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: java.util.List notificationActionListeners
com.google.android.gms.internal.measurement.zzfy$zzk: boolean zzaz
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int autoSizePresetSizes
com.google.firebase.firestore.proto.Target: int SNAPSHOT_VERSION_FIELD_NUMBER
com.google.firebase.firestore.proto.Target: com.google.protobuf.ByteString resumeToken_
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.util.Map rendererPriorityPolicy
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int checkMarkCompat
com.google.gson.stream.MalformedJsonException: long serialVersionUID
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Boolean wakeUpScreen
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: java.lang.String keyStoreType
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_headerLayout
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ProgressBar
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean useOnDownloadStart
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_toolbar_collapse_description
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Display4
com.pichillilorenzo.flutter_inappwebview_android.Util$PrivateKeyAndCertificates: java.security.cert.X509Certificate[] certificates
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper: java.lang.String SQL_CREATE_PROTECTION_SPACE_TABLE
me.carda.awesome_notifications.core.externalLibs.CronExpression: int MINUTE
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt mediaSize
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler contentBlockerHandler
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.List resourceType
com.pichillilorenzo.flutter_inappwebview_android.R$style: int ThemeOverlay_AppCompat_Dark
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.util.List contentBlockers
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_DECREMENT_BADGE_COUNT
com.google.firestore.v1.TransactionOptions: int READ_ONLY_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATION_MESSAGING_STYLE_ERROR_CODE
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String TITLE_COLOR_ALPHA
com.pichillilorenzo.flutter_inappwebview_android.webview.ContextMenuSettings: java.lang.Boolean hideDefaultSystemContextMenuItems
com.google.firestore.v1.Target: int DOCUMENTS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int buttonGravity
com.pichillilorenzo.flutter_inappwebview_android.R$color: int call_notification_decline_color
kotlinx.coroutines.DefaultExecutor: java.lang.Thread _thread
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionMode_subtitleTextStyle
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SERVICE_START_MODE
com.google.gson.stream.JsonReader: int NUMBER_CHAR_DECIMAL
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_ActionMode_Subtitle
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int tickMarkTintMode
io.flutter.embedding.engine.FlutterOverlaySurface: int id
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_tooltip
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int ANIMATE_TO_START_DURATION
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle
com.google.firestore.v1.StructuredQuery$FieldReference: java.lang.String fieldPath_
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType mediaProjection
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_SearchView
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Integer backgroundColor
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: java.lang.Thread thread
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_SearchResult_Subtitle
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_DrawerArrowToggle
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int homeAsUpIndicator
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Integer ledColor
kotlinx.coroutines.JobSupport: java.lang.Object _parentHandle
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean useHybridComposition
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AnimatedStateListDrawableTransition_android_reversible
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.lang.Boolean closeOnCannotGoBack
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebViewManager: java.util.Map webViews
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_title
me.carda.awesome_notifications.core.enumerators.ActionType: me.carda.awesome_notifications.core.enumerators.ActionType DismissAction
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean autoCancel
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_textColorSearchUrl
com.google.firestore.v1.Value: int MAP_VALUE_FIELD_NUMBER
com.google.firestore.v1.DocumentDelete: java.lang.String document_
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_SET_LOCALIZATION
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: float mInitialDownY
com.pichillilorenzo.flutter_inappwebview_android.R$style: int AppTheme
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_star_big
androidx.browser.customtabs.CustomTabsCallback: int NAVIGATION_STARTED
com.google.android.gms.internal.measurement.zzfy$zzk: long zzab
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle[] valueList
com.google.firestore.v1.WriteResponse: com.google.protobuf.Parser PARSER
com.google.firebase.firestore.proto.MaybeDocument: int HAS_COMMITTED_MUTATIONS_FIELD_NUMBER
me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType: me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType Notification
me.carda.awesome_notifications.core.Definitions: java.lang.String SHARED_CHANNELS
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: com.dexterous.flutterlocalnotifications.models.BitmapSource bigPictureBitmapSource
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_SILENT_CALLBACK
com.dexterous.flutterlocalnotifications.models.NotificationStyle: com.dexterous.flutterlocalnotifications.models.NotificationStyle BigText
androidx.versionedparcelable.ParcelImpl: android.os.Parcelable$Creator CREATOR
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.PreferencesProto$PreferenceMap DEFAULT_INSTANCE
me.carda.awesome_notifications.R$dimen: int compat_button_padding_vertical_material
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CONTENT_TITLE
com.pichillilorenzo.flutter_inappwebview_android.R$color: int tooltip_background_dark
com.pichillilorenzo.flutter_inappwebview_android.R$color: int secondary_text_disabled_material_dark
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int radioButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_23
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_bar_default_padding_end_material
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$5: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat this$0
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_cab_background_top_mtrl_alpha
me.carda.awesome_notifications.R$dimen: int compat_control_corner_material
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int thumbTextPadding
me.carda.awesome_notifications.core.externalLibs.CronExpression: int MAX_YEAR
com.google.firestore.admin.v1.Index: int STATE_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$id: int notification_main_column
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods goBack
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_title_material
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: java.lang.String cancelButtonTitle
com.google.firestore.v1.DocumentChange: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController: java.lang.String METHOD_CHANNEL_NAME_PREFIX
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: androidx.browser.customtabs.CustomTabsIntent$Builder builder
com.google.android.gms.internal.measurement.zzfr$zza: com.google.android.gms.internal.measurement.zzkc zzg
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: byte[] data
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods zoomOut
androidx.datastore.preferences.PreferencesProto$Value: int DOUBLE_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$2: io.flutter.plugin.common.MethodChannel$Result val$result
com.google.firestore.v1.BitSequence: com.google.protobuf.ByteString bitmap_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int ratingBarStyleIndicator
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.JavaScriptBridgeJS: java.lang.String JAVASCRIPT_BRIDGE_JS_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods findAll
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.lang.Boolean hideTitleBar
androidx.swiperefreshlayout.widget.SwipeRefreshLayout$SavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuView_subMenuArrow
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: android.graphics.Point contextMenuPoint
com.google.firestore.v1.DocumentChange: int removedTargetIdsMemoizedSerializedSize
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int MAX_ALPHA
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String CONTEXTUAL
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_seekbar_tick_mark_material
androidx.datastore.preferences.PreferencesProto$StringSet: androidx.datastore.preferences.PreferencesProto$StringSet DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_select_dialog_padding_start_material
me.carda.awesome_notifications.R$attr: int alwaysExpand
com.google.firestore.v1.DocumentRemove: com.google.firestore.v1.DocumentRemove DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction: boolean $assertionsDisabled
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ab_share_pack_mtrl_alpha
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: androidx.webkit.ScriptHandler contentWorldsCreatorScript
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ColorStateListItem_lStar
com.pichillilorenzo.flutter_inappwebview_android.types.URLAuthenticationChallenge: com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace protectionSpace
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_itemPadding
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: int MODULE_VERSION
com.pichillilorenzo.flutter_inappwebview_android.R$string: int status_bar_notification_info_overflow
com.google.android.gms.internal.measurement.zzfy$zzn: com.google.android.gms.internal.measurement.zzll zzd
com.google.android.gms.internal.measurement.zzfy$zzk: boolean zzaf
com.google.android.gms.internal.measurement.zzfr$zza$zza: int zzf
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String DATA_MIME_TYPE
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_big_circle_margin
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: java.util.List compatPorts
me.carda.awesome_notifications.core.models.NotificationButtonModel: java.lang.String label
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Alarm
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$2: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V7_Theme_AppCompat_Light
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int drawableTintMode
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] Fragment
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_headline_material
com.google.firestore.v1.Value: int DOUBLE_VALUE_FIELD_NUMBER
me.carda.awesome_notifications.R$attr: int finishPrimaryWithPlaceholder
com.google.firestore.v1.Value: int BOOLEAN_VALUE_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Object largeIcon
com.google.android.gms.internal.measurement.zzfr$zzi: com.google.android.gms.internal.measurement.zzll zzd
com.google.firestore.v1.StructuredQuery$FieldFilter: com.google.firestore.v1.StructuredQuery$FieldFilter DEFAULT_INSTANCE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mTriggeredEventName
me.carda.awesome_notifications.core.managers.ActionManager: me.carda.awesome_notifications.core.models.returnedData.ActionReceived initialActionReceived
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean important
com.pichillilorenzo.flutter_inappwebview_android.R$id: int menu_search
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamily_fontProviderQuery
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean enableLights
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPlaceholderRule_stickyPlaceholder
com.google.firestore.v1.StructuredQuery$FieldFilter: int op_
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified blockingDispatcher
me.carda.awesome_notifications.core.models.NotificationChannelModel: me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType defaultRingtoneType
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$1: androidx.webkit.WebViewRenderProcess val$renderer
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_mode_close_button
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_showText
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: boolean isRedirect
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Subtitle
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_STOP_FOREGROUND
com.google.gson.stream.JsonWriter: boolean htmlSafe
com.google.firebase.firestore.proto.Target: java.lang.Object targetType_
me.carda.awesome_notifications.core.AwesomeNotifications: java.util.List notificationActionListeners
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ActionButton
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextHelper_android_drawableEnd
me.carda.awesome_notifications.R$color: int call_notification_decline_color
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String MATCH_DATE_TIME_COMPONENTS
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.Integer ledColor
me.carda.awesome_notifications.R$string: int call_notification_answer_video_action
com.google.android.gms.internal.measurement.zzfr$zze: com.google.android.gms.internal.measurement.zzfr$zze zzc
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int support_simple_spinner_dropdown_item
kotlinx.coroutines.JobSupport$Finishing: int _isCompleting
me.carda.awesome_notifications.core.AwesomeNotifications: boolean areExtensionsLoaded
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_borderlessButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_panelMenuListWidth
me.carda.awesome_notifications.R$dimen: int compat_notification_large_icon_max_width
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel$2: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel val$webMessageChannel
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean cancelNotification
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_seekbar_track_background_height_material
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int alertDialogTheme
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.components.Qualified firebaseApp
androidx.core.app.JobIntentService: java.util.HashMap sClassWorkEnqueuer
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.Boolean bot
com.google.firestore.v1.ListenRequest: int targetChangeCase_
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt resolution
me.carda.awesome_notifications.AwesomeNotificationsPlugin: io.flutter.plugin.common.PluginRegistry$RequestPermissionsResultListener permissionsResultListener
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: java.lang.String id
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamilyFont_android_fontWeight
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState none
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_android_orderInCategory
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int thumbTintMode
com.google.android.gms.internal.measurement.zzfy$zzc: com.google.android.gms.internal.measurement.zzfy$zzc zzc
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean useOnLoadResource
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy: me.carda.awesome_notifications.core.enumerators.NotificationPrivacy[] valueList
com.google.firestore.v1.Target$DocumentsTarget: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ListView
me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour: me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour Children
androidx.core.content.FileProvider: java.lang.String mAuthority
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_GET_DRAWABLE_DATA
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LINES
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_ActionMode_Subtitle
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mNotify
com.google.android.material.search.SearchView$SavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$1: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat this$0
me.carda.awesome_notifications.core.externalLibs.CronExpression: boolean lastdayOfWeek
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods takeScreenshot
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dialog_min_width_major
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_titleMarginEnd
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatImageView_tint
me.carda.awesome_notifications.core.Definitions: java.lang.String MEDIA_BUTTON
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int StateListDrawable_android_visible
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Spinner_android_popupBackground
com.google.firestore.v1.Target$QueryTarget: java.lang.String parent_
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$6: android.os.Message val$resend
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int highlight_alpha_material_light
me.carda.awesome_notifications.R$id: int view_tree_saved_state_registry_owner
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: long[] vibrationPattern
com.pichillilorenzo.flutter_inappwebview_android.R$id: int actions
com.google.firestore.v1.BloomFilter: int HASH_COUNT_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String COLOR_BLUE
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ActionBroadcastReceiver: java.lang.String KEY_ACTION_ID
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.google.firestore.v1.StructuredQuery: int LIMIT_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PERSON
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String standardFontFamily
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int CheckedTextView_checkMarkTint
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_FORCE_UPDATE
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_FULL_SCREEN_INTENT
com.google.firestore.v1.TransactionOptions$ReadWrite: com.google.protobuf.ByteString retryTransaction_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_android_menuCategory
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer mixedContentMode
me.carda.awesome_notifications.core.managers.SharedManager: java.lang.String className
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_TextView
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PrintJS: java.lang.String PRINT_JS_SOURCE
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg: int bitField0_
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mScaleDownToStartAnimation
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int splitMaxAspectRatioInLandscape
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIME_ZONE_NAME
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
me.carda.awesome_notifications.R$layout: int notification_template_custom_big
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.Boolean playSound
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: me.carda.awesome_notifications.core.enumerators.ForegroundStartMode stick
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Inverse
me.carda.awesome_notifications.R$styleable: int[] ActivityRule
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V7_Widget_AppCompat_AutoCompleteTextView
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Boolean displayOnBackground
com.google.android.gms.internal.measurement.zzfy$zzo: float zzj
com.pichillilorenzo.flutter_inappwebview_android.R$color: int error_color_material_light
com.google.firestore.v1.CommitRequest: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] Spinner
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.util.List startAnimations
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Subtitle_Inverse
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: android.view.View threadedInputConnectionProxyView
me.carda.awesome_notifications.core.models.NotificationChannelGroupModel: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings: java.lang.String backgroundColor
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String icon
com.google.firestore.v1.DocumentDelete: int READ_TIME_FIELD_NUMBER
com.google.firestore.v1.DocumentTransform: int DOCUMENT_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_dividerHorizontal
com.dexterous.flutterlocalnotifications.models.ScheduleMode: com.dexterous.flutterlocalnotifications.models.ScheduleMode alarmClock
com.pichillilorenzo.flutter_inappwebview_android.R$string: int fallback_menu_item_share_link
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_FLUTTER_PLUGIN
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int fontProviderAuthority
com.pichillilorenzo.flutter_inappwebview_android.types.PrintJobInfoExt: java.lang.Integer numberOfPages
com.google.android.gms.internal.measurement.zzfr$zzh: java.lang.String zzf
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_search_url_text_selected
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] LAYOUT_ATTRS
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout MediaPlayer
me.carda.awesome_notifications.R$dimen: int compat_button_padding_horizontal_material
me.carda.awesome_notifications.BuildConfig: boolean DEBUG
com.google.firestore.admin.v1.Index: int QUERY_SCOPE_FIELD_NUMBER
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: androidx.concurrent.futures.AbstractResolvableFuture$Waiter next
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.Boolean htmlFormatBigText
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_subtext_size
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int colorButtonNormal
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.String icon
me.carda.awesome_notifications.R$styleable: int GradientColor_android_startX
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_android_textOn
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String DETAILED_UNEXPECTED_ERROR
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE
com.google.protobuf.GeneratedMessageLite: int UNINITIALIZED_HASH_CODE
com.google.android.gms.common.zzs: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V26_Theme_AppCompat
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_EditText
me.carda.awesome_notifications.R$color: int androidx_core_secondary_text_default_material_light
com.google.firestore.v1.DocumentChange: int DOCUMENT_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: boolean showAsAction
me.carda.awesome_notifications.core.models.NotificationModel: java.util.List actionButtons
kotlinx.coroutines.sync.MutexImpl: java.lang.Object owner
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: java.lang.String message
com.google.android.gms.internal.measurement.zzfy$zzk: long zzk
androidx.activity.ComponentActivity: androidx.activity.ComponentActivity$ReportFullyDrawnExecutor mReportFullyDrawnExecutor
me.carda.awesome_notifications.core.models.NotificationButtonModel: java.lang.String icon
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Platform_Widget_AppCompat_Spinner
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int highlight_alpha_material_colored
me.carda.awesome_notifications.DartBackgroundExecutor: io.flutter.plugin.common.MethodChannel backgroundChannel
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ticker
com.google.firebase.messaging.RemoteMessage: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Animation_AppCompat_Dialog
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int abc_slide_out_top
com.google.protobuf.GeneratedMessageLite: com.google.protobuf.UnknownFieldSetLite unknownFields
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_ProgressBar_Horizontal
com.pichillilorenzo.flutter_inappwebview_android.R$interpolator: int btn_radio_to_off_mtrl_animation_interpolator_0
com.google.android.gms.internal.measurement.zzfo$zzb: boolean zzk
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.lang.Integer windowId
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean domStorageEnabled
com.google.protobuf.GeneratedMessageLite: int UNINITIALIZED_SERIALIZED_SIZE
kotlinx.coroutines.EventLoopImplBase: int _isCompleted
com.google.protobuf.Timestamp: long seconds_
com.google.android.gms.common.internal.zav: android.os.Parcelable$Creator CREATOR
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Error
com.pichillilorenzo.flutter_inappwebview_android.R$id: int search_badge
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: androidx.webkit.WebViewCompat$WebMessageListener listener
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.util.List resourceCustomSchemes
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int paddingEnd
com.dexterous.flutterlocalnotifications.models.NotificationStyle: com.dexterous.flutterlocalnotifications.models.NotificationStyle BigPicture
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: boolean triggerDelayed
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String privateMessage
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Light_ActionBar_Solid
me.carda.awesome_notifications.core.utils.EnumUtils: me.carda.awesome_notifications.core.utils.EnumUtils instance
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.String channelName
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver: me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver instance
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_background_cache_hint_selector_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_displayOptions
me.carda.awesome_notifications.core.managers.ChannelManager: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String PLAY_SOUND
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$13: android.webkit.JsResult val$result
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer ledOffMs
me.carda.awesome_notifications.BuildConfig: java.lang.String BUILD_TYPE
com.google.firestore.v1.TransactionOptions: int READ_WRITE_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int tooltip_vertical_padding
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem_InternalGroup
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: java.util.Map headers
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int floating_action_mode_shape
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionBarTabStyle
me.carda.awesome_notifications.R$dimen: int compat_notification_large_icon_max_height
com.google.firestore.v1.DocumentRemove: java.lang.String document_
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_1
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzfr$zzd zzc
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods postUrl
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_android_focusable
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.FirebaseSessionsRegistrar$Companion Companion
com.google.android.gms.internal.measurement.zzfo$zzf: com.google.android.gms.internal.measurement.zzfo$zzf zzc
com.google.firestore.v1.StructuredAggregationQuery: com.google.protobuf.Internal$ProtobufList aggregations_
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_android_windowAnimationStyle
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.TreeSet minutes
me.carda.awesome_notifications.R$id: int tag_window_insets_animation_callback
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int fragment_fast_out_extra_slow_in
com.google.firestore.v1.Target: boolean once_
com.google.android.material.datepicker.CalendarConstraints: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int browser_actions_context_menu_max_width
com.google.firestore.v1.Target: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Button_Borderless_Colored
com.pichillilorenzo.flutter_inappwebview_android.webview.ContextMenuSettings: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int paddingStart
com.google.android.gms.internal.measurement.zzfo$zzd: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int iconTint
com.google.android.gms.internal.measurement.zzfr$zze: com.google.android.gms.internal.measurement.zzll zzd
me.carda.awesome_notifications.core.utils.CalendarUtils: me.carda.awesome_notifications.core.utils.CalendarUtils instance
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int contentInsetStartWithNavigation
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int collapseContentDescription
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$8: android.webkit.JsPromptResult val$result
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_HOUR
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int RecycleListView_paddingBottomNoButtons
me.carda.awesome_notifications.R$styleable: int SplitPlaceholderRule_splitMinHeightDp
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$id: int radio
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptFetchRequestJS: com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript INTERCEPT_FETCH_REQUEST_JS_PLUGIN_SCRIPT
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.DateTimeComponents matchDateTimeComponents
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_textAppearanceSearchResultSubtitle
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int tooltip_precise_anchor_extra_offset
me.carda.awesome_notifications.R$id: int text2
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_android_textColorHint
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int numericModifiers
com.google.android.gms.internal.measurement.zzfy$zzn: int zze
org.chromium.support_lib_boundary.ProcessGlobalConfigConstants: java.lang.String DATA_DIRECTORY_BASE_PATH
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int chrome_custom_tabs_layout
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BACKGROUND_COLOR
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int browser_actions_context_menu_page
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int LinearLayoutCompat_android_baselineAligned
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager: java.lang.String id
com.google.firestore.v1.CommitResponse: com.google.firestore.v1.CommitResponse DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.util.Map scriptHandlerMap
com.google.firestore.v1.RunAggregationQueryResponse: int TRANSACTION_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: java.lang.Integer action
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPlaceholderRule_animationBackgroundColor
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int dropDownListViewStyle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLATFORM_SPECIFICS
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int contentInsetEnd
com.google.firebase.firestore.proto.UnknownDocument: int VERSION_FIELD_NUMBER
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_ERA
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer scrollBarFadeDuration
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String groupId
me.carda.awesome_notifications.core.managers.PermissionManager: java.util.List newAndroidShouldntShowRationale
me.carda.awesome_notifications.R$id: int right_side
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int defaultQueryHint
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate mDelegate
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int theme
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionBarPopupTheme
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer this$0
com.pichillilorenzo.flutter_inappwebview_android.R$xml: int image_share_filepaths
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_navigationMode
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: int operatorCase_
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_CALLBACK_HANDLE_METHOD
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.net.Uri imageOutputFileUri
kotlinx.coroutines.sync.SemaphoreImpl: java.lang.Object tail
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_buttonBarNeutralButtonStyle
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$AccessibilityDelegatingFrameLayout rootView
me.carda.awesome_notifications.core.managers.ChannelGroupManager: me.carda.awesome_notifications.core.managers.RepositoryManager shared
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_LED_ON_MS
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$4: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient this$0
androidx.activity.ComponentActivity: java.util.concurrent.atomic.AtomicInteger mNextLocalRequestCode
com.google.android.gms.internal.measurement.zzfr$zza: int zze
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean supportZoom
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzbi
com.google.firestore.v1.StructuredQuery$UnaryFilter: int OP_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_text
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_GET_NEXT_DATE
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Count: com.google.protobuf.Int64Value upTo_
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$PermissionRequestProgress permissionRequestProgress
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int fontProviderQuery
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Timestamp localWriteTime_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int activityName
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerManager tracingControllerManager
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String NOTIFICATION_TAG
com.google.android.gms.common.internal.ConnectionTelemetryConfiguration: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int abc_popup_enter
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource FilePath
com.google.firestore.v1.DocumentRemove: int DOCUMENT_FIELD_NUMBER
com.google.android.material.bottomappbar.BottomAppBar$SavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings: java.lang.String color
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$1: java.lang.String val$url
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.String contentTitle
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzu
com.pichillilorenzo.flutter_inappwebview_android.R$string: int call_notification_incoming_text
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_METHOD
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$11: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState connecting
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate inAppBrowserDelegate
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_action_mode_done
com.google.android.gms.internal.measurement.zzfo$zzd: java.lang.String zzi
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebauthnSupport: int NONE
me.carda.awesome_notifications.core.Definitions: java.lang.String DART_REVERSE_CHANNEL
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_SOUND_ERROR_CODE
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.firestore.v1.DocumentMask mask_
com.google.firestore.v1.Document: com.google.protobuf.MapFieldLite fields_
com.google.android.gms.internal.measurement.zzfo$zza: boolean zzj
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TIMEOUT_AFTER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: java.lang.String method
me.carda.awesome_notifications.core.enumerators.NotificationCategory: java.lang.String rawValue
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String CODE_INSUFFICIENT_PERMISSIONS
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.Boolean onlyAlertOnce
me.carda.awesome_notifications.core.Definitions: java.lang.String SCHEDULER_HELPER_GROUP
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessWebViewChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView headlessWebView
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_bar_container
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_list_selector_disabled_holo_light
com.google.protobuf.Int64Value: long value_
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_dialog_title_divider_material
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_large_material
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.PlatformUtil platformUtil
com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse: boolean report
com.pichillilorenzo.flutter_inappwebview_android.R$id: int browser_actions_menu_view
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatImageView_srcCompat
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActionBar_TabText_Inverse
me.carda.awesome_notifications.core.managers.DefaultsManager: me.carda.awesome_notifications.core.managers.DefaultsManager instance
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int compat_control_corner_material
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int test_level_drawable
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.Boolean noHistory
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2: android.webkit.WebView val$view
com.google.android.gms.internal.measurement.zzfr$zzd: java.lang.String zzq
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.lang.Integer ALL_SPEC
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: boolean isAwesomeCoreAttached
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods startSafeBrowsing
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2: java.lang.String val$realm
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzkc zzag
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthenticationChallenge: int previousFailureCount
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.String id
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods getTitle
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_TIMEZONE
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String HTML_FORMAT_SUMMARY_TEXT
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_colorSwitchThumbNormal
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState buffering
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int btn_checkbox_unchecked_mtrl
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods resume
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_primary_text_disable_only_material_light
com.google.firestore.v1.Value: int BYTES_VALUE_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_large_icon_width
com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType: com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType MOBILE
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebViewMediaIntegrityApiStatus: int DISABLED
com.pichillilorenzo.flutter_inappwebview_android.PlatformUtil: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String USER_SCRIPTS_AT_DOCUMENT_END_WRAPPER_JS_SOURCE
com.google.android.gms.internal.measurement.zzfr$zzc: boolean zzh
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: java.lang.String url
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: java.lang.String cancelButtonTitle
me.carda.awesome_notifications.DartBackgroundExecutor: io.flutter.embedding.engine.FlutterEngine backgroundFlutterEngine
com.pichillilorenzo.flutter_inappwebview_android.types.PrintJobInfoExt: java.lang.String label
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$1: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListenerChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener webMessageListener
com.pichillilorenzo.flutter_inappwebview_android.R$color: int primary_dark_material_dark
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient this$0
com.google.firestore.admin.v1.Index: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy: com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_search_url_text
com.google.android.gms.internal.measurement.zzfy$zza: com.google.android.gms.internal.measurement.zzfy$zza zzc
com.google.protobuf.Timestamp: int SECONDS_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzgd$zzd: com.google.android.gms.internal.measurement.zzkc zzg
me.carda.awesome_notifications.core.enumerators.LogLevel: me.carda.awesome_notifications.core.enumerators.LogLevel[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler: java.util.List ruleList
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuGroup_android_menuCategory
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_OBJECT
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ICON
com.pichillilorenzo.flutter_inappwebview_android.R$id: int locale
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_floating_window_z
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.Integer month
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_controlBackground
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$2: com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2 this$1
com.google.android.gms.internal.measurement.zzfr$zza: com.google.android.gms.internal.measurement.zzll zzd
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String ICON_SOURCE
me.carda.awesome_notifications.core.utils.MapUtils: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebViewManager: java.lang.String METHOD_CHANNEL_NAME
com.google.firestore.v1.BatchGetDocumentsRequest: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$3: com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SUMMARY_TEXT
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ActionButton_Overflow
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$3: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient this$0
com.google.android.gms.internal.measurement.zzfr$zza: com.google.android.gms.internal.measurement.zzkc zzj
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Boolean locked
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzar
me.carda.awesome_notifications.core.managers.CreatedManager: me.carda.awesome_notifications.core.managers.RepositoryManager shared
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int spinnerStyle
me.carda.awesome_notifications.core.threads.NotificationScheduler: java.lang.Boolean rescheduled
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_TextView_SpinnerItem
me.carda.awesome_notifications.R$string: int status_bar_notification_info_overflow
com.google.firestore.v1.DocumentDelete: com.google.firestore.v1.DocumentDelete DEFAULT_INSTANCE
com.google.android.gms.internal.measurement.zzfy$zze: int zze
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_CHECK_PERMISSIONS
com.google.android.gms.internal.measurement.zzgd$zzd: int zze
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: java.lang.String LOG_TAG
androidx.concurrent.futures.AbstractResolvableFuture: androidx.concurrent.futures.AbstractResolvableFuture$Waiter waiters
me.carda.awesome_notifications.R$styleable: int GradientColor_android_endY
androidx.core.content.FileProvider: java.io.File DEVICE_ROOT
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$2: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.google.android.gms.internal.measurement.zzfy$zzb: java.lang.String zzk
me.carda.awesome_notifications.R$attr: int fontProviderQuery
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_PopupMenuItem
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int clearTop
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean showProgress
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int popupMenuStyle
me.carda.awesome_notifications.R$styleable: int ColorStateListItem_alpha
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_INTERVAL_MILLISECONDS
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory[] valueList
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient inAppWebViewChromeClient
com.google.firestore.v1.RunAggregationQueryRequest: int TRANSACTION_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int notification_bg_low_normal
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: android.view.Menu menu
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$17: android.webkit.ValueCallback val$resultCallback
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ListMenuView
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_PICTURE_BITMAP_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.R$id: int submit_area
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_lineHeight
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState paused
com.pichillilorenzo.flutter_inappwebview_android.R$id: int italic
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int dividerHorizontal
com.google.android.gms.internal.measurement.zzfo$zza: com.google.android.gms.internal.measurement.zzfo$zza zzc
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout: java.lang.String LOG_TAG
com.google.android.gms.internal.measurement.zzfo$zza: int zzf
androidx.activity.ComponentActivity: java.lang.String ACTIVITY_RESULT_TAG
com.pichillilorenzo.flutter_inappwebview_android.R$color: int switch_thumb_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Medium
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: java.util.Map headers
com.google.firestore.v1.BatchGetDocumentsRequest: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$4: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.R$id: int shortcut
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedWidth
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tag_unhandled_key_listeners
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_android_typeface
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String PERMISSION_REQUEST_IN_PROGRESS_ERROR_MESSAGE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Button
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean algorithmicDarkeningAllowed
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$17: java.lang.String val$origin
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$3: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate this$0
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mReturningToStart
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_textAppearanceListItemSecondary
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_backgroundTint
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listPopupWindowStyle
com.google.android.gms.internal.measurement.zzfr$zzc: com.google.android.gms.internal.measurement.zzfr$zzc zzc
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuGroup_android_orderInCategory
com.pichillilorenzo.flutter_inappwebview_android.R$color: int secondary_text_default_material_light
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: java.lang.String mAppId
com.google.firestore.v1.WriteRequest: com.google.firestore.v1.WriteRequest DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_mode_bar_stub
com.google.firestore.v1.WriteRequest: com.google.protobuf.MapFieldLite labels_
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean disableVerticalScroll
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore mViewModelStore
me.carda.awesome_notifications.core.Definitions: java.lang.String INITIALIZE_STORE_INITIAL_ACTION
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_LARGE_ICON
com.google.android.gms.internal.measurement.zzfy$zzj: com.google.android.gms.internal.measurement.zzkc zzf
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int titleTextStyle
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModeShareDrawable
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LED_COLOR_RED
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String bodyLocKey
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int SCALE_DOWN_DURATION
com.google.android.gms.internal.measurement.zzfy$zzd: int zze
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object bufferEndSegment
me.carda.awesome_notifications.core.Definitions: java.lang.String DISMISSED_HANDLE
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean scrollbarFadingEnabled
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean geolocationEnabled
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String CODE_INVALID_ARGUMENTS
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$5: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
me.carda.awesome_notifications.R$attr: int nestedScrollViewStyle
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColor_android_endX
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: int rawValue
com.google.android.gms.internal.measurement.zzfy$zzn: int zzf
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzfr$zzi zzt
me.carda.awesome_notifications.core.Definitions: java.lang.String BROADCAST_DEFAULT_ACTION
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int abc_fade_in
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean horizontalScrollBarEnabled
me.carda.awesome_notifications.R$attr: int splitLayoutDirection
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String VIBRATION_PATTERN
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuGroup_android_enabled
com.pichillilorenzo.flutter_inappwebview_android.R$id: int src_atop
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_SET_BADGE_COUNT
me.carda.awesome_notifications.R$styleable: int GradientColor_android_gradientRadius
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission Car
androidx.datastore.preferences.protobuf.AbstractMessageLite: int memoizedHashCode
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INVALID_RAW_RESOURCE_ERROR_MESSAGE
com.google.firestore.v1.Value: int TIMESTAMP_VALUE_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ENABLE_VIBRATION
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int primaryActivityName
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String largeIcon
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency scheduledNotificationRepeatFrequency
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController: com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionChannelDelegate channelDelegate
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$3: android.webkit.ValueCallback val$callback
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_RECEIVED_ACTION
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: java.lang.String safeName
com.google.android.gms.internal.measurement.zzfr$zzi: java.lang.String zzf
me.carda.awesome_notifications.core.utils.CalendarUtils: java.util.TimeZone utcTimeZone
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_INITIALIZE
com.pichillilorenzo.flutter_inappwebview_android.R$color: int dim_foreground_disabled_material_light
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String sansSerifFontFamily
com.google.android.gms.internal.measurement.zzfy$zzm: com.google.android.gms.internal.measurement.zzll zzd
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_DURATION
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String IMPORTANT
com.google.android.gms.internal.measurement.zzfy$zzj: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] GradientColor
me.carda.awesome_notifications.core.models.NotificationContentModel: java.util.List titleLocArgs
androidx.appcompat.widget.Toolbar$SavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$1: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient this$0
com.dexterous.flutterlocalnotifications.models.MessageDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails person
me.carda.awesome_notifications.R$styleable: int SplitPairRule_finishPrimaryWithSecondary
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionLayout
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: java.lang.String confirmButtonTitle
com.google.android.gms.internal.measurement.zzfy$zzk: long zzw
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.lang.String toolbarTopFixedTitle
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: java.lang.String bigPicture
com.google.android.gms.internal.measurement.zzfy$zza: long zzm
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_CompactMenu
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzl
com.google.firestore.v1.BitSequence: int PADDING_FIELD_NUMBER
me.carda.awesome_notifications.R$styleable: int FontFamily_fontProviderQuery
io.flutter.embedding.engine.FlutterJNI: float displayWidth
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.TreeSet hours
com.pichillilorenzo.flutter_inappwebview_android.R$color: int bright_foreground_inverse_material_light
com.google.firestore.v1.StructuredQuery$UnaryFilter: java.lang.Object operandType_
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods removeAllUserScripts
com.google.firebase.firestore.proto.MaybeDocument: boolean hasCommittedMutations_
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.Boolean alwaysUseBrowserUI
com.google.firestore.v1.StructuredQuery$UnaryFilter: com.google.protobuf.Parser PARSER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int NOTIFICATION_PERMISSION_REQUEST_CODE
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_bar_stacked_tab_max_width
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission FullScreenIntent
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: java.lang.String conversationTitle
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_goIcon
me.carda.awesome_notifications.core.utils.EnumUtils: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType FONT
me.carda.awesome_notifications.core.models.DefaultsModel: java.lang.String backgroundHandleClass
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$2: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient this$0
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String CATEGORY
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Button_Borderless
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Display1
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActionButton_Overflow
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_PopupMenu_Overflow
com.google.android.gms.internal.measurement.zzfo$zzf: int zze
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_popup_menu_header_item_layout
me.carda.awesome_notifications.R$animator: int fragment_open_enter
com.google.android.gms.internal.measurement.zzfo$zzc: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_22
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_RatingBar
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: boolean isForMainFrame
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_CLEAR_STORED_ACTION
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_shareactionprovider_share_with_application
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ic_ab_back_material
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String ACTION_ID
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int RecycleListView_paddingTopNoTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String USES_CHRONOMETER
androidx.core.app.JobIntentService: java.lang.Object sLock
me.carda.awesome_notifications.R$styleable: int[] ColorStateListItem
com.pichillilorenzo.flutter_inappwebview_android.R$color: int switch_thumb_disabled_material_light
me.carda.awesome_notifications.core.Definitions: java.lang.String INITIALIZE_CHANNEL_GROUPS
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int notification_action
me.carda.awesome_notifications.R$id: int tag_unhandled_key_listeners
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_action_icon_size
com.pichillilorenzo.flutter_inappwebview_android.R$id: int default_activity_button
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods injectCSSFileFromUrl
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_Button_Colored
com.google.android.gms.internal.measurement.zzfy$zzk: int zzg
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods reload
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType type
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: java.lang.Integer colorMode
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SELECT_NOTIFICATION
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int panelMenuListTheme
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_selectableItemBackground
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExt: java.lang.String METHOD_CHANNEL_NAME_PREFIX
me.carda.awesome_notifications.core.managers.LifeCycleManager: me.carda.awesome_notifications.core.managers.LifeCycleManager instance
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.SoundSource soundSource
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int colorPrimaryDark
me.carda.awesome_notifications.R$attr: int activityAction
android.support.v4.media.MediaDescriptionCompat: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult: int type
com.google.firebase.firestore.proto.WriteBatch: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: boolean retain
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int splitMinHeightDp
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation mAlphaMaxAnimation
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Subhead_Inverse
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.Class actionReceiverClass
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_activity_chooser_view_list_item
me.carda.awesome_notifications.core.logs.Logger: java.lang.String blueColor
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$2: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_Switch
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_NOTIFICATION_CHANNELS_ERROR_CODE
me.carda.awesome_notifications.core.threads.NotificationThread: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$id: int add
com.dexterous.flutterlocalnotifications.models.PersonDetails: java.lang.String key
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModeSelectAllDrawable
me.carda.awesome_notifications.core.models.NotificationButtonModel: java.lang.String key
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuView_android_horizontalDivider
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuItem_tooltipText
io.flutter.embedding.engine.FlutterJNI: float displayDensity
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: java.lang.Long id
com.pichillilorenzo.flutter_inappwebview_android.R$id: int search_bar
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.Integer weekday
com.google.android.gms.internal.measurement.zzfy$zzh: com.google.android.gms.internal.measurement.zzfy$zzh zzc
com.google.firebase.firestore.proto.MaybeDocument: int DOCUMENT_FIELD_NUMBER
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: long mTriggerTimeout
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_scrubber_control_off_mtrl_alpha
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnTrimMemoryListeners
com.pichillilorenzo.flutter_inappwebview_android.R$id: int action_bar_title
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: int searchResultDisplayStyle
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface javaScriptBridgeInterface
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_Light_Dialog_MinWidth
com.google.firestore.v1.Precondition: com.google.firestore.v1.Precondition DEFAULT_INSTANCE
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View view
com.pichillilorenzo.flutter_inappwebview_android.R$style: int RtlOverlay_Widget_AppCompat_DialogTitle_Icon
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int notification_bg
com.google.firestore.v1.DocumentChange: com.google.firestore.v1.Document document_
me.carda.awesome_notifications.R$id: int action_container
com.pichillilorenzo.flutter_inappwebview_android.Util$1: java.lang.Object val$arguments
com.google.android.material.datepicker.Month: android.os.Parcelable$Creator CREATOR
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_BUTTON_KEY_INPUT
me.carda.awesome_notifications.core.services.AutoCancelService: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptAjaxRequestJS: java.lang.String FLAG_VARIABLE_FOR_INTERCEPT_ONLY_ASYNC_AJAX_REQUESTS_JS_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController$1: com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController this$0
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeSafariBrowserManager chromeSafariBrowserManager
me.carda.awesome_notifications.R$id: int fragment_container_view_tag
me.carda.awesome_notifications.core.Definitions: java.lang.String EVENT_SILENT_ACTION
me.carda.awesome_notifications.R$id: int accessibility_custom_action_13
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_animateNavigationIcon
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int requestedHeight
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ColorStateListItem_android_color
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Header
com.pichillilorenzo.flutter_inappwebview_android.R$color: int dim_foreground_material_dark
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int subtitleTextStyle
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy: int value
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Spinner_DropDown
me.carda.awesome_notifications.R$styleable: int SplitPlaceholderRule_tag
com.google.firestore.v1.DocumentChange: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener$1: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener this$0
kotlinx.coroutines.CompletedExceptionally: int _handled
com.google.android.gms.internal.measurement.zzfy$zzi: int zze
androidx.datastore.preferences.PreferencesProto$Value: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.R$id: int ltr
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_subhead_material
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Event
kotlinx.coroutines.internal.ResizableAtomicArray: java.util.concurrent.atomic.AtomicReferenceArray array
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_small_icon_size_as_large
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_DAY
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_listPreferredItemPaddingEnd
com.pichillilorenzo.flutter_inappwebview_android.R$id: int text
androidx.browser.customtabs.CustomTabsCallback: int TAB_HIDDEN
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String scheduledDateTime
com.google.protobuf.Int32Value: int VALUE_FIELD_NUMBER
me.carda.awesome_notifications.R$id: int accessibility_custom_action_18
com.google.android.gms.internal.measurement.zzfo$zzb: com.google.android.gms.internal.measurement.zzfo$zzb zzc
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_AutoCompleteTextView
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int secondaryActivityName
com.pichillilorenzo.flutter_inappwebview_android.types.CreateWindowAction: boolean isDialog
kotlinx.coroutines.sync.SemaphoreImpl: int _availablePermits
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Long when
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: android.view.View rootView
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int floating_action_mode
com.pichillilorenzo.flutter_inappwebview_android.R$color: int button_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_spinner_textfield_background_material
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: java.lang.String contentEncoding
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwipeRefreshLayout_swipeRefreshLayoutProgressSpinnerBackgroundColor
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_GET_ALL_ACTIVE_NOTIFICATION_IDS
me.carda.awesome_notifications.core.models.DefaultsModel: java.lang.String appIcon
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_customNavigationLayout
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ListPopupWindow
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.Boolean locked
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt: androidx.webkit.WebViewAssetLoader loader
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle[] $VALUES
me.carda.awesome_notifications.core.enumerators.NotificationPermission: java.lang.String safeName
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mScale
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.String channelKey
com.google.firebase.firestore.proto.NoDocument: java.lang.String name_
com.google.android.gms.internal.measurement.zzfo$zzf: int zzf
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionBarStyle
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int CheckedTextView_android_checkMark
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ACTION_TYPE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int DrawerArrowToggle_thickness
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState skippingToQueueItem
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_menu_meta_shortcut_label
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int LinearLayoutCompat_measureWithLargestChild
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.Boolean channelShowBadge
com.pichillilorenzo.flutter_inappwebview_android.R$id: int browser_actions_menu_items
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.lang.Boolean hidden
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_right_side_padding_top
com.google.gson.stream.JsonReader: int[] pathIndices
me.carda.awesome_notifications.R$string: int call_notification_ongoing_text
com.google.firestore.v1.WriteResult: com.google.firestore.v1.WriteResult DEFAULT_INSTANCE
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Button_Colored
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean disableContextMenu
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_capital_off
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean VERBOSE_LOGS
com.google.gson.stream.JsonReader: boolean lenient
me.carda.awesome_notifications.core.enumerators.ActionType: me.carda.awesome_notifications.core.enumerators.ActionType Default
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.lang.Boolean shouldCloseOnBackButtonPressed
me.carda.awesome_notifications.core.managers.DisplayedManager: me.carda.awesome_notifications.core.managers.DisplayedManager instance
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_textAppearanceSearchResultTitle
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_12
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort: boolean isStarted
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int btn_radio_on_mtrl
me.carda.awesome_notifications.core.managers.LostEventsManager: java.lang.String TAG
me.carda.awesome_notifications.core.utils.SerializableUtils: me.carda.awesome_notifications.core.utils.SerializableUtils instance
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String LARGE_ICON_BITMAP_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$1: com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager this$0
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$11: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.google.firestore.v1.StructuredQuery$FieldReference: com.google.firestore.v1.StructuredQuery$FieldReference DEFAULT_INSTANCE
com.google.firestore.v1.StructuredQuery$CompositeFilter: com.google.firestore.v1.StructuredQuery$CompositeFilter DEFAULT_INSTANCE
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_CANCEL_SCHEDULES_BY_GROUP_KEY
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat_Dialog
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld contentWorld
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_contentInsetStart
com.google.rpc.Status: com.google.protobuf.Internal$ProtobufList details_
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String BIG_TEXT
androidx.core.app.JobIntentService: boolean DEBUG
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean disableDefaultErrorPage
com.google.type.LatLng: int LATITUDE_FIELD_NUMBER
com.google.android.gms.internal.measurement.zzfy$zzk: long zzj
com.pichillilorenzo.flutter_inappwebview_android.types.ChannelDelegateImpl: io.flutter.plugin.common.MethodChannel channel
com.google.firestore.v1.Write: int VERIFY_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SCHEDULED_DATE_TIME
com.pichillilorenzo.flutter_inappwebview_android.R$color: int button_material_dark
com.google.android.gms.internal.measurement.zzfy$zzd: com.google.android.gms.internal.measurement.zzll zzd
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebViewManager: java.lang.String LOG_TAG
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: java.lang.String contentTitle
com.google.firebase.firestore.proto.WriteBatch: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Widget_PopupMenu_Large
me.carda.awesome_notifications.R$drawable: int notification_bg_low_pressed
me.carda.awesome_notifications.R$style: int TextAppearance_Compat_Notification_Title
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_search_url_text_normal
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamilyFont_android_font
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int btn_checkbox_checked_mtrl
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listPreferredItemHeightSmall
com.google.firestore.v1.TargetChange: com.google.protobuf.ByteString resumeToken_
com.pichillilorenzo.flutter_inappwebview_android.R$color: int switch_thumb_normal_material_light
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModeCopyDrawable
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_TITLE
me.carda.awesome_notifications.R$id: int tag_screen_reader_focusable
com.pichillilorenzo.flutter_inappwebview_android.R$color: int material_blue_grey_900
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_seekbar_track_progress_height_material
com.google.firestore.v1.BloomFilter: int bitField0_
com.google.firestore.v1.Target: int targetTypeCase_
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String CALL_ASYNC_JAVA_SCRIPT_WRAPPER_JS_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_ratingBarStyleIndicator
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
android.support.v4.os.ResultReceiver: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPairRule_splitMaxAspectRatioInPortrait
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_hideNavigationIcon
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionOverflowMenuStyle
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModePopupWindowStyle
com.google.firebase.Timestamp: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_ThemeOverlay_AppCompat
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int DEFAULT
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_FOREGROUND_SERVICE_TYPE
kotlinx.coroutines.channels.BufferedChannel: long completedExpandBuffersAndPauseFlag
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.R$style: int AlertDialog_AppCompat
me.carda.awesome_notifications.R$id: int icon
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List finalClippingPaths
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: java.lang.String LOG_TAG
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String CONTENT_WORLDS_GENERATOR_JS_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int windowActionBar
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_btn_colored_borderless_text_material
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_SET_EVENT_HANDLES
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_drawableBottomCompat
com.google.firestore.v1.BloomFilter: com.google.firestore.v1.BitSequence bits_
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings: java.lang.Integer size
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_AlertDialog_AppCompat
com.google.firestore.v1.WriteRequest: com.google.protobuf.Internal$ProtobufList writes_
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: java.lang.String initialUrl
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AnimatedStateListDrawableItem_android_id
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_listPreferredItemPaddingLeft
me.carda.awesome_notifications.R$animator: int fragment_close_exit
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabsHelper: java.lang.String LOCAL_PACKAGE
com.pichillilorenzo.flutter_inappwebview_android.R$string: int abc_action_bar_up_description
androidx.fragment.app.FragmentManager$LaunchedFragmentInfo: android.os.Parcelable$Creator CREATOR
com.google.android.gms.internal.measurement.zzfy$zzo: int zze
com.google.android.gms.internal.measurement.zzjt$zzd: com.google.android.gms.internal.measurement.zzjm zzc
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_PopupMenu_Header
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_textLocale
kotlinx.coroutines.CancelledContinuation: int _resumed
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int allowStacking
com.google.android.gms.internal.measurement.zzfr$zzc: int zzi
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.KeepAliveService: android.os.Binder sBinder
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String STYLE
me.carda.awesome_notifications.R$style: int Widget_Compat_NotificationActionContainer
com.dexterous.flutterlocalnotifications.models.NotificationStyle: com.dexterous.flutterlocalnotifications.models.NotificationStyle[] $VALUES
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2: java.lang.String val$finalProtocol
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int switchTextAppearance
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_listPreferredItemHeight
com.google.firestore.v1.WriteResponse: java.lang.String streamId_
me.carda.awesome_notifications.core.managers.LifeCycleManager: boolean hasStarted
com.pichillilorenzo.flutter_inappwebview_android.R$id: int list_item
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: java.lang.String reasonPhrase
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String GET_ACTIVE_NOTIFICATION_MESSAGING_STYLE_METHOD
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_contentInsetEndWithActions
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface webView
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_firstBaselineToTopHeight
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_MILLISECOND
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionMenuTextAppearance
me.carda.awesome_notifications.core.models.NotificationIntervalModel: java.lang.Integer interval
com.pichillilorenzo.flutter_inappwebview_android.R$id: int hide_ime_id
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String groupKey
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int fontStyle
com.google.firestore.v1.Cursor: int BEFORE_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String SHARED_PREFERENCES_KEY
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_DESTROY
com.google.gson.stream.JsonWriter: boolean lenient
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_DISMISSED_DATE
androidx.core.content.FileProvider: java.lang.String TAG_EXTERNAL_CACHE
me.carda.awesome_notifications.R$string: int call_notification_decline_action
com.google.firebase.firestore.proto.UnknownDocument: java.lang.String name_
me.carda.awesome_notifications.R$id: int always
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: java.lang.Integer action
me.carda.awesome_notifications.core.models.NotificationMessageModel: java.lang.Long timestamp
me.carda.awesome_notifications.R$attr: int finishSecondaryWithPrimary
me.carda.awesome_notifications.core.logs.Logger: java.lang.String resetColor
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: int FULLSCREEN_SYSTEM_UI_VISIBILITY
android.support.v4.media.RatingCompat: android.os.Parcelable$Creator CREATOR
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnNewIntentListeners
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_spinnerDropDownItemStyle
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ActionBar_Solid
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V7_ThemeOverlay_AppCompat_Dialog
com.google.firestore.v1.Target: int EXPECTED_COUNT_FIELD_NUMBER
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.View mTarget
com.google.protobuf.GeneratedMessageLite: int memoizedSerializedSize
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$4: java.lang.String val$message
me.carda.awesome_notifications.core.threads.NotificationSender: me.carda.awesome_notifications.core.builders.NotificationBuilder notificationBuilder
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: java.lang.String id
com.google.firestore.v1.StructuredQuery$FieldFilter: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Light_ActionBar_TabText_Inverse
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int ic_call_answer_video
com.google.android.material.search.SearchBar$SavedState: android.os.Parcelable$Creator CREATOR
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mIsBeingDragged
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int colorControlActivated
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods findNext
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D: boolean $assertionsDisabled
com.google.android.gms.common.internal.MethodInvocation: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTextView_drawableLeftCompat
com.google.firestore.v1.StructuredQuery$UnaryFilter: int FIELD_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$5: int val$threatType
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Boolean playSound
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzfr$zze zzv
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: java.lang.String name
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods clearSslPreferences
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: me.carda.awesome_notifications.core.services.ForegroundService$ForegroundServiceIntent foregroundServiceIntent
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String sound
com.google.firebase.datatransport.TransportRegistrar: java.lang.String LIBRARY_NAME
me.carda.awesome_notifications.core.threads.NotificationSender: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: java.lang.String contentTitle
com.pichillilorenzo.flutter_inappwebview_android.R$id: int select_dialog_listview
com.google.android.gms.internal.measurement.zzfy$zzi: java.lang.String zzg
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar: java.util.List clickableIDs
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CHANNEL_GROUP_KEY
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_IS_NOTIFICATION_ALLOWED
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$4: com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager this$0
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionBarWidgetTheme
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Light_Widget_PopupMenu_Large
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView: java.lang.String keepAliveId
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzad
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: java.lang.String username
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzka zzat
androidx.datastore.preferences.protobuf.GeneratedMessageLite$ExtendableMessage: androidx.datastore.preferences.protobuf.FieldSet extensions
com.google.firestore.admin.v1.Index: com.google.protobuf.Internal$ProtobufList fields_
androidx.webkit.WebViewClientCompat: java.lang.String[] sSupportedFeatures
io.flutter.embedding.engine.FlutterJNI: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType POPUP
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_buttonBarPositiveButtonStyle
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_DELAY_TOLERANCE
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D: double width
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CUSTOM_SOUND
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String cursiveFontFamily
androidx.customview.view.AbsSavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.types.PrintJobInfoExt: int state
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String ONGOING
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableVibration
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$6: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat this$0
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: java.util.List credentialsProposed
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int compat_notification_large_icon_max_width
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mFrom
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int buttonIconDimen
com.google.firestore.v1.Target: java.lang.Object resumeType_
com.google.gson.stream.JsonScope: int NONEMPTY_OBJECT
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int preserveIconSpacing
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String DETAILED_INVALID_ARGUMENTS
com.google.android.gms.internal.measurement.zzfy$zzk: boolean zzz
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_panelBackground
com.google.firestore.v1.TargetChange: int TARGET_CHANGE_TYPE_FIELD_NUMBER
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String REPEAT_TIME
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tag_accessibility_pane_title
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPlaceholderRule_placeholderActivityName
com.pichillilorenzo.flutter_inappwebview_android.R$style: int ThemeTransparent
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int showText
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PrintJS: com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript PRINT_JS_PLUGIN_SCRIPT
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController userContentController
com.google.firestore.v1.DocumentTransform$FieldTransform: int FIELD_PATH_FIELD_NUMBER
me.carda.awesome_notifications.core.Definitions: java.lang.String EXTRA_ANDROID_MEDIA_BUTTON
com.pichillilorenzo.flutter_inappwebview_android.R$id: int up
com.google.gson.stream.JsonReader: int PEEKED_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V26_Theme_AppCompat_Light
com.google.android.gms.internal.measurement.zzfy$zzg: int zze
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_DropDownItem_Spinner
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: int horizontalDpi
me.carda.awesome_notifications.R$id: int accessibility_custom_action_16
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_android_shadowColor
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: java.lang.String protocol
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Boolean clearCache
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_CompoundButton_RadioButton
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuView_android_headerBackground
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: java.lang.String username
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int PopupWindowBackgroundState_state_above_anchor
com.google.android.gms.internal.measurement.zzfr$zza$zza: int zze
com.google.android.gms.internal.measurement.zzfy$zza: int zze
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamilyFont_font
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzfy$zzc zzbn
com.pichillilorenzo.flutter_inappwebview_android.R$layout: int abc_popup_menu_item_layout
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: java.lang.String LOG_TAG
com.dexterous.flutterlocalnotifications.models.ScheduleMode: com.dexterous.flutterlocalnotifications.models.ScheduleMode exact
com.google.firestore.v1.DocumentChange: com.google.protobuf.Internal$IntList removedTargetIds_
me.carda.awesome_notifications.R$id: int tag_on_receive_content_mime_types
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.Boolean allowGeneratedReplies
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_btn_switch_to_on_mtrl_00012
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings$DirectoryBasePaths: java.lang.String dataDirectoryBasePath
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.Integer verticalScrollbarPosition
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_colorControlHighlight
me.carda.awesome_notifications.core.models.NotificationMessageModel: java.lang.String summary
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String CHECK_CONTEXT_MENU_SHOULD_BE_HIDDEN_JS_SOURCE
me.carda.awesome_notifications.R$id: int accessibility_custom_action_7
com.google.firestore.v1.Write: int CURRENT_DOCUMENT_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_android_textOff
com.google.firestore.v1.Target: int targetId_
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String TAG
com.google.android.gms.internal.measurement.zzfr$zza$zzf: com.google.android.gms.internal.measurement.zzfr$zza$zzf zzc
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: java.lang.Boolean htmlFormatContentTitle
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHORTCUT_ID
com.google.android.gms.internal.measurement.zzfo$zze: boolean zzj
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebViewManager: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin plugin
me.carda.awesome_notifications.core.threads.NotificationSender: me.carda.awesome_notifications.core.models.NotificationModel notificationModel
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Light_PopupMenu_Overflow
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Spinner_popupTheme
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: java.util.Map headers
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int MenuView_android_windowAnimationStyle
com.google.firebase.firestore.proto.Target: com.google.protobuf.Timestamp lastLimboFreeSnapshotVersion_
com.google.firestore.v1.Value: int valueTypeCase_
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: me.carda.awesome_notifications.core.enumerators.ForegroundStartMode stickCompatibility
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_ratingbar_material
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_windowFixedWidthMinor
io.flutter.embedding.engine.FlutterJNI: java.lang.Long nativeShellHolderId
com.google.android.gms.internal.measurement.zzfy$zzc: boolean zzk
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: boolean isLoading
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType[] $VALUES
androidx.datastore.preferences.PreferencesProto$PreferenceMap: androidx.datastore.preferences.protobuf.MapFieldLite preferences_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listChoiceIndicatorSingleAnimated
com.pichillilorenzo.flutter_inappwebview_android.R$id: int scrollIndicatorDown
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: androidx.browser.trusted.TrustedWebActivityDisplayMode displayMode
com.google.firestore.v1.WriteResponse: com.google.protobuf.Timestamp commitTime_
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listPreferredItemPaddingLeft
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.lang.String LOG_TAG
me.carda.awesome_notifications.BuildConfig: java.lang.String LIBRARY_PACKAGE_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_popup_background_mtrl_mult
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnLoadResourceJS: java.lang.String ON_LOAD_RESOURCE_JS_PLUGIN_SCRIPT_GROUP_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$id: int tag_accessibility_heading
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int FontFamily_fontProviderSystemFontFamily
com.google.android.gms.internal.measurement.zzfo$zze: com.google.android.gms.internal.measurement.zzll zzd
com.google.firestore.v1.CommitRequest: com.google.protobuf.ByteString transaction_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Theme_AppCompat_Dialog_FixedSize
com.google.android.gms.internal.measurement.zzfo$zze: int zzf
androidx.activity.ComponentActivity: java.util.concurrent.CopyOnWriteArrayList mOnPictureInPictureModeChangedListeners
me.carda.awesome_notifications.R$drawable: int notification_bg_normal_pressed
me.carda.awesome_notifications.core.Definitions: java.lang.String EVENT_NOTIFICATION_DISPLAYED
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: int FULLSCREEN_SYSTEM_UI_VISIBILITY_KITKAT
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: java.lang.String CHECK_GLOBAL_KEY_DOWN_EVENT_TO_HIDE_CONTEXT_MENU_JS_SOURCE
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_ONLY_ALERT_ONCE
me.carda.awesome_notifications.R$attr: int shortcutMatchRequired
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean mUsingCustomStart
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_panelMenuListTheme
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: java.lang.String jobName
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface surface
com.google.android.gms.internal.measurement.zzfy$zzk: com.google.android.gms.internal.measurement.zzfy$zzl zzas
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_homeAsUpIndicator
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_btn_colored_text_material
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PAYLOAD
io.flutter.embedding.engine.FlutterJNI: float refreshRateFPS
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_buttonBarNegativeButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods postWebMessage
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Button_ButtonBar_AlertDialog
com.google.firestore.v1.StructuredQuery$Order: com.google.protobuf.Parser PARSER
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_button_min_width_material
com.google.android.gms.internal.measurement.zzfy$zzk: boolean zzbh
com.google.android.gms.internal.measurement.zzfo$zzb: com.google.android.gms.internal.measurement.zzfo$zzd zzj
me.carda.awesome_notifications.R$attr: int placeholderActivityName
me.carda.awesome_notifications.core.Definitions: java.lang.String DISMISSED_NOTIFICATION
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: boolean isHidden
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.String channelDescription
com.pichillilorenzo.flutter_inappwebview_android.R$id: int submenuarrow
me.carda.awesome_notifications.core.enumerators.NotificationCategory: java.lang.String safeName
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: java.lang.Integer action
com.pichillilorenzo.flutter_inappwebview_android.Util$1: io.flutter.plugin.common.MethodChannel val$channel
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_menu
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlocker: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction action
me.carda.awesome_notifications.R$animator: int fragment_close_enter
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_ThemeOverlay_AppCompat_ActionBar
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SwitchCompat_track
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannelChannelDelegate channelDelegate
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer repeatIntervalMilliseconds
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActionButton
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.Boolean showWhen
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int ic_call_answer_video_low
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String channelDescription
com.google.firestore.v1.StructuredQuery$Order: com.google.firestore.v1.StructuredQuery$FieldReference field_
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager myCookieManager
me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType: java.lang.String safeName
me.carda.awesome_notifications.core.Definitions: java.lang.String AWESOME_FOREGROUND_ID
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_PopupMenu
org.chromium.support_lib_boundary.PrefetchStatusCodeBoundaryInterface: int SUCCESS
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int layout
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActivityChooserView_expandActivityOverflowButtonDrawable
io.flutter.view.AccessibilityViewEmbedder: android.util.SparseArray flutterIdToOrigin
me.carda.awesome_notifications.R$id: int tag_accessibility_heading
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.net.Uri videoOutputFileUri
me.carda.awesome_notifications.core.utils.BitmapUtils: me.carda.awesome_notifications.core.utils.BitmapUtils instance
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModeCopyDrawable
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$4: android.webkit.ClientCertRequest val$request
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_imageButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_ActionBar_Title_Inverse
com.google.android.gms.internal.measurement.zzfr$zza: boolean zzi
me.carda.awesome_notifications.R$id: int tag_accessibility_clickable_spans
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: java.util.List ports
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionBarItemBackground
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$3: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SHOW_WHEN
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: int SUM_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: java.lang.String METHOD_CHANNEL_NAME_PREFIX
me.carda.awesome_notifications.core.AwesomeNotifications: me.carda.awesome_notifications.core.AwesomeNotificationsExtension awesomeExtensions
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: java.lang.String message
com.google.gson.stream.JsonWriter: java.lang.String deferredName
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int notification_top_pad_large_text
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_tint_seek_thumb
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods printCurrentPage
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_contentInsetEndWithActions
com.google.android.gms.internal.measurement.zzfy$zzf: long zzh
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver: me.carda.awesome_notifications.core.utils.StringUtils stringUtils
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: java.lang.String defaultValue
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_buttonBarButtonStyle
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods removeUserScriptsByGroupName
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_action_button_min_height_material
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_subtitle
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List mutators
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_SearchResult_Title
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int btn_checkbox_to_checked_box_inner_merged_animation
com.google.android.gms.internal.measurement.zzfy$zzk: java.lang.String zzah
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: me.carda.awesome_notifications.core.enumerators.ForegroundStartMode notStick
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel$1: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel this$0
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_26
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int actionModeFindDrawable
me.carda.awesome_notifications.R$dimen: int notification_big_circle_margin
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: java.lang.String fromActivity
kotlinx.coroutines.channels.BufferedChannel: java.lang.Object receiveSegment
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$1: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Widget_TextView_SpinnerItem
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int popupWindowStyle
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance Default
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_progress_bar_height_material
me.carda.awesome_notifications.core.externalLibs.CronExpression: int ALL_SPEC_INT
com.google.firestore.v1.DocumentDelete: int DOCUMENT_FIELD_NUMBER
me.carda.awesome_notifications.R$styleable: int GradientColor_android_endX
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnWindowFocusEventJS: com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript ON_WINDOW_FOCUS_EVENT_JS_PLUGIN_SCRIPT
com.pichillilorenzo.flutter_inappwebview_android.R$color: int abc_primary_text_material_light
com.google.firestore.v1.RunAggregationQueryResponse: com.google.protobuf.Parser PARSER
com.google.android.gms.internal.measurement.zzfy$zza: java.lang.String zzj
me.carda.awesome_notifications.core.models.NotificationMessageModel: java.lang.String largeIcon
me.carda.awesome_notifications.core.models.NotificationIntervalModel: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String CONTENT_WORLD_WRAPPER_JS_SOURCE
me.carda.awesome_notifications.R$color: int call_notification_answer_color
androidx.core.app.JobIntentService: boolean mDestroyed
me.carda.awesome_notifications.core.enumerators.GroupSort: me.carda.awesome_notifications.core.enumerators.GroupSort Asc
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_APP_ICON
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_listChoiceIndicatorMultipleAnimated
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int mCircleViewIndex
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: android.view.View containerView
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Recommendation
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$2: com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager this$0
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: int id
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int[] DrawerArrowToggle
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: java.lang.Boolean enableLights
com.pichillilorenzo.flutter_inappwebview_android.R$id: int expand_activities_button
kotlinx.coroutines.channels.BufferedChannel: long sendersAndCloseStatus
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_ButtonBar
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColor_android_centerY
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager: androidx.webkit.ProxyController proxyController
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColor_android_startY
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_Widget_AppCompat_Spinner_Underlined
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String verticalScrollbarThumbColor
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int TextAppearance_fontVariationSettings
me.carda.awesome_notifications.core.broadcasters.receivers.NotificationActionReceiver: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int itemPadding
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_DialogWindowTitleBackground_AppCompat
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String INPUT
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_14
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy: com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy CANCEL
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String TEXT
me.carda.awesome_notifications.R$layout: int notification_action
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeSafariBrowserManager manager
com.google.android.material.datepicker.DateValidatorPointForward: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.R$id: int search_mag_icon
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy mLocalPathStrategy
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView inAppWebView
me.carda.awesome_notifications.R$styleable: int SplitPairRule_splitMinHeightDp
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$7: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView this$0
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: int ALIAS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding activityPluginBinding
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColor_android_centerX
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event ON_STOP
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String PLAY_SOUND
kotlinx.coroutines.scheduling.WorkQueue: java.lang.Object lastScheduledTask
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.SoundSource soundSource
me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType: me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType[] valueList
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender: me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender instance
com.google.firestore.v1.Target$DocumentsTarget: int DOCUMENTS_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int textAppearanceListItemSmall
me.carda.awesome_notifications.core.models.NotificationCrontabModel: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptFetchRequestJS: java.lang.String INTERCEPT_FETCH_REQUEST_JS_PLUGIN_SCRIPT_GROUP_NAME
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.dart.PlatformMessageHandler platformMessageHandler
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionModeStyle
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Widget_AppCompat_Light_ActionBar_Solid
com.google.android.gms.internal.measurement.zzfr$zzd: int zze
com.google.android.gms.internal.measurement.zzfr$zzd: com.google.android.gms.internal.measurement.zzkc zzk
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.TreeSet years
me.carda.awesome_notifications.R$styleable: int SplitPairRule_splitMinSmallestWidthDp
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: java.lang.String METHOD_CHANNEL_NAME
com.google.firebase.firestore.FirestoreRegistrar: java.lang.String LIBRARY_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_AppCompat_Body2
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: java.lang.String id
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$4: io.flutter.plugin.common.MethodChannel$Result val$result
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_actionMenuTextColor
com.pichillilorenzo.flutter_inappwebview_android.R$id: int accessibility_custom_action_7
me.carda.awesome_notifications.R$attr: int clearTop
com.google.android.material.bottomsheet.BottomSheetBehavior$SavedState: android.os.Parcelable$Creator CREATOR
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$4: com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem val$menuItem
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listPreferredItemPaddingRight
com.pichillilorenzo.flutter_inappwebview_android.R$id: int progress_horizontal
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$16: int val$finalWindowId
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int[] mParentScrollConsumed
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_seekbar_thumb_material
com.pichillilorenzo.flutter_inappwebview_android.R$anim: int btn_checkbox_to_checked_box_outer_merged_animation
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_item_background_holo_dark
com.google.firebase.firestore.proto.Target: int LAST_LISTEN_SEQUENCE_NUMBER_FIELD_NUMBER
kotlinx.coroutines.flow.StateFlowImpl: java.lang.Object _state
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_V7_Theme_AppCompat
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface$WebauthnSupport: int APP
me.carda.awesome_notifications.AwesomeNotificationsFlutterExtension: java.lang.String TAG
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int titleMargin
me.carda.awesome_notifications.core.externalLibs.CronExpression: int DAY_OF_WEEK
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int btn_checkbox_checked_to_unchecked_mtrl_animation
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_titleMargin
com.google.firebase.firestore.proto.NoDocument: int bitField0_
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$4: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_list_item_height_small_material
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat_DayNight_NoActionBar
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int tooltip_horizontal_padding
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int abc_btn_borderless_material
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.lang.Integer NO_SPEC
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_SCHEDULE_PRECISE_ALARM
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int PopupWindow_android_popupBackground
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PromisePolyfillJS: java.lang.String PROMISE_POLYFILL_JS_SOURCE
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int showTitle
org.chromium.support_lib_boundary.PrefetchStatusCodeBoundaryInterface: int FAILURE
com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty: android.os.Bundle mTriggeredEventParams
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: java.util.List credentialsProposed
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int paddingTopNoTitle
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String CREATE_NOTIFICATION_CHANNEL_GROUP_METHOD
com.pichillilorenzo.flutter_inappwebview_android.R$style: int TextAppearance_Widget_AppCompat_Toolbar_Title
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Base_TextAppearance_AppCompat_Menu
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$17: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient this$0
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SearchView_searchPrefixText
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int AppCompatTheme_tooltipFrameBackground
com.pichillilorenzo.flutter_inappwebview_android.R$string: int fallback_menu_item_open_in_browser
com.pichillilorenzo.flutter_inappwebview_android.R$string: int androidx_startup
com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime: com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime AT_DOCUMENT_START
me.carda.awesome_notifications.R$id: int accessibility_custom_action_20
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int SplitPlaceholderRule_splitMaxAspectRatioInPortrait
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_CANCEL_NOTIFICATION
me.carda.awesome_notifications.core.Definitions: java.lang.String SHARED_CREATED
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String SHOW_WHEN
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.String URI
me.carda.awesome_notifications.core.Definitions: java.lang.String SCHEDULER_HELPER_SHARED
com.google.firestore.v1.Cursor: int VALUES_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: io.flutter.plugin.common.BinaryMessenger messenger
com.google.firestore.v1.Write: com.google.protobuf.Internal$ProtobufList updateTransforms_
com.pichillilorenzo.flutter_inappwebview_android.R$style: int Theme_AppCompat
me.carda.awesome_notifications.core.exceptions.ExceptionCode: java.lang.String DETAILED_CLASS_NOT_FOUND
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_display_1_material
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$17: android.webkit.GeolocationPermissions$Callback val$callback
me.carda.awesome_notifications.core.Definitions: java.lang.String NOTIFICATION_CHANNEL_GROUP_NAME
com.pichillilorenzo.flutter_inappwebview_android.R$id: int container
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.lang.Boolean isSingleInstance
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory Call
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int abc_text_size_caption_material
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Integer iconResourceId
me.carda.awesome_notifications.R$styleable: int SplitPlaceholderRule_splitRatio
androidx.browser.customtabs.CustomTabsCallback: java.lang.String ONLINE_EXTRAS_KEY
me.carda.awesome_notifications.core.Definitions: java.lang.String CHANNEL_METHOD_SET_NOTIFICATION_CHANNEL
com.pichillilorenzo.flutter_inappwebview_android.types.PrintJobInfoExt: long creationTime
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int titleMargins
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: int btn_radio_on_to_off_mtrl_animation
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback callback
me.carda.awesome_notifications.R$styleable: int[] Capability
androidx.datastore.preferences.PreferencesProto$PreferenceMap: int PREFERENCES_FIELD_NUMBER
com.pichillilorenzo.flutter_inappwebview_android.R$attr: int listChoiceBackgroundIndicator
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate accessibilityDelegate
me.carda.awesome_notifications.core.enumerators.MediaSource: me.carda.awesome_notifications.core.enumerators.MediaSource Asset
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int Toolbar_titleMarginBottom
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.lang.String icon
com.google.android.gms.internal.measurement.zzfy$zzo: long zzi
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.lang.Boolean ongoing
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int GradientColor_android_startColor
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: int ActionBar_contentInsetEnd
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: int tooltip_precise_anchor_threshold
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: AppCompatTextViewAutoSizeHelper$Impl()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void onReceivedTitle(android.webkit.WebView,java.lang.String)
com.google.android.material.chip.Chip: void setCheckedIconTint(android.content.res.ColorStateList)
me.carda.awesome_notifications.core.builders.NotificationBuilder: android.content.res.Resources getLocalizedResources(android.content.Context,java.lang.String)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void setAllFloatValues(android.content.Context,java.lang.String,java.util.Map)
me.carda.awesome_notifications.core.background.BackgroundExecutor: boolean isDone()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setImportance(me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.textfield.TextInputLayout: void setMaxWidth(int)
io.grpc.internal.AutoConfiguredLoadBalancerFactory$EmptyPicker: AutoConfiguredLoadBalancerFactory$EmptyPicker()
androidx.appcompat.widget.DropDownListView: void setSelectorEnabled(boolean)
io.flutter.embedding.engine.FlutterJNI: void asyncWaitForVsync(long)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$FilesPayload: CrashlyticsReport$FilesPayload()
com.pichillilorenzo.flutter_inappwebview_android.Util: boolean isIPv6(java.lang.String)
androidx.appcompat.app.AppCompatActivity: void onDestroy()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void access$701(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient,android.webkit.WebView,android.os.Message,android.os.Message)
androidx.core.view.ViewCompat$Api31Impl: java.lang.String[] getReceiveContentMimeTypes(android.view.View)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: Snackbar$SnackbarLayout(android.content.Context,android.util.AttributeSet)
me.carda.awesome_notifications.core.models.NotificationButtonModel: void processRetroCompatibility(java.util.Map)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.util.Map getAll(android.content.Context,java.lang.String,java.lang.String,me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB$iGetAll)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.protobuf.FloatArrayList: FloatArrayList()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingService: FlutterFirebaseMessagingService()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: void setPathData(androidx.core.graphics.PathParser$PathDataNode[])
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchEmptyPlatformMessage(long,java.lang.String,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$3: boolean nonNullSuccess(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setCursorColor(android.content.res.ColorStateList)
me.carda.awesome_notifications.core.services.BackgroundService: java.lang.Long getActionCallbackDispatcher(android.content.Context)
me.carda.awesome_notifications.core.managers.ChannelManager: void saveAndroidChannel(android.content.Context,me.carda.awesome_notifications.core.models.NotificationChannelModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,java.lang.Boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.SslCertificateExt: java.util.Map toMap(android.net.http.SslCertificate)
androidx.constraintlayout.solver.widgets.ConstraintWidgetContainer: ConstraintWidgetContainer()
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy: NavigationActionPolicy(java.lang.String,int,int)
com.pichillilorenzo.flutter_inappwebview_android.types.CreateWindowAction: boolean equals(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: int getResultCount()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void moveSpinner(float)
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnLoadResourceJS: OnLoadResourceJS()
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: void onBroadcastDefaultActionNotification(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2: JavaScriptBridgeInterface$2(com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface,java.lang.String,java.lang.String,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void updateDisplayMetrics(int,float,float,float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean canChildScrollUp()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setSortKey(android.app.Notification$Builder,java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setEmojiCompatEnabled(boolean)
androidx.constraintlayout.widget.ConstraintLayout: int getPaddingWidth()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$3: void defaultBehaviour(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeScheduleFrame(long)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setIsVideo(android.app.Notification$CallStyle,boolean)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomStart()
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessage(java.lang.String,java.nio.ByteBuffer,int,long)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(android.graphics.drawable.Drawable)
io.flutter.plugins.webviewflutter.PigeonApiWebStorage$Companion: PigeonApiWebStorage$Companion()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setTimeoutAfter(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
me.carda.awesome_notifications.core.externalLibs.CronExpression: void setTimeZone(java.util.TimeZone)
me.leolin.shortcutbadger.impl.ZukHomeBadger: ZukHomeBadger()
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: void setAction(java.lang.Integer)
com.google.android.material.button.MaterialButtonToggleGroup: void setGeneratedIdIfNeeded(com.google.android.material.button.MaterialButton)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateFilledDropDownMenuBackground()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: UserContentController(android.webkit.WebView)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabel(java.lang.CharSequence)
me.carda.awesome_notifications.core.threads.NotificationThread: boolean itMustRunOnBackgroundThread(me.carda.awesome_notifications.core.models.NotificationModel)
androidx.appcompat.widget.SearchView: int getSuggestionCommitIconResId()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEventAndBundle(java.lang.String,java.lang.String,android.os.Bundle,com.google.android.gms.internal.measurement.zzdo,long)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.util.Map getStringsStartingWith(android.content.Context,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.managers.DisplayedManager: me.carda.awesome_notifications.core.managers.DisplayedManager getInstance()
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source[] values()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void setAll(android.content.Context,java.lang.String,java.lang.String,java.util.Map,me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB$iSetAll)
androidx.appcompat.widget.SearchView: void setImeOptions(int)
me.carda.awesome_notifications.core.models.NotificationButtonModel: me.carda.awesome_notifications.core.models.NotificationButtonModel fromMap(java.util.Map)
androidx.constraintlayout.solver.widgets.Barrier: Barrier()
com.google.android.material.chip.ChipGroup: void setChipSpacing(int)
android.support.v4.media.RatingCompat$Api19Impl: boolean isThumbUp(android.media.Rating)
me.carda.awesome_notifications.core.managers.RepositoryManager: me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB getDbInstance(android.content.Context)
androidx.core.view.ViewCompat$Api26Impl: boolean hasExplicitFocusable(android.view.View)
com.google.android.material.chip.ChipGroup: void setDividerDrawableHorizontal(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsRegionalIndicator(int)
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.Date getFinalFireTime()
androidx.core.content.FileProvider: java.lang.String access$000(java.lang.String)
androidx.core.app.ComponentActivity$ExtraData: ComponentActivity$ExtraData()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getWidth()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void shouldInterceptRequest(com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ShouldInterceptRequestCallback)
io.flutter.plugins.webviewflutter.JavaScriptChannel: void postMessage(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonIconTintList()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$3: void onSessionEnded(boolean,android.os.Bundle)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: void setType(int)
androidx.core.app.JobIntentService: void onCreate()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: RuntimeTypeAdapterFactory(java.lang.Class,java.lang.String)
me.carda.awesome_notifications.core.managers.CancellationManager: boolean cancelSchedulesByChannelKey(android.content.Context,java.lang.String)
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: java.lang.Object doInBackground()
com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript: boolean equals(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper: void onCreate(android.database.sqlite.SQLiteDatabase)
com.google.android.gms.internal.measurement.zzfo$zzc: zzfo$zzc()
androidx.transition.ViewGroupUtils$Api29Impl: int getChildDrawingOrder(android.view.ViewGroup,int)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setIconUri(android.media.MediaDescription$Builder,android.net.Uri)
com.google.protobuf.NullValue: com.google.protobuf.NullValue[] values()
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getGmpAppId(com.google.android.gms.internal.measurement.zzdo)
io.flutter.embedding.engine.FlutterJNI: void nativeRunBundleAndSnapshotFromLibrary(long,java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
com.google.android.material.search.SearchBar: void setText(int)
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax valueOf(java.lang.String)
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMinimumFlingVelocity(android.view.ViewConfiguration,int,int,int)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt fromWebResourceResponse(android.webkit.WebResourceResponse)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCheckMarkTintList()
io.grpc.CallCredentials$MetadataApplier: CallCredentials$MetadataApplier()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: java.lang.String getUrl()
androidx.constraintlayout.widget.ConstraintHelper: ConstraintHelper(android.content.Context,android.util.AttributeSet)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionResult: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionResult valueOf(java.lang.String)
io.grpc.internal.PickFirstLoadBalancerProvider: boolean isAvailable()
me.carda.awesome_notifications.core.managers.CreatedManager: boolean saveCreated(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType valueOf(java.lang.String)
me.carda.awesome_notifications.core.managers.DefaultsManager: void commitChanges(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$6: void defaultBehaviour(java.lang.Integer)
me.carda.awesome_notifications.core.services.ForegroundService: ForegroundService()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks: void dispose()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$RolloutAssignment$RolloutVariant: CrashlyticsReport$Session$Event$RolloutAssignment$RolloutVariant()
me.carda.awesome_notifications.core.utils.CalendarUtils: java.util.Calendar shiftTimeZone(java.util.Calendar,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: boolean canGoBackOrForward(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void launchUrl(java.lang.String,java.util.Map,java.lang.String,java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: void clearFocus()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelIsNotificationAllowed(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: java.util.List access$100()
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$4: MyCookieManager$4(com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void onPreEngineRestart()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization[] values()
androidx.core.view.ViewConfigurationCompat$Api28Impl: int getScaledHoverSlop(android.view.ViewConfiguration)
io.grpc.okhttp.internal.framed.Http2$FrameLogger: Http2$FrameLogger()
me.carda.awesome_notifications.core.enumerators.GroupSort: java.lang.String getSafeName()
androidx.appcompat.widget.Toolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt: java.lang.String getUrl()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getTestFlag(com.google.android.gms.internal.measurement.zzdo,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel createCompatWebMessageChannel()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void setInAppBrowserDelegate(com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout: PullToRefreshLayout(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getOverflowIcon()
androidx.constraintlayout.helper.widget.Flow: void setPadding(int)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmoji(int)
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthenticationChallenge: java.util.Map toMap()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: boolean isRedirect()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onJsPrompt(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsPromptCallback)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.content.Intent getLaunchIntent(android.content.Context)
com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior: com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior[] values()
androidx.recyclerview.widget.RecyclerView: RecyclerView(android.content.Context,android.util.AttributeSet)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.os.Bundle getExtras(android.media.session.PlaybackState$CustomAction)
me.carda.awesome_notifications.core.enumerators.NotificationLayout: NotificationLayout(java.lang.String,int,java.lang.String)
me.carda.awesome_notifications.core.AwesomeNotifications: void setEventsHandle(java.lang.Long,java.lang.Long,java.lang.Long,java.lang.Long)
io.flutter.embedding.engine.FlutterJNI: void prefetchDefaultFontManager()
com.google.firestore.v1.TargetChange: TargetChange()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getTappableElementInsets()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void onActivityResult(int,int,android.content.Intent)
io.flutter.plugins.webviewflutter.ConsoleMessageLevel: io.flutter.plugins.webviewflutter.ConsoleMessageLevel valueOf(java.lang.String)
me.carda.awesome_notifications.core.models.returnedData.NotificationReceived: NotificationReceived()
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.ConstraintLayout: int getMinWidth()
me.carda.awesome_notifications.core.models.NotificationMessageModel: me.carda.awesome_notifications.core.models.NotificationMessageModel fromMap(java.util.Map)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipIcon()
androidx.recyclerview.widget.RecyclerView: int getScrollState()
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: java.lang.String getSafeName()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onZoomScaleChanged(float,float)
com.dexterous.flutterlocalnotifications.models.BitmapSource: BitmapSource(java.lang.String,int)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setDescription(android.media.MediaDescription$Builder,java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzfr$zzc$zza: zzfr$zzc$zza()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void setSettings(com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings,java.util.HashMap)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver subscribeOnNotificationEvents(me.carda.awesome_notifications.core.listeners.AwesomeNotificationEventListener)
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.JavaScriptBridgeJS: JavaScriptBridgeJS()
io.grpc.LoadBalancer$Subchannel: LoadBalancer$Subchannel()
com.google.gson.stream.JsonReader: boolean hasNext()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: WebResourceRequestExt(java.lang.String,java.util.Map,boolean,boolean,boolean,java.lang.String)
me.carda.awesome_notifications.DartBackgroundExecutor: void dischargeNextSilentExecution()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$RolloutsState: CrashlyticsReport$Session$Event$RolloutsState()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onEnterFullscreen()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar: int hashCode()
com.google.gson.stream.JsonReader: java.lang.String nextUnquotedValue()
androidx.activity.ComponentActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler: java.util.List getRuleList()
me.carda.awesome_notifications.core.models.NotificationContentModel: java.lang.String toJson()
com.google.firebase.firestore.index.IndexByteEncoder: IndexByteEncoder()
me.carda.awesome_notifications.core.managers.DismissedManager: me.carda.awesome_notifications.core.managers.DismissedManager getInstance()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action,java.lang.Object)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,androidx.webkit.WebResourceErrorCompat)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: float getPlaybackSpeed(android.media.session.PlaybackState)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationAppLaunchDetails(io.flutter.plugin.common.MethodChannel$Result)
androidx.recyclerview.widget.LinearLayoutManager$SavedState: LinearLayoutManager$SavedState()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void onDestroy()
androidx.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
me.carda.awesome_notifications.core.models.NotificationCrontabModel: java.util.Calendar getNextValidDate(java.util.Calendar)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$2: void onReceiveValue(java.lang.Boolean)
org.chromium.support_lib_boundary.WebViewRendererBoundaryInterface: boolean terminate()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$3: ChromeCustomTabsActivity$3(com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontal(int)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: android.graphics.SurfaceTexture surfaceTexture()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void goBack()
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
com.google.android.gms.internal.measurement.zzlv: zzlv()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getSuperButtonTintList()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$9: void onReceiveValue(java.lang.Object)
me.carda.awesome_notifications.core.managers.DismissedManager: java.util.List getDismissedByKey(android.content.Context,java.lang.Integer)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setDropDownBackgroundResource(int)
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertChallenge: void setPrincipals(java.security.Principal[])
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$FirestorePigeonFirebaseApp: GeneratedAndroidFirebaseFirestore$FirestorePigeonFirebaseApp()
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D: java.lang.String toString()
me.carda.awesome_notifications.core.models.NotificationContentModel: void validateLargeIcon(android.content.Context)
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: me.carda.awesome_notifications.core.enumerators.ForegroundStartMode[] values()
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature valueOf(java.lang.String)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void release()
me.carda.awesome_notifications.core.models.returnedData.NotificationReceived: NotificationReceived(me.carda.awesome_notifications.core.models.NotificationContentModel,android.content.Intent)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29)
androidx.datastore.core.State: State()
org.chromium.support_lib_boundary.PrefetchParamsBoundaryInterface: java.lang.String getNoVarySearchHint()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.text.Spanned fromHtml(java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int)
com.google.android.material.search.SearchView: void setHint(int)
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: void setConfirmButtonTitle(java.lang.String)
me.carda.awesome_notifications.core.utils.EnumUtils: EnumUtils()
com.google.firebase.crashlytics.FirebaseCrashlyticsKtxRegistrar: FirebaseCrashlyticsKtxRegistrar()
androidx.appcompat.widget.ActionBarContainer: android.view.View getTabContainer()
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$3: void onReceiveValue(java.lang.Object)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior(android.content.Context,android.util.AttributeSet)
me.carda.awesome_notifications.core.threads.NotificationScheduler: java.lang.Object onPostExecute(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.graphics.drawable.IconCompat getIconFromSource(android.content.Context,java.lang.Object,com.dexterous.flutterlocalnotifications.models.IconSource)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: android.webkit.GeolocationPermissions getGeoLocationPermissions()
com.google.firebase.database.collection.ImmutableSortedMap: ImmutableSortedMap()
com.google.firebase.sessions.FirebaseSessionsRegistrar: FirebaseSessionsRegistrar()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: void setForMainFrame(boolean)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeStepGranularity()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.net.Uri getIconUri(android.media.MediaDescription)
com.google.gson.stream.JsonWriter: boolean isTrustedNumberType(java.lang.Class)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse)
androidx.appcompat.widget.AppCompatSpinner: java.lang.CharSequence getPrompt()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: InputAwareWebView(android.content.Context)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onNestedPreFling(android.view.View,float,float)
com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse: boolean isReport()
androidx.appcompat.widget.Toolbar: java.util.ArrayList getCurrentMenuItems()
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings: com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings parse(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate getInAppBrowserDelegate()
androidx.core.widget.NestedScrollView: void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener)
com.google.firebase.firestore.core.CompositeFilter$Operator: com.google.firebase.firestore.core.CompositeFilter$Operator valueOf(java.lang.String)
me.carda.awesome_notifications.core.models.returnedData.NotificationReceived: me.carda.awesome_notifications.core.models.returnedData.NotificationReceived fromMap(java.util.Map)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.rpc.Status: Status()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks$1: void onActivityStopped(android.app.Activity)
io.flutter.embedding.engine.FlutterJNI: void nativeCleanupMessageData(long)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType valueOf(java.lang.String)
android.support.v4.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.window.core.SpecificationComputer: SpecificationComputer()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotifications(io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.models.DefaultsModel: me.carda.awesome_notifications.core.models.DefaultsModel fromJson(java.lang.String)
androidx.appcompat.view.menu.ActionMenuItemView: void setChecked(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageResource(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: boolean isOriginAllowed(java.lang.String,java.lang.String,int)
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnWindowBlurEventJS: OnWindowBlurEventJS()
me.carda.awesome_notifications.core.AwesomeNotifications: int decrementGlobalBadgeCounter()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.KeepAliveService: KeepAliveService()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$15: void run()
androidx.appcompat.widget.Toolbar: void setTitleMarginBottom(int)
androidx.core.text.ICUCompat$Api24Impl: java.lang.String getScript(java.lang.Object)
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: void onReceive(android.content.Context,android.content.Intent)
androidx.appcompat.widget.Toolbar: void setLogoDescription(int)
me.carda.awesome_notifications.core.services.ForegroundService$ForegroundServiceIntent: ForegroundService$ForegroundServiceIntent(me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.enumerators.ForegroundStartMode,me.carda.awesome_notifications.core.enumerators.ForegroundServiceType)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setGroupAlertBehavior(android.app.Notification$Builder,int)
androidx.recyclerview.widget.RecyclerView: void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onScrollChanged(int,int)
io.flutter.embedding.engine.FlutterJNI: void setViewportMetrics(float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax valueOf(java.lang.String)
me.carda.awesome_notifications.core.utils.CalendarUtils: java.lang.String getNowStringCalendar()
me.carda.awesome_notifications.core.managers.PermissionManager: void showNotificationConfigPage(android.content.Context,me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevation(float)
com.google.android.material.button.MaterialButton: void setIconTint(android.content.res.ColorStateList)
me.carda.awesome_notifications.core.AwesomeNotifications: void onNewNotificationReceived(java.lang.String,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setAnimationMode(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void goForward()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void getContentHeight(android.webkit.ValueCallback)
androidx.fragment.app.FragmentTransaction$Op: FragmentTransaction$Op()
com.google.android.material.textfield.TextInputLayout: void setEndIconCheckable(boolean)
androidx.core.view.ViewCompat$Api26Impl: void setAutofillHints(android.view.View,java.lang.String[])
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: android.print.PrintAttributes$Resolution toResolution()
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
me.carda.awesome_notifications.core.managers.DefaultsManager: boolean setActionCallbackDispatcher(android.content.Context,java.lang.Long)
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: void setOrder(java.lang.Integer)
androidx.core.view.ViewCompat$Api26Impl: void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int)
net.jonhanson.flutter_native_splash.FlutterNativeSplashPlugin: FlutterNativeSplashPlugin()
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobChannelDelegate: PrintJobChannelDelegate(com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController,io.flutter.plugin.common.MethodChannel)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void prepare()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$1: boolean nonNullSuccess(java.lang.Object)
androidx.emoji2.text.EmojiExclusions$EmojiExclusions_Api34: java.util.Set getExclusions()
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzcn: com.google.android.gms.internal.measurement.zzcn[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$17: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextAppearance(int)
com.google.android.material.appbar.AppBarLayout: int getLiftOnScrollTargetViewId()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: java.util.Map requestFocusNodeHref()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.firestore.v1.WriteRequest: WriteRequest()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: int getScrollX()
io.flutter.plugins.firebase.messaging.JobIntentService: JobIntentService()
com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse: void setAction(java.lang.Integer)
androidx.core.content.FileProvider$Api21Impl: java.io.File[] getExternalMediaDirs(android.content.Context)
androidx.appcompat.widget.ActionBarContextView: int getAnimatedVisibility()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$DocumentChangeType: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$DocumentChangeType valueOf(java.lang.String)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior(android.content.Context,android.util.AttributeSet)
com.google.firestore.v1.Target$QueryTarget$Builder: Target$QueryTarget$Builder()
com.google.firebase.firestore.LoadBundleTaskProgress$TaskState: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: void setWebMessageCallbackForInAppWebView(int,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.exceptions.ExceptionFactory: me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException createNewAwesomeException(java.lang.String,me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException)
me.carda.awesome_notifications.core.models.NotificationChannelGroupModel: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
me.carda.awesome_notifications.core.models.NotificationChannelModel: me.carda.awesome_notifications.core.models.NotificationChannelModel clone()
me.carda.awesome_notifications.core.models.AbstractModel: AbstractModel()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler: ContentBlockerHandler(java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$SyncShouldInterceptRequestCallback: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt decodeResult(java.lang.Object)
me.carda.awesome_notifications.core.managers.ActionManager: ActionManager()
com.google.android.material.textfield.TextInputLayout: float getHintCollapsedTextHeight()
io.grpc.LoadBalancerProvider: LoadBalancerProvider()
androidx.appcompat.view.menu.ListMenuItemView: ListMenuItemView(android.content.Context,android.util.AttributeSet)
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: me.carda.awesome_notifications.core.models.NotificationModel onPostExecute(me.carda.awesome_notifications.core.models.NotificationModel)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void setWebMessageChannels(java.util.Map)
me.carda.awesome_notifications.core.utils.IntegerUtils: java.lang.Integer convertToInt(java.lang.Object)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.os.Bundle getExtras(android.media.MediaDescription)
com.google.android.gms.internal.measurement.zzgd$zzb: zzgd$zzb()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getRotation()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetLeft(android.view.DisplayCutout)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction: ContentBlockerAction(com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType,java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSgtmDebugInfo(android.content.Intent)
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Count: StructuredAggregationQuery$Aggregation$Count()
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedDispatcher findOnBackInvokedDispatcher(android.view.View)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setBackForwardCacheEnabled(boolean)
me.carda.awesome_notifications.core.models.DefaultsModel: DefaultsModel()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt: boolean equals(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void access$000(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat,android.webkit.WebView,java.lang.String,java.util.Map,boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$17: boolean nonNullSuccess(java.lang.Object)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] $values()
androidx.core.app.ActivityCompat$Api21Impl: void setExitSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: java.lang.Boolean acceptsImages(java.lang.String[])
com.pichillilorenzo.flutter_inappwebview_android.R$interpolator: R$interpolator()
androidx.core.app.ComponentActivity: boolean shouldSkipDump(java.lang.String[])
androidx.appcompat.widget.Toolbar: void setContentInsetStartWithNavigation(int)
me.carda.awesome_notifications.core.models.NotificationContentModel: java.util.List messagesToMap(java.util.List)
com.google.android.gms.internal.measurement.zzfo$zzd: zzfo$zzd()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void goBack()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: boolean mayLaunchUrl(java.lang.String,java.util.List)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,android.webkit.SafeBrowsingResponse)
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigManager: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: void setCertificatePassword(java.lang.String)
androidx.concurrent.futures.AbstractResolvableFuture$Waiter: AbstractResolvableFuture$Waiter()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShrinkMotionSpec()
com.google.gson.stream.JsonScope: JsonScope()
me.carda.awesome_notifications.core.models.NotificationChannelModel: me.carda.awesome_notifications.core.models.NotificationChannelModel fromJson(java.lang.String)
com.google.android.material.search.SearchBar: void setTitle(java.lang.CharSequence)
androidx.core.widget.NestedScrollView: float getTopFadingEdgeStrength()
me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType: me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType[] $values()
androidx.core.view.ViewCompat$Api21Impl: void callCompatInsetAnimationCallback(android.view.WindowInsets,android.view.View)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior()
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void scheduleFrame()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void getContentWidth(android.webkit.ValueCallback)
com.google.android.material.datepicker.MaterialCalendar$CalendarSelector: com.google.android.material.datepicker.MaterialCalendar$CalendarSelector valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView: void dispose()
androidx.core.content.FileProvider: android.content.res.XmlResourceParser getFileProviderPathsMetaData(android.content.Context,java.lang.String,android.content.pm.ProviderInfo,int)
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(int)
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController: void dispose()
me.carda.awesome_notifications.core.enumerators.MediaSource: me.carda.awesome_notifications.core.enumerators.MediaSource getSafeEnum(java.lang.String)
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: me.carda.awesome_notifications.core.models.NotificationModel doInBackground()
com.google.android.material.textfield.TextInputLayout: int getEndIconMinSize()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void takeScreenshot(java.util.Map,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.button.MaterialButton: int getIconPadding()
androidx.appcompat.app.AppLocalesMetadataHolderService$Api24Impl: int getDisabledComponentFlag()
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat: AnimatedStateListDrawableCompat()
io.grpc.ClientStreamTracer$Factory: ClientStreamTracer$Factory()
me.carda.awesome_notifications.core.managers.LostEventsManager: void saveDisplayed(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
me.carda.awesome_notifications.core.managers.EventManager: java.lang.String _getKeyById(java.lang.Integer)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: boolean onCreateOptionsMenu(android.view.Menu)
io.grpc.util.OutlierDetectionLoadBalancerProvider: boolean isAvailable()
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: void onCreate(android.database.sqlite.SQLiteDatabase)
kotlin.collections.AbstractList: AbstractList()
com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld: ContentWorld(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setOrientation(int)
androidx.appcompat.widget.ActionBarContextView: void setContentHeight(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void waitOnFence(android.media.Image)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundResource(int)
me.carda.awesome_notifications.core.models.NotificationModel: java.util.List extractNotificationButtons(java.util.Map)
com.google.firebase.sessions.api.SessionSubscriber$Name: com.google.firebase.sessions.api.SessionSubscriber$Name[] values()
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getSystemGestureInsets()
me.carda.awesome_notifications.DartBackgroundExecutor: void executeDartCallbackInBackgroundIsolate(android.content.Intent)
android.support.v4.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: com.google.firebase.analytics.FirebaseAnalytics$ConsentType[] values()
androidx.core.widget.TextViewCompat$Api34Impl: void setLineHeight(android.widget.TextView,int,float)
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: android.app.Notification$Action$Builder createActionBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
androidx.recyclerview.widget.RecyclerView: void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper$ConnectionCallback: void onCustomTabsConnected()
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$didReinitializeFirebaseCore$1(com.google.android.gms.tasks.TaskCompletionSource)
com.google.firebase.database.collection.RBTreeSortedMap$Builder$BooleanChunk: RBTreeSortedMap$Builder$BooleanChunk()
com.google.firebase.firestore.proto.WriteBatch: WriteBatch()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: int getIdentifier(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void dispose()
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView: void prepare(java.util.Map)
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: boolean isRedirect()
android.support.v4.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodCancelSchedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments: AccessibilityViewCommand$SetProgressArguments()
androidx.core.view.WindowInsetsCompat$Impl29: void setStableInsets(androidx.core.graphics.Insets)
me.carda.awesome_notifications.core.models.AbstractModel: AbstractModel(me.carda.awesome_notifications.core.utils.SerializableUtils,me.carda.awesome_notifications.core.utils.StringUtils)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsPromptCallback: com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse decodeResult(java.lang.Object)
com.google.android.material.button.MaterialButton: void setShouldDrawSurfaceColorStroke(boolean)
androidx.appcompat.widget.SearchView: void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: androidx.core.graphics.PathParser$PathDataNode[] getPathData()
androidx.appcompat.widget.Toolbar$Api33Impl: void tryUnregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.ParcelFileDescriptor openFile(android.content.ContentProvider,android.net.Uri)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType[] values()
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage: void getOrigins(io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)
com.google.android.datatransport.runtime.backends.CreationContext: CreationContext()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHandler: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.circularreveal.CircularRevealFrameLayout: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: int getSearchResultDisplayStyle()
me.carda.awesome_notifications.core.managers.ChannelManager: android.app.NotificationChannel getAndroidChannel(android.content.Context,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onRenderProcessGone(boolean,int)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: android.app.PendingIntent getSecondaryToolbarOnClickPendingIntent()
androidx.appcompat.widget.AppCompatImageButton: void setImageDrawable(android.graphics.drawable.Drawable)
androidx.fragment.app.DialogFragment: DialogFragment()
com.google.android.material.textfield.TextInputLayout: int getErrorAccessibilityLiveRegion()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setNotificationId(me.carda.awesome_notifications.core.models.NotificationModel)
com.google.gson.reflect.TypeToken: TypeToken()
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getWebkitToCompatConverter()
com.google.firestore.v1.StructuredQuery$Filter: StructuredQuery$Filter()
com.google.android.material.internal.FlowLayout: int getRowCount()
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController: void dispose()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: double getLeft()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void hideContextMenu()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: void setIfTopUrl(java.util.List)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setContentType(android.media.AudioAttributes$Builder,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotifications(android.content.Context,java.util.ArrayList)
androidx.core.text.HtmlCompat$Api24Impl: android.text.Spanned fromHtml(java.lang.String,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$5: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse)
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code[] values()
io.grpc.internal.DnsNameResolver$JdkAddressResolver: io.grpc.internal.DnsNameResolver$JdkAddressResolver[] values()
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction[] values()
com.google.android.datatransport.runtime.EventInternal: EventInternal()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: boolean mayLaunchUrl(android.net.Uri,android.os.Bundle,java.util.List)
com.google.android.material.transformation.FabTransformationBehavior: FabTransformationBehavior()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager: void open(android.app.Activity,java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void setUserContentController(com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: void postMessageForInAppWebView(com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.managers.LifeCycleManager: void onPaused()
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: java.util.Map getAllSchedules(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: void setMethod(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar: com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar fromMap(java.util.Map)
com.google.firebase.firestore.FirestoreRegistrar: FirestoreRegistrar()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$12: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getCollapseIcon()
com.google.android.material.chip.Chip: void setChipStrokeColor(android.content.res.ColorStateList)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void removeAllBoolean(android.content.Context,java.lang.String)
androidx.media.AudioAttributesImplApi26: AudioAttributesImplApi26()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: NotificationChannelDetails()
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: java.lang.String getCertificatePath()
io.flutter.view.TextureRegistry$SurfaceProducer: void release()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialDao: URLCredentialDao(com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper)
androidx.webkit.WebViewClientCompat: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
androidx.recyclerview.widget.RecyclerView: void setItemViewCacheSize(int)
androidx.collection.ArraySet: ArraySet()
com.google.android.material.card.MaterialCardView: void setCheckable(boolean)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.timepicker.ClockHandView: ClockHandView(android.content.Context,android.util.AttributeSet)
me.carda.awesome_notifications.core.managers.ScheduleManager: boolean isPreciseAlarmGloballyAllowed(android.content.Context)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedPreScroll(android.view.View,int,int,int[],int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScroll(android.view.View,int,int,int,int)
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(java.lang.CharSequence)
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: SQLiteSchedulesDB(android.content.Context,java.lang.String)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void detachAwesomeNotificationsPlugin(android.content.Context)
me.carda.awesome_notifications.DartDismissedNotificationReceiver: void initializeExternalPlugins(android.content.Context)
androidx.appcompat.view.menu.ListMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.appcompat.app.AppCompatActivity: void onPanelClosed(int,android.view.Menu)
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler: ContentBlockerHandler()
me.carda.awesome_notifications.core.managers.RepositoryManager: java.lang.Boolean remove(android.content.Context,java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder: byte[] doInBackground()
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: void setDefPackage(java.lang.String)
com.google.android.gms.measurement.AppMeasurement: long generateEventId()
androidx.core.app.ActivityCompat$Api21Impl: void postponeEnterTransition(android.app.Activity)
androidx.appcompat.widget.SearchView: void setSearchableInfo(android.app.SearchableInfo)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readSoundInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onReceivedServerTrustAuthRequest(com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustChallenge,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedServerTrustAuthRequestCallback)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getOrCreateOutlinedDropDownMenuBackground()
me.carda.awesome_notifications.core.managers.ChannelGroupManager: java.lang.Boolean removeChannelGroup(android.content.Context,java.lang.String)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCloseIcon()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationX(float)
com.google.gson.internal.bind.TypeAdapters$22: TypeAdapters$22()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$4: boolean nonNullSuccess(java.lang.Object)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter name(java.lang.String)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$4: void defaultBehaviour(java.lang.Object)
androidx.core.view.ViewCompat$Api29Impl: void setSystemGestureExclusionRects(android.view.View,java.util.List)
androidx.core.content.FileProvider: java.lang.Object[] copyOf(java.lang.Object[],int)
kotlin.jvm.internal.PropertyReference2: PropertyReference2()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfy$zza: zzfy$zza()
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener$1: WebMessageListener$1(com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorErrorColor()
me.carda.awesome_notifications.core.AwesomeNotifications: void dispose()
com.google.firebase.firestore.MetadataChanges: com.google.firebase.firestore.MetadataChanges valueOf(java.lang.String)
io.flutter.view.TextureRegistry$SurfaceProducer: void scheduleFrame()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onSessionEnded(boolean)
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.lang.Object clone()
com.pichillilorenzo.flutter_inappwebview_android.types.URLAuthenticationChallenge: java.lang.String toString()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getTracingController()
android.support.v4.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.models.ScheduleMode: boolean useAllowWhileIdle()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
androidx.core.widget.TextViewCompat$Api28Impl: android.text.PrecomputedText$Params getTextMetricsParams(android.widget.TextView)
com.google.android.material.search.SearchBar: void setHint(java.lang.CharSequence)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialDao: java.util.List getAllByProtectionSpaceId(java.lang.Long)
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthenticationChallenge: com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential getProposedCredential()
org.chromium.support_lib_boundary.ProfileBoundaryInterface: android.webkit.WebStorage getWebStorage()
me.carda.awesome_notifications.core.AwesomeNotifications: boolean cancelSchedulesByChannelKey(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: void setContentEncoding(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setPrefixTextAppearance(int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingInitProvider: FlutterFirebaseMessagingInitProvider()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$2: boolean nonNullSuccess(java.lang.Integer)
com.google.android.material.chip.Chip: java.lang.CharSequence getCloseIconContentDescription()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertChallenge: java.util.Map toMap()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: int longCount(android.content.Context,java.lang.String)
me.carda.awesome_notifications.core.utils.IntegerUtils: IntegerUtils()
com.google.android.gms.internal.measurement.zzjn: com.google.android.gms.internal.measurement.zzjn[] values()
com.google.android.gms.internal.measurement.zzfy$zzh$zza: zzfy$zzh$zza()
me.carda.awesome_notifications.core.models.NotificationModel: me.carda.awesome_notifications.core.models.NotificationModel ClonePush()
com.dexterous.flutterlocalnotifications.models.NotificationStyle: NotificationStyle(java.lang.String,int)
com.google.android.material.appbar.AppBarLayout: void setLiftableOverrideEnabled(boolean)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodCheckPermissions(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.enumerators.NotificationImportance: int toAndroidPriority(me.carda.awesome_notifications.core.enumerators.NotificationImportance)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: java.lang.String getDescription()
androidx.activity.ComponentActivity: void onNewIntent(android.content.Intent)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$3: void defaultBehaviour(java.lang.Object)
androidx.lifecycle.SavedStateHandlesVM: SavedStateHandlesVM()
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceChanged(long,int,int)
androidx.constraintlayout.widget.ConstraintHelper: int[] getReferencedIds()
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getSubtitle()
com.google.android.material.chip.Chip: void setCheckable(boolean)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.FlutterEngine getAttachedFlutterEngine()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownVerticalOffset(int)
com.google.android.material.chip.Chip: void setCloseIconHovered(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$6: InAppWebViewChromeClient$6(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsResult)
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: int hashCode()
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance[] values()
com.google.android.gms.internal.measurement.zzfr$zza$zzf: zzfr$zza$zzf()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void onProgressChanged(android.webkit.WebView,int)
com.google.gson.internal.$Gson$Types: $Gson$Types()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setRemoteHistory(me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
io.perfmark.PerfMark: PerfMark()
com.google.android.material.textfield.TextInputLayout: void setMaxWidthResource(int)
me.carda.awesome_notifications.core.enumerators.LogLevel: me.carda.awesome_notifications.core.enumerators.LogLevel getSafeEnum(java.lang.String)
androidx.core.app.ComponentActivity: androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$GenericWorkItem dequeueWork()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateRepeatIntervalMilliseconds(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$13: void onClick(android.view.View)
com.google.firebase.analytics.FirebaseAnalytics: java.lang.String getFirebaseInstanceId()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getOffscreenPreRaster()
me.carda.awesome_notifications.core.AwesomeNotifications: void notifyAwesomeEvent(java.lang.String,java.util.Map)
com.google.gson.stream.JsonReader: long nextLong()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodGetInitialAction(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$PermissionRequestCallback: WebViewChannelDelegate$PermissionRequestCallback()
androidx.appcompat.widget.Toolbar: void setLogoDescription(java.lang.CharSequence)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: WebMessageCompatExt(java.lang.Object,int,java.util.List)
androidx.transition.TransitionValues: TransitionValues()
com.pichillilorenzo.flutter_inappwebview_android.Util: com.pichillilorenzo.flutter_inappwebview_android.Util$PrivateKeyAndCertificates loadPrivateKeyAndCertificate(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin,java.lang.String,java.lang.String,java.lang.String)
com.google.firestore.v1.WriteRequest$Builder: WriteRequest$Builder()
androidx.appcompat.widget.SearchView$SearchAutoComplete: SearchView$SearchAutoComplete(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.FitWindowsFrameLayout: FitWindowsFrameLayout(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessage: void dispose()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNextNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.firestore.admin.v1.Index$Builder: Index$Builder()
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance getSafeEnum(java.lang.String)
me.carda.awesome_notifications.core.managers.ActionManager: me.carda.awesome_notifications.core.models.returnedData.ActionReceived getActionByKey(android.content.Context,java.lang.Integer)
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: boolean equals(java.lang.Object)
me.carda.awesome_notifications.core.models.NotificationCalendarModel: me.carda.awesome_notifications.core.models.NotificationCalendarModel fromJson(java.lang.String)
com.google.firestore.v1.StructuredQuery$Order: StructuredQuery$Order()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager: java.lang.String getMimeType(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setQueryFromAppProcessEnabled(android.view.accessibility.AccessibilityNodeInfo,android.view.View,boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: java.lang.Long getId()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.util.LinkedHashSet getUserOnlyScriptAsList()
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: java.lang.String toString()
me.leolin.shortcutbadger.impl.NewHtcHomeBadger: NewHtcHomeBadger()
com.google.android.material.appbar.AppBarLayout: void setOrientation(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onPageCommitVisible(java.lang.String)
com.google.android.material.button.MaterialButton: void setBackground(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: void setStrokeColor(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: void dispose()
com.google.gson.internal.sql.SqlTimestampTypeAdapter$1: SqlTimestampTypeAdapter$1()
me.carda.awesome_notifications.core.threads.NotificationSender: me.carda.awesome_notifications.core.models.NotificationModel showNotification(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,android.content.Intent)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.PorterDuff$Mode getButtonIconTintMode()
com.google.android.material.chip.Chip: void setCheckableResource(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(int)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl(androidx.core.view.WindowInsetsCompat)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnLongClickListener(android.view.View$OnLongClickListener)
me.carda.awesome_notifications.core.databases.SqLiteCypher: void initializeEncryption(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest fromMap(java.util.Map)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus[] values()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager: void startInAppBrowserActivity(android.app.Activity,android.os.Bundle)
com.google.android.gms.internal.measurement.zzms: com.google.android.gms.internal.measurement.zzms[] values()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$6: void error(java.lang.String,java.lang.String,java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks$1: void onActivityDestroyed(android.app.Activity)
com.pichillilorenzo.flutter_inappwebview_android.ISettings: java.util.Map getRealSettings(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorStateList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: float getCloseIconEndPadding()
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState valueOf(java.lang.String)
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error[] values()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void goForward()
androidx.constraintlayout.widget.Placeholder: android.view.View getContent()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getRippleColor()
androidx.constraintlayout.widget.Constraints: androidx.constraintlayout.widget.ConstraintSet getConstraintSet()
androidx.core.content.ContextCompat$Api26Impl: android.content.ComponentName startForegroundService(android.content.Context,android.content.Intent)
androidx.datastore.preferences.PreferencesProto$PreferenceMap: PreferencesProto$PreferenceMap()
androidx.datastore.preferences.protobuf.MapFieldLite: MapFieldLite()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.appcompat.widget.ActionBarContextView: void setTitleOptional(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setCheckable(boolean)
com.google.android.gms.internal.measurement.zzfy$zzg$zza: zzfy$zzg$zza()
com.google.android.material.appbar.AppBarLayout: int getMinimumHeightForVisibleOverlappingContent()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType getResourceTypeFromUrl(com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt)
me.carda.awesome_notifications.core.utils.CalendarUtils: java.lang.String calendarToString(java.util.Calendar)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(int)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: java.util.Map toMap()
com.google.android.material.card.MaterialCardView: float getProgress()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateSource: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateSource valueOf(java.lang.String)
androidx.lifecycle.ViewModelProvider$OnRequeryFactory: ViewModelProvider$OnRequeryFactory()
com.pichillilorenzo.flutter_inappwebview_android.R$string: R$string()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Map getWebViewMediaIntegrityApiOverrideRules()
com.google.gson.stream.JsonReader: int peekKeyword()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler: android.webkit.WebResourceResponse checkUrl(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setVisibility(int)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode)
com.google.firestore.v1.MapValue: MapValue()
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus valueOf(java.lang.String)
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender: void enqueueSilentAction(android.content.Context,java.lang.String,me.carda.awesome_notifications.core.models.returnedData.ActionReceived,android.content.Intent)
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: java.util.Map getScheduleById(android.content.Context,java.lang.Integer)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setLocusId(android.app.Notification$Builder,java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.Notification createNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.gms.internal.measurement.zzjr: zzjr()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView: FlutterWebView(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin,android.content.Context,java.lang.Object,java.util.HashMap)
com.pichillilorenzo.flutter_inappwebview_android.types.CreateWindowAction: int hashCode()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotificationMatchingDateComponents(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
me.carda.awesome_notifications.FlutterBitmapUtils: void extendCapabilities()
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: java.util.Map toMap()
me.carda.awesome_notifications.core.models.AbstractModel: java.lang.Float getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,java.lang.Float)
dev.fluttercommunity.plus.connectivity.ConnectivityPlugin: ConnectivityPlugin()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: CredentialDatabase(com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper,com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceDao,com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialDao)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons[] values()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipStrokeColor()
me.carda.awesome_notifications.core.managers.DisplayedManager: boolean commitChanges(android.content.Context)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager: MeasurementManager()
androidx.browser.customtabs.CustomTabsServiceConnection: android.content.Context getApplicationContext()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(int)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout$1: PullToRefreshLayout$1(com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout)
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D: boolean equals(java.lang.Object)
androidx.webkit.TracingController: TracingController()
androidx.appcompat.widget.AppCompatButton: int[] getAutoSizeTextAvailableSizes()
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: double milsToPixels(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$4: void error(java.lang.String,java.lang.String,java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: void setCustomTabsCallback(androidx.browser.customtabs.CustomTabsCallback)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityDestroyed(android.app.Activity)
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D: double getHeight()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$2: InAppWebViewManager$2(com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.measurement.zzii: zzii()
me.carda.awesome_notifications.core.managers.RepositoryManager: java.lang.Boolean set(android.content.Context,java.lang.String,java.lang.String,me.carda.awesome_notifications.core.models.AbstractModel)
androidx.appcompat.resources.Compatibility$Api21Impl: android.graphics.drawable.Drawable createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.List getResourceType()
androidx.core.view.WindowInsetsCompat$Impl: int hashCode()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintList(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void showInterstitial(boolean)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate: void didChangeProgress(int)
io.grpc.okhttp.NegotiationType: io.grpc.okhttp.NegotiationType[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void access$301(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient,android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)
androidx.fragment.app.FragmentActivity: androidx.loader.app.LoaderManager getSupportLoaderManager()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getErrorContentDescription()
com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType: boolean equalsValue(int)
com.google.android.material.chip.Chip: void setCloseIconStartPadding(float)
me.carda.awesome_notifications.core.managers.BadgeManager: void setGlobalBadgeCounter(android.content.Context,int)
me.carda.awesome_notifications.core.managers.ChannelGroupManager: me.carda.awesome_notifications.core.models.NotificationChannelGroupModel getChannelGroupByKey(android.content.Context,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings: java.util.Map toMap()
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder[] values()
com.google.common.collect.Ordering: Ordering()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo,boolean)
com.google.firestore.v1.DocumentDelete: DocumentDelete()
io.grpc.NameResolverProvider: NameResolverProvider()
androidx.appcompat.widget.LinearLayoutCompat: int getShowDividers()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$2: boolean onSingleTapUp(android.view.MotionEvent)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$6: InAppWebView$6(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime: boolean equalsValue(int)
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: java.lang.String getId()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void applyGrouping(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy: java.util.ArrayList yoinkDisplayListeners(android.hardware.display.DisplayManager)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setSettingsText(android.app.Notification$Builder,java.lang.CharSequence)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture,java.lang.Runnable)
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: java.lang.String toString()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(int)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: boolean removeUserOnlyScript(com.pichillilorenzo.flutter_inappwebview_android.types.UserScript)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: AwesomeNotificationsPlugin()
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$16: void defaultBehaviour(java.lang.Boolean)
androidx.activity.ComponentActivity: void removeOnTrimMemoryListener(androidx.core.util.Consumer)
me.carda.awesome_notifications.core.managers.DefaultsManager: java.lang.Long getSilentCallbackDispatcher(android.content.Context)
com.google.gson.stream.JsonReader: void skipQuotedValue(char)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.util.LinkedHashSet getUserOnlyScriptsAt(com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime)
com.google.android.material.internal.BaselineLayout: BaselineLayout(android.content.Context,android.util.AttributeSet)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: android.graphics.Matrix getLocalMatrix()
com.google.android.gms.internal.measurement.zzkw: zzkw()
me.carda.awesome_notifications.core.managers.RepositoryManager: RepositoryManager(me.carda.awesome_notifications.core.utils.StringUtils,java.lang.String,java.lang.Class,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler: void setRuleList(java.util.List)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: android.view.WindowInsets onProgress(android.view.WindowInsets,java.util.List)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void areNotificationsEnabled(io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$1: void onCustomTabsDisconnected()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,android.webkit.WebResourceRequest)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigTextStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$18: void onReceiveValue(java.lang.Object)
androidx.appcompat.widget.AppCompatToggleButton: void setAllCaps(boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: java.lang.String getId()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScroll(android.view.View,int,int,int,int,int)
me.carda.awesome_notifications.core.AwesomeNotifications: boolean captureNotificationActionFromActivity(android.app.Activity)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void rescheduleNotifications(android.content.Context)
com.google.protobuf.UnknownFieldSetLite: UnknownFieldSetLite()
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState[] values()
io.flutter.view.FlutterCallbackInformation: FlutterCallbackInformation(java.lang.String,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void setAllIntValues(android.content.Context,java.lang.String,java.util.Map)
com.google.firebase.messaging.FirebaseMessagingRegistrar: FirebaseMessagingRegistrar()
com.pichillilorenzo.flutter_inappwebview_android.types.CreateWindowAction: CreateWindowAction(com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest,boolean,boolean,boolean,int,boolean)
com.google.android.material.chip.ChipGroup: java.util.List getCheckedChipIds()
me.carda.awesome_notifications.core.enumerators.NotificationImportance: NotificationImportance(java.lang.String,int,java.lang.String)
me.carda.awesome_notifications.core.models.NotificationContentModel: boolean registerDisplayedEvent(me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings parse(java.util.Map)
androidx.appcompat.app.AppCompatActivity: void onPostCreate(android.os.Bundle)
me.carda.awesome_notifications.core.utils.JsonUtils: java.util.List jsonToList(org.json.JSONArray)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setShortcut(android.view.MenuItem,char,char,int,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult: java.lang.String getExtra()
androidx.core.app.AppOpsManagerCompat$Api29Impl: android.app.AppOpsManager getSystemService(android.content.Context)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: androidx.window.extensions.area.ExtensionWindowAreaPresentation getRearDisplayPresentation()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks$1: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$5: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.webkit.WebViewClientCompat: WebViewClientCompat()
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannelChannelDelegate: WebMessageChannelChannelDelegate(com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel,io.flutter.plugin.common.MethodChannel)
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: void setCancelButtonTitle(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: java.lang.String printCurrentPage(com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings)
com.google.android.datatransport.runtime.backends.TransportBackendDiscovery: TransportBackendDiscovery()
me.carda.awesome_notifications.core.AwesomeNotifications: void startForegroundService(me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.enumerators.ForegroundStartMode,me.carda.awesome_notifications.core.enumerators.ForegroundServiceType)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onRelationshipValidationResult(int,android.net.Uri,boolean)
com.google.android.material.search.SearchView: void setupWithSearchBar(com.google.android.material.search.SearchBar)
me.carda.awesome_notifications.core.threads.NotificationSender: void send(android.content.Context,me.carda.awesome_notifications.core.builders.NotificationBuilder,me.carda.awesome_notifications.core.enumerators.NotificationSource,me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle,me.carda.awesome_notifications.core.models.NotificationModel,android.content.Intent,me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler)
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender: void sendBroadcastNotificationCreated(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
com.google.firebase.firestore.core.LimboDocumentChange$Type: com.google.firebase.firestore.core.LimboDocumentChange$Type valueOf(java.lang.String)
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: java.lang.String getSafeName()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: android.media.Image acquireLatestImage()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImages()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRRect(int,int,int,int,float[])
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$4: void run()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: ContentBlockerTriggerResourceType(java.lang.String,int,java.lang.String)
com.google.android.material.search.SearchView: android.view.Window getActivityWindow()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setPublicVersion(android.app.Notification$Builder,android.app.Notification)
com.google.firestore.v1.Document$Builder: Document$Builder()
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem fromMap(java.util.Map)
androidx.appcompat.widget.AppCompatButton: void setFilters(android.text.InputFilter[])
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void evaluateJavascript(java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld,android.webkit.ValueCallback)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startProgressAlphaMaxAnimation()
com.google.android.material.search.SearchView: void setElevation(float)
com.google.firebase.firestore.proto.MaybeDocument$Builder: MaybeDocument$Builder()
com.google.android.material.button.MaterialButton: void setCornerRadiusResource(int)
com.google.gson.internal.bind.TypeAdapters$29: TypeAdapters$29()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: boolean equals(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.PrintJobInfoExt: java.util.Map toMap()
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageResponseCallback(long,int,java.nio.ByteBuffer,int)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void commit(android.content.Context)
com.google.android.material.appbar.AppBarLayout: void setTargetElevation(float)
me.carda.awesome_notifications.core.managers.PermissionManager: boolean gotoControlsDnDPage(android.content.Context)
androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat: WebMessagePortCompat$WebMessageCallbackCompat()
me.carda.awesome_notifications.core.AwesomeNotifications: void notifyNotificationEvent(java.lang.String,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
androidx.core.view.ViewCompat$Api21Impl: void stopNestedScroll(android.view.View)
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: int hashCode()
com.google.android.material.search.SearchView: void setText(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void getHitTestResult(android.webkit.ValueCallback)
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleMargin()
com.google.firestore.bundle.BundledQuery: BundledQuery()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$4: boolean nonNullSuccess(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: java.util.Map getCustomSettings()
me.carda.awesome_notifications.core.models.NotificationModel: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setTicker(me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedRippleColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatCheckedTextView: void setCheckMarkDrawable(int)
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int)
androidx.activity.ComponentActivity: kotlin.Unit lambda$new$0()
me.carda.awesome_notifications.core.utils.CalendarUtils: java.util.TimeZone getLocalTimeZone()
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State valueOf(java.lang.String)
com.google.android.material.button.MaterialButtonToggleGroup: java.util.List getCheckedButtonIds()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: FlutterLocalNotificationsPlugin()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: void openCustomTab(android.app.Activity,androidx.browser.customtabs.CustomTabsIntent,android.net.Uri,java.util.Map,android.net.Uri,int)
com.google.android.material.textfield.TextInputLayout: void setEndIconVisible(boolean)
me.carda.awesome_notifications.core.managers.ScheduleManager: java.util.List listScheduledIdsFromChannel(android.content.Context,java.lang.String)
com.google.android.material.chip.Chip: void setBackground(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$1: boolean nonNullSuccess(java.lang.Object)
me.carda.awesome_notifications.core.managers.ChannelGroupManager: void cancelAllChannelGroup(android.content.Context)
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType[] values()
me.carda.awesome_notifications.core.models.NotificationCalendarModel: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void onPermissionRequestCanceled(android.webkit.PermissionRequest)
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: android.database.sqlite.SQLiteDatabase getWritableDatabase(android.content.Context)
androidx.appcompat.widget.AppCompatButton: void setSupportAllCaps(boolean)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void updateActionButton(byte[],java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void takeScreenshot(java.util.Map,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.ComponentActivity: void onCreate(android.os.Bundle)
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
androidx.core.app.JobIntentService: void onHandleWork(android.content.Intent)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter()
androidx.appcompat.widget.SearchView: void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener)
io.flutter.embedding.android.FlutterTextureView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetHeight()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: void setTextLocales(android.widget.TextView,android.os.LocaleList)
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol[] values()
com.google.android.material.card.MaterialCardView: android.graphics.drawable.Drawable getCheckedIcon()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setBlockNetworkLoads(boolean)
com.google.android.gms.internal.measurement.zzdm: zzdm()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: void removeAllUserOnlyScripts()
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocusedResource(int)
com.google.android.material.search.SearchView: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
me.carda.awesome_notifications.core.models.NotificationChannelModel: boolean equals(java.lang.Object)
me.carda.awesome_notifications.core.threads.NotificationSender: void whenComplete(me.carda.awesome_notifications.core.models.returnedData.NotificationReceived,me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException)
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessageWithPayload(java.lang.reflect.InvocationHandler)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setLegacyRequestDisallowInterceptTouchEventEnabled(boolean)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager: void dispose()
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void injectCSSCode(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.os.Parcelable onSaveInstanceState()
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: java.lang.String getLabel()
com.google.android.material.chip.Chip: void setChipBackgroundColor(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api29Impl: void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status valueOf(java.lang.String)
com.google.android.gms.cloudmessaging.CloudMessagingReceiver: CloudMessagingReceiver()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawableResource(int)
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: boolean isAllow()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate: void didFailNavigation(java.lang.String,int,java.lang.String)
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void beginAdUnitExposure(java.lang.String,long)
com.google.gson.stream.JsonReader: java.lang.String toString()
me.carda.awesome_notifications.core.broadcasters.receivers.NotificationActionReceiver: void onReceiveBroadcastEvent(android.content.Context,android.content.Intent)
com.google.android.material.checkbox.MaterialCheckBox: void setCheckedState(int)
com.google.android.material.chip.Chip: void setChipMinHeight(float)
com.google.protobuf.ProtoSyntax: com.google.protobuf.ProtoSyntax[] values()
androidx.appcompat.widget.ContentFrameLayout: ContentFrameLayout(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate$ShouldInterceptRequestCallback: ServiceWorkerChannelDelegate$ShouldInterceptRequestCallback()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void onCloseWindow(android.webkit.WebView)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper: CredentialDatabaseHelper(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: boolean isTriggerDelayed()
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.common.MessageCodec getCreateArgsCodec()
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconEnabledResource(int)
com.google.android.datatransport.runtime.scheduling.jobscheduling.AlarmManagerSchedulerBroadcastReceiver: AlarmManagerSchedulerBroadcastReceiver()
me.carda.awesome_notifications.core.AwesomeNotifications: void onNewLifeCycleEvent(me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int,int)
com.google.android.material.datepicker.DayViewDecorator: DayViewDecorator()
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: InAppWebView(android.content.Context,android.util.AttributeSet,int)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings: java.util.Map toMap()
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void startRearDisplaySession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
com.dexterous.flutterlocalnotifications.models.RepeatInterval: RepeatInterval(java.lang.String,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: double deltaMillis(long)
androidx.appcompat.widget.AppCompatButton: void setBackgroundResource(int)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.CharSequence getSubtitle(android.media.MediaDescription)
com.google.common.collect.ImmutableList: ImmutableList()
me.carda.awesome_notifications.core.externalLibs.CronExpression: void buildExpression(java.lang.String)
com.google.gson.internal.bind.TypeAdapters$14: TypeAdapters$14()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void clearAllCache()
com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse: java.lang.String toString()
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel$2: void onMessage(androidx.webkit.WebMessagePortCompat,androidx.webkit.WebMessageCompat)
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertChallenge: java.lang.String toString()
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getStartIconContentDescription()
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase[] values()
com.google.android.material.internal.NavigationMenuItemView: void setTitle(java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void requestFullScreenIntentPermission(com.dexterous.flutterlocalnotifications.PermissionRequestListener)
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State valueOf(java.lang.String)
com.google.android.material.search.SearchView: void setUseWindowInsetsController(boolean)
androidx.constraintlayout.widget.ConstraintLayout: void setMaxHeight(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean handlesCropAndRotation()
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthenticationChallenge: boolean equals(java.lang.Object)
me.carda.awesome_notifications.core.managers.ScheduleManager: me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB _getPrimitiveDB(android.content.Context)
io.flutter.plugins.webviewflutter.PigeonApiHttpAuthHandler$Companion: PigeonApiHttpAuthHandler$Companion()
androidx.appcompat.widget.ViewStubCompat: int getLayoutResource()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$8: void run()
androidx.window.layout.util.ContextCompatHelperApi30: androidx.core.view.WindowInsetsCompat currentWindowInsets(android.content.Context)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void setWebMessageCallback(java.lang.reflect.InvocationHandler,android.os.Handler)
me.carda.awesome_notifications.core.threads.NotificationThread: java.lang.Object doInBackground()
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: void closeForInAppWebView(java.lang.Integer,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.threads.NotificationScheduler: void _removeFromAlarm(android.content.Context,java.lang.Integer)
com.google.android.material.timepicker.RadialViewGroup: RadialViewGroup(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.strictmode.FragmentStrictMode$Flag: androidx.fragment.app.strictmode.FragmentStrictMode$Flag[] values()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodGetDrawableData(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.util.Map getLongsStartingWith(android.content.Context,java.lang.String,java.lang.String)
me.carda.awesome_notifications.DartDismissedNotificationReceiver: DartDismissedNotificationReceiver()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$18: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate: void shouldInterceptRequest(com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt,com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate$ShouldInterceptRequestCallback)
com.pichillilorenzo.flutter_inappwebview_android.ISettings: java.util.Map toMap()
com.google.android.material.chip.Chip: void setTextEndPaddingResource(int)
com.google.android.material.internal.FlowLayout: void setSingleLine(boolean)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void prepareView()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$2: void onRelationshipValidationResult(int,android.net.Uri,boolean,android.os.Bundle)
com.google.android.material.appbar.AppBarLayout: com.google.android.material.shape.MaterialShapeDrawable getMaterialShapeBackground()
androidx.core.view.MenuItemCompat$Api26Impl: int getAlphabeticModifiers(android.view.MenuItem)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$1: ChromeCustomTabsActivity$1(com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity,com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity)
com.google.android.datatransport.cct.internal.ExternalPrivacyContext: ExternalPrivacyContext()
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType[] values()
androidx.appcompat.widget.ViewStubCompat: ViewStubCompat(android.content.Context,android.util.AttributeSet)
androidx.core.widget.TextViewCompat$Api28Impl: void setFirstBaselineToTopHeight(android.widget.TextView,int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCheckMarkTintMode()
me.carda.awesome_notifications.core.utils.ThreadUtils: me.carda.awesome_notifications.core.utils.ThreadUtils getInstance()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onSecondaryPointerUp(android.view.MotionEvent)
com.google.android.material.textfield.TextInputLayout: void setMinEms(int)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logHealthData(int,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.dynamic.IObjectWrapper)
com.google.firestore.v1.Write: Write()
com.google.android.datatransport.runtime.SendRequest: SendRequest()
com.google.android.material.chip.Chip: void setCloseIconTintResource(int)
io.grpc.internal.CompositeReadableBuffer: CompositeReadableBuffer()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void prepareCustomTabs()
androidx.core.view.ViewCompat$Api21Impl: boolean isNestedScrollingEnabled(android.view.View)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void reload()
io.flutter.embedding.engine.FlutterJNI: void onVsync(long,long,long)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getWillSuppressErrorPage()
me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType: java.lang.String getSafeName()
me.carda.awesome_notifications.R: R()
me.carda.awesome_notifications.core.externalLibs.CronExpression: int findNextWhiteSpace(int,java.lang.String)
me.carda.awesome_notifications.DartBackgroundService: DartBackgroundService()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getSystemWindowInsets()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodCancelAllNotifications(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$Source: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$Source valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt shouldInterceptRequest(com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt)
me.carda.awesome_notifications.core.managers.RepositoryManager: java.lang.Boolean removeAll(android.content.Context,java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setIconPadding(int)
io.flutter.plugins.webviewflutter.FileChooserMode: io.flutter.plugins.webviewflutter.FileChooserMode[] values()
androidx.appcompat.app.AppCompatActivity: void closeOptionsMenu()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterTextColor()
androidx.appcompat.widget.SearchView: void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: java.lang.String getAction(android.media.session.PlaybackState$CustomAction)
androidx.activity.ComponentActivity: android.content.Context peekAvailableContext()
androidx.appcompat.widget.AppCompatSpinner: android.graphics.drawable.Drawable getPopupBackground()
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forOngoingCall(android.app.Person,android.app.PendingIntent)
com.google.android.material.internal.ForegroundLinearLayout: void setForeground(android.graphics.drawable.Drawable)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeBroadcastReceiver: void initializeExternalPlugins(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2: boolean nonNullSuccess(java.lang.Object)
me.carda.awesome_notifications.core.models.NotificationChannelGroupModel: me.carda.awesome_notifications.core.models.NotificationChannelGroupModel fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: void setUrl(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: SwipeRefreshLayout(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener()
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportImageTintList()
com.google.android.material.chip.Chip: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$4: void error(java.lang.String,java.lang.String,java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$5: WebViewChannelDelegate$5(com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void deferredComponentInstallFailure(int,java.lang.String,boolean)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$2: void extraCallback(java.lang.String,android.os.Bundle)
me.carda.awesome_notifications.core.models.AbstractModel: java.lang.Byte getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,java.lang.Byte)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onHideContextMenu()
com.google.android.gms.internal.measurement.zzfy$zzb: zzfy$zzb()
androidx.appcompat.widget.SearchView: androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter()
androidx.core.content.ContextCompat$Api33Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
androidx.appcompat.widget.Toolbar$Api33Impl: android.window.OnBackInvokedCallback newOnBackInvokedCallback(java.lang.Runnable)
com.google.android.material.appbar.AppBarLayout: void setElevation(float)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void requestDisallowInterceptTouchEvent(boolean)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void finishSpinner(float)
androidx.appcompat.widget.LinearLayoutCompat: void setWeightSum(float)
com.google.gson.stream.JsonReader: void beginObject()
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigManager: ProcessGlobalConfigManager(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void unregisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeResources(int[])
me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException: java.lang.String getCode()
com.google.android.material.button.MaterialButton: int getTextHeight()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: java.lang.String getVariationsHeader()
androidx.appcompat.widget.SearchView: void setIconifiedByDefault(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeWidth(float)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: int floatCount(android.content.Context,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse fromMap(java.util.Map)
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event[] values()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo getRevealInfo()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding valueOf(java.lang.String)
io.flutter.plugins.webviewflutter.WebViewProxyApi$WebViewPlatformView: android.webkit.WebChromeClient getWebChromeClient()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.util.Map toMap()
io.flutter.embedding.android.FlutterView: android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider()
androidx.core.view.ViewCompat$Api28Impl: boolean isScreenReaderFocusable(android.view.View)
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebViewManager: void run(java.lang.String,java.util.HashMap)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPasswordVisibilityToggleContentDescription()
me.carda.awesome_notifications.core.utils.BooleanUtils: me.carda.awesome_notifications.core.utils.BooleanUtils getInstance()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: void removeAllPluginScripts()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.google.android.material.chip.Chip: void setCheckedIconVisible(int)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenClass()
me.carda.awesome_notifications.core.AwesomeNotifications: boolean cancelNotificationsByChannelKey(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: java.lang.String toString()
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle: java.lang.String getSafeName()
com.google.firestore.v1.Precondition$Builder: Precondition$Builder()
me.carda.awesome_notifications.core.models.NotificationButtonModel: NotificationButtonModel()
me.carda.awesome_notifications.core.managers.DefaultsManager: void setAwesomeExtensionClassName(android.content.Context,java.lang.Class)
androidx.appcompat.app.AppCompatActivity: android.view.View findViewById(int)
com.google.firestore.v1.Precondition: Precondition()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo: NetworkConnectionInfo()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionType: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionType[] values()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.MaterialShapeDrawable getBoxBackground()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleContentDescription(java.lang.CharSequence)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority valueOf(java.lang.String)
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State[] values()
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifierBase(int)
io.flutter.view.AccessibilityViewEmbedder: void copyAccessibilityFields(android.view.accessibility.AccessibilityNodeInfo,android.view.accessibility.AccessibilityNodeInfo)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$6: void onReceiveValue(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceCreated(long,android.view.Surface)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void clearMeasurementEnabled(long)
com.google.protobuf.FieldSet: FieldSet()
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.constraintlayout.widget.Guideline: void setVisibility(int)
com.google.gson.internal.Excluder: Excluder()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onRequestPermissionsResult(int,java.lang.String[],int[])
com.dexterous.flutterlocalnotifications.models.NotificationDetails: java.util.ArrayList readMessages(java.util.ArrayList)
com.pichillilorenzo.flutter_inappwebview_android.types.SslErrorExt: SslErrorExt(int,android.net.http.SslCertificate,java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void attachToGLContext(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$4$1: InAppWebView$4$1(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$4)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int getHeight()
com.google.firebase.firestore.model.MutableDocument$DocumentType: com.google.firebase.firestore.model.MutableDocument$DocumentType[] values()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.TrustedWebActivity: void prepareCustomTabs()
me.carda.awesome_notifications.core.managers.StatusBarManager: void updateActiveMapIntoPreferences(android.content.SharedPreferences$Editor,java.lang.String,java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$1: void defaultBehaviour(java.lang.Boolean)
androidx.recyclerview.widget.RecyclerView: void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator)
androidx.fragment.app.FragmentActivity: void onCreate(android.os.Bundle)
me.carda.awesome_notifications.core.models.NotificationMessageModel: me.carda.awesome_notifications.core.models.NotificationButtonModel fromJson(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportImageTintList()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsMenuItem: CustomTabsMenuItem(int,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.drawable.Drawable getContentBackground()
com.google.android.gms.internal.measurement.zzhu: zzhu()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onStartNestedScroll(android.view.View,android.view.View,int)
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.Object getUtcTimeZone()
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: boolean equals(java.lang.Object)
com.google.android.gms.measurement.internal.zznt: com.google.android.gms.measurement.internal.zznt[] values()
io.flutter.embedding.engine.FlutterJNI: void setAsyncWaitForVsyncDelegate(io.flutter.embedding.engine.FlutterJNI$AsyncWaitForVsyncDelegate)
me.carda.awesome_notifications.core.exceptions.ExceptionFactory: me.carda.awesome_notifications.core.exceptions.ExceptionFactory getInstance()
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents[] values()
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(boolean)
com.google.android.material.chip.Chip: void setCloseIconSizeResource(int)
io.flutter.embedding.engine.FlutterJNI: void ensureNotAttachedToNative()
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getContentDescription(android.view.MenuItem)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateX(float)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodGetLocalization(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.chip.Chip: void setCheckedIconEnabledResource(int)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setEpicenterBounds(android.widget.PopupWindow,android.graphics.Rect)
androidx.recyclerview.widget.RecyclerView: void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener)
androidx.activity.ComponentActivity: void onPanelClosed(int,android.view.Menu)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$7: InAppWebView$7(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void animateOffsetToCorrectPosition(int,android.view.animation.Animation$AnimationListener)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution$Signal: CrashlyticsReport$Session$Event$Application$Execution$Signal()
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: void setRealm(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$CreateWindowCallback: java.lang.Boolean decodeResult(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.view.Menu getMenu()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper$ConnectionCallback: void onCustomTabsDisconnected()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo,long)
com.google.gson.stream.JsonReader: void skipUnquotedValue()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void disposeWebMessageListeners()
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: java.lang.String getUsername()
com.google.firestore.admin.v1.Index$IndexField$Builder: Index$IndexField$Builder()
me.carda.awesome_notifications.core.models.AbstractModel: long[] getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,long[])
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getSimpleItemSelectedRippleColor()
me.carda.awesome_notifications.core.externalLibs.CronExpression: boolean isLeapYear(int)
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: void whenComplete(java.lang.Object,me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException)
io.flutter.embedding.engine.FlutterJNI: boolean nativeGetIsSoftwareRenderingEnabled()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void close(io.flutter.plugin.common.MethodChannel$Result)
androidx.constraintlayout.widget.ConstraintLayout: int getMaxHeight()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: android.database.sqlite.SQLiteDatabase getWritableDatabase(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.Util: java.security.cert.X509Certificate getX509CertFromSslCertHack(android.net.http.SslCertificate)
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.NotificationLayout getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.NotificationLayout)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: InputAwareWebView(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.CheckableImageButton: void setCheckable(boolean)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonInitializeResponse: GeneratedAndroidFirebaseCore$PigeonInitializeResponse()
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setBackground(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.types.CreateWindowAction: void setWindowId(int)
me.carda.awesome_notifications.core.utils.CalendarUtils: java.util.Calendar calendarFromString(java.lang.String,java.util.TimeZone)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.firebase.iid.FirebaseInstanceIdReceiver: FirebaseInstanceIdReceiver()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateType: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateType[] values()
com.google.firebase.firestore.FirestoreRegistrar: com.google.firebase.firestore.FirestoreMultiDbComponent lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$16: void onReceiveValue(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void shouldOverrideUrlLoading(com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ShouldOverrideUrlLoadingCallback)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceContract: URLProtectionSpaceContract()
io.flutter.embedding.engine.FlutterJNI: void onRenderingStopped()
me.carda.awesome_notifications.core.models.DefaultsModel: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
kotlin.time.DurationUnit: kotlin.time.DurationUnit valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient: InAppWebViewRenderProcessClient()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsConfirmCallback: WebViewChannelDelegate$JsConfirmCallback()
me.carda.awesome_notifications.core.externalLibs.CronExpression: void addToSet(int,int,int,int)
com.google.android.gms.internal.measurement.zzfr$zzf: zzfr$zzf()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onRenderProcessResponsive(java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$RenderProcessResponsiveCallback)
androidx.fragment.app.FragmentManagerState: FragmentManagerState()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: android.graphics.Point access$000(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Number)
com.google.android.material.chip.Chip: float getChipMinHeight()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColor(int)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.util.LinkedHashSet getPluginScriptAsList()
org.chromium.support_lib_boundary.JsReplyProxyBoundaryInterface: void postMessage(java.lang.String)
com.google.firestore.v1.CommitResponse: CommitResponse()
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getNavigationIcon()
com.google.android.gms.internal.measurement.zzfy$zzk$zza: zzfy$zzk$zza()
android.support.v4.media.session.MediaControllerCompat$Callback: MediaControllerCompat$Callback()
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: int hashCode()
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.FlutterWebViewFactory: FlutterWebViewFactory(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
androidx.media.AudioAttributesImplApi21: AudioAttributesImplApi21()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getActions(android.media.session.PlaybackState)
com.google.android.material.appbar.AppBarLayout: android.graphics.drawable.Drawable getStatusBarForeground()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void setWebMessageChannels(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: int access$202(int)
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings: com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings parse(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ShouldInterceptRequestCallback: java.lang.Object decodeResult(java.lang.Object)
com.google.firestore.v1.StructuredQuery$CollectionSelector: StructuredQuery$CollectionSelector()
com.google.android.datatransport.cct.CctBackendFactory: CctBackendFactory()
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams valueOf(java.lang.String)
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: LifecycleDispatcher$DispatcherActivityCallback()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMinimumSessionDuration(long)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State[] values()
androidx.webkit.WebViewRenderProcessClient: WebViewRenderProcessClient()
me.carda.awesome_notifications.core.managers.BadgeManager: boolean isBadgeNumberingAllowed(android.content.Context)
me.carda.awesome_notifications.core.utils.TimeZoneUtils: TimeZoneUtils()
me.carda.awesome_notifications.core.threads.NotificationScheduler: void schedule(android.content.Context,me.carda.awesome_notifications.core.enumerators.NotificationSource,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingReceiver: FlutterFirebaseMessagingReceiver()
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: java.lang.String getConfirmButtonTitle()
me.carda.awesome_notifications.core.utils.CalendarUtils: java.util.TimeZone getUtcTimeZone()
androidx.core.app.NotificationCompat$MessagingStyle$Api28Impl: android.app.Notification$MessagingStyle createMessagingStyle(android.app.Person)
com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView$-CC: void $default$onInputConnectionLocked(com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$GeolocationPermissionsShowPromptCallback: com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse decodeResult(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate getChannelDelegate()
com.google.android.material.search.SearchView: android.widget.TextView getSearchPrefix()
com.google.android.material.chip.Chip: void setCloseIconContentDescription(java.lang.CharSequence)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void reset()
com.google.firebase.firestore.core.Filter: Filter()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopEnd()
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.util.Map toMap()
androidx.appcompat.widget.ScrollingTabContainerView: void setContentHeight(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean isAnimationRunning(android.view.animation.Animation)
androidx.fragment.app.FragmentActivity: void lambda$init$1(android.content.res.Configuration)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.google.android.material.search.SearchView: void setUpBackgroundViewElevationOverlay(float)
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean)
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController: void findNext(boolean)
me.carda.awesome_notifications.core.models.NotificationModel: void validate(android.content.Context)
me.carda.awesome_notifications.core.utils.CalendarUtils: java.util.Calendar calendarFromString(java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void postMessageToMainFrame(java.lang.reflect.InvocationHandler,android.net.Uri)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$2: void onPostMessage(java.lang.String,android.os.Bundle)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setCanScheduleExactNotifications(io.flutter.plugin.common.MethodChannel$Result)
androidx.constraintlayout.widget.Guideline: void setGuidelineEnd(int)
com.google.protobuf.GeneratedMessageLite$ExtendableMessage: GeneratedMessageLite$ExtendableMessage()
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver getInstance()
me.carda.awesome_notifications.core.threads.NotificationScheduler: void scheduleNotificationWithAlarmManager(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,java.util.Calendar,android.app.PendingIntent)
androidx.activity.ComponentActivity: void onConfigurationChanged(android.content.res.Configuration)
com.google.android.material.chip.Chip: void setChipIconSizeResource(int)
com.google.gson.stream.JsonWriter: void newline()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setUsage(android.media.AudioAttributes$Builder,int)
com.google.android.material.card.MaterialCardView: int getContentPaddingBottom()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getRippleColor()
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void createPromptDialog(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsPromptResult,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(int)
io.grpc.util.OutlierDetectionLoadBalancerProvider: OutlierDetectionLoadBalancerProvider()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$3: void onReceiveValue(java.lang.Integer)
com.google.android.material.card.MaterialCardView: int getStrokeColor()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: void removePluginScriptsByGroupName(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void access$000(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient,android.webkit.WebView,java.lang.String,java.util.Map,boolean)
com.google.android.material.animation.MotionSpec: MotionSpec()
com.google.android.material.textfield.TextInputLayout: void setErrorContentDescription(java.lang.CharSequence)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$18: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse)
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: void setLabel(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$1: InAppWebViewClientCompat$1(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat,com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,java.lang.String,java.util.Map,boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getMaxUserProperties(java.lang.String,com.google.android.gms.internal.measurement.zzdo)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setState(android.media.session.PlaybackState$Builder,int,long,float,long)
kotlin.jvm.internal.ReflectionFactory: ReflectionFactory()
com.google.android.material.chip.Chip: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(android.view.accessibility.AccessibilityNodeInfo,int,int)
io.flutter.view.TextureRegistry$SurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness[] values()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
me.carda.awesome_notifications.DartScheduledNotificationReceiver: void initializeExternalPlugins(android.content.Context)
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments: AccessibilityViewCommand$SetSelectionArguments()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setSessionTimeoutDuration(long)
me.carda.awesome_notifications.core.enumerators.ActionType: me.carda.awesome_notifications.core.enumerators.ActionType[] $values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColorResource(int)
androidx.appcompat.widget.AppCompatEditText: AppCompatEditText(android.content.Context,android.util.AttributeSet)
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
me.carda.awesome_notifications.core.models.NotificationCrontabModel: java.lang.String toJson()
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: me.carda.awesome_notifications.core.models.NotificationLocalizationModel fromMap(java.util.Map)
io.flutter.plugins.firebase.firestore.utils.PigeonParser: PigeonParser()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$5: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse)
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundResource(int)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType getType()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void openFileChooser(android.webkit.ValueCallback)
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver: RecyclerView$AdapterDataObserver()
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager: void dispose()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10: InAppWebView$10(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld,android.webkit.ValueCallback,java.lang.String)
com.google.android.gms.internal.measurement.zzfy$zzo$zza: zzfy$zzo$zza()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void stopNestedScroll(int)
androidx.constraintlayout.widget.ConstraintLayout: int getOptimizationLevel()
androidx.appcompat.widget.AppCompatEditText: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: void setAction(java.lang.Integer)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.view.ViewGroup getRootView()
me.carda.awesome_notifications.core.utils.BitmapUtils: android.graphics.Bitmap getBitmapFromUrl(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: boolean removeUserOnlyScriptAt(int,com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime)
com.google.android.material.textfield.TextInputLayout: void setTypeface(android.graphics.Typeface)
com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult: com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult fromWebViewHitTestResult(android.webkit.WebView$HitTestResult)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$1: void defaultBehaviour(java.lang.Integer)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: AppCompatTextViewAutoSizeHelper$Impl23()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnimationMode()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: boolean addUserOnlyScript(com.pichillilorenzo.flutter_inappwebview_android.types.UserScript)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: int getState(android.media.session.PlaybackState)
me.carda.awesome_notifications.core.threads.NotificationSender: void whenComplete(java.lang.Object,me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: void setContentEncoding(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel createCompatWebMessageChannel()
com.pichillilorenzo.flutter_inappwebview_android.types.SyncBaseCallbackResultImpl: void defaultBehaviour(java.lang.Object)
androidx.constraintlayout.helper.widget.Flow: void setPaddingRight(int)
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: void setBody(byte[])
androidx.coordinatorlayout.widget.CoordinatorLayout: androidx.core.view.WindowInsetsCompat getLastWindowInsets()
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate$SyncShouldInterceptRequestCallback: ServiceWorkerChannelDelegate$SyncShouldInterceptRequestCallback()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleY(float)
me.carda.awesome_notifications.core.managers.StatusBarManager: boolean isFirstActiveOnChannelKey(java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setOrientation(int)
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType[] values()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution: CrashlyticsReport$Session$Event$Application$Execution()
com.google.firebase.messaging.ProtoEncoderDoNotUse: ProtoEncoderDoNotUse()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelAllNotifications(io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError)
io.flutter.plugins.firebase.analytics.FlutterFirebaseAppRegistrar: java.util.List getComponents()
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannelChannelDelegate: void dispose()
com.google.android.material.textfield.TextInputLayout: void setErrorTextColor(android.content.res.ColorStateList)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void registerIn(android.app.Activity)
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerManager: TracingControllerManager(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
me.carda.awesome_notifications.core.models.AbstractModel: java.lang.String templateToJson()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments: AccessibilityViewCommand$ScrollToPositionArguments()
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelStore getViewModelStore()
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType[] values()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
io.flutter.embedding.engine.FlutterOverlaySurface: android.view.Surface getSurface()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$CallJsHandlerCallback: java.lang.Object decodeResult(java.lang.Object)
androidx.fragment.app.FragmentActivity: void markFragmentsCreated()
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: java.lang.String getDefType()
com.google.android.material.textfield.TextInputLayout: void setErrorIconTintMode(android.graphics.PorterDuff$Mode)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$1: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse)
me.carda.awesome_notifications.core.managers.StatusBarManager: boolean getIsNotificationActiveWithoutServices(int)
me.carda.awesome_notifications.core.externalLibs.CronExpression: CronExpression(me.carda.awesome_notifications.core.externalLibs.CronExpression)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivity()
androidx.fragment.app.FragmentActivity: void onPostResume()
io.flutter.plugin.platform.PlatformViewWrapper: void setTouchProcessor(io.flutter.embedding.android.AndroidTouchProcessor)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$2: void onReceiveValue(java.lang.String)
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle: NotificationLifeCycle(java.lang.String,int,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt: java.lang.String getDescription()
org.chromium.support_lib_boundary.WebResourceRequestBoundaryInterface: boolean isRedirect()
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertChallenge: java.lang.String[] getKeyTypes()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: void setPorts(java.util.List)
io.flutter.plugins.firebase.crashlytics.FlutterFirebaseAppRegistrar: java.util.List getComponents()
androidx.core.app.ComponentActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
androidx.appcompat.widget.SearchView: int getImeOptions()
com.google.android.material.chip.Chip: void setCloseIconEndPaddingResource(int)
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebViewManager: void dispose()
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact valueOf(java.lang.String)
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction valueOf(java.lang.String)
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.SessionGenerator getComponents$lambda$1(com.google.firebase.components.ComponentContainer)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: DateTimeComponents(java.lang.String,int)
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.Date getTimeAfter(java.util.Date)
com.google.android.gms.internal.measurement.zzfo$zzc$zza: zzfo$zzc$zza()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[])
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreScroll(int,int,int[],int[],int)
me.carda.awesome_notifications.core.AwesomeNotifications: boolean dismissNotification(java.lang.Integer)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float getDistance(android.widget.EdgeEffect)
androidx.recyclerview.widget.RecyclerView$OnScrollListener: RecyclerView$OnScrollListener()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void removeAllInt(android.content.Context,java.lang.String)
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale addLikelySubtags(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationY(float)
androidx.core.app.Person$Api28Impl: android.app.Person toAndroidPerson(androidx.core.app.Person)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBar getSupportActionBar()
androidx.emoji2.text.flatbuffer.MetadataItem: MetadataItem()
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType[] values()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: android.view.accessibility.AccessibilityNodeInfo$ExtraRenderingInfo getExtraRenderingInfo(android.view.accessibility.AccessibilityNodeInfo)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getAttributionBehavior()
me.carda.awesome_notifications.core.broadcasters.receivers.RefreshSchedulesReceiver: RefreshSchedulesReceiver()
com.google.android.material.appbar.MaterialToolbar: void setLogoScaleType(android.widget.ImageView$ScaleType)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$2: void onClick(android.content.DialogInterface,int)
me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType: me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType getSafeEnum(java.lang.String)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void endRearDisplaySession()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setRotation(float)
me.carda.awesome_notifications.core.managers.StatusBarManager: void removeIndexActiveNotificationGroup(android.content.SharedPreferences$Editor,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: boolean equals(java.lang.Object)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: ProcessLifecycleOwner$attach$1(androidx.lifecycle.ProcessLifecycleOwner)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: java.lang.String getReasonPhrase()
com.google.android.material.textfield.TextInputLayout: int getMaxEms()
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$1: void execute(java.lang.Runnable)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodesTranslateBounds(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect,android.view.accessibility.AccessibilityNodeInfo)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$1: void defaultBehaviour(java.lang.Object)
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum: StructuredAggregationQuery$Aggregation$Sum()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: CustomSchemeResponse(byte[],java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.utils.SerializableUtils: SerializableUtils(me.carda.awesome_notifications.core.utils.EnumUtils,me.carda.awesome_notifications.core.utils.StringUtils,me.carda.awesome_notifications.core.utils.CalendarUtils,me.carda.awesome_notifications.core.utils.TimeZoneUtils)
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.Date getNextInvalidTimeAfter(java.util.Date)
com.google.android.material.shape.EdgeTreatment: EdgeTreatment()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$17: void onReceiveValue(java.lang.Object)
com.google.firebase.firestore.FieldValue: FieldValue()
me.carda.awesome_notifications.core.managers.BadgeManager: int incrementGlobalBadgeCounter(android.content.Context)
me.carda.awesome_notifications.core.managers.LostEventsManager: java.util.Map recoverNotificationActions(android.content.Context)
androidx.appcompat.widget.ButtonBarLayout: ButtonBarLayout(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
android.support.v4.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
com.google.firestore.admin.v1.Index$QueryScope: com.google.firestore.admin.v1.Index$QueryScope[] values()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemGestureInsets(androidx.core.graphics.Insets)
androidx.recyclerview.widget.RecyclerView: int getBaseline()
androidx.appcompat.widget.AppCompatButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$12: void defaultBehaviour(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getHintTextColor()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: java.util.List getPorts()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$19: InAppWebView$19(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,android.webkit.ValueCallback)
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: void setHorizontalDpi(int)
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$7: void onReceiveValue(java.lang.Object)
androidx.core.text.ICUCompat$Api21Impl: java.lang.String getScript(java.util.Locale)
com.google.android.material.textfield.TextInputLayout: void setEnabled(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29()
androidx.core.view.WindowInsetsCompat$Impl28: int hashCode()
me.carda.awesome_notifications.core.models.NotificationIntervalModel: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: boolean containsPluginScript(com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript)
me.carda.awesome_notifications.core.utils.ListUtils: boolean listHasDuplicates(java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$3: void onReceiveValue(java.lang.Boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$1: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout: void prepare()
me.carda.awesome_notifications.core.managers.ScheduleManager: void cancelAllSchedules(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType: boolean equalsValue(java.lang.String)
androidx.appcompat.app.AppCompatActivity: android.content.Intent getSupportParentActivityIntent()
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: boolean equals(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt: java.lang.String toString()
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionChannelDelegate: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.firestore.v1.WriteResult: WriteResult()
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: FlutterRenderer$ImageReaderSurfaceProducer(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityPaused(com.google.android.gms.dynamic.IObjectWrapper,long)
com.pichillilorenzo.flutter_inappwebview_android.WebViewFeatureManager: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings: com.pichillilorenzo.flutter_inappwebview_android.ISettings parse(java.util.Map)
com.dexterous.flutterlocalnotifications.models.ScheduleMode: ScheduleMode(java.lang.String,int)
me.carda.awesome_notifications.core.models.NotificationChannelGroupModel: java.lang.String toJson()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(android.content.res.ColorStateList)
com.google.android.gms.common.api.internal.zzd: zzd()
com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType: com.google.firebase.firestore.remote.WatchChange$WatchTargetChangeType[] values()
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getBackgroundDrawable()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addRemoteInput(android.app.Notification$Action$Builder,android.app.RemoteInput)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout: void dispose()
androidx.collection.ArrayMap: ArrayMap()
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher()
androidx.lifecycle.ViewModel: ViewModel()
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings$DirectoryBasePaths: ProcessGlobalConfigSettings$DirectoryBasePaths()
me.carda.awesome_notifications.core.managers.LifeCycleManager: void onDestroyed()
com.google.android.datatransport.runtime.backends.BackendResponse: BackendResponse()
me.carda.awesome_notifications.core.threads.NotificationThread: java.lang.Object onPostExecute(java.lang.Object)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setUserAgentMetadataFromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingSettings: java.util.Map getRealSettings(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel$1: void onReceiveValue(java.lang.String)
com.google.android.material.button.MaterialButton: void setStrokeWidth(int)
com.google.firebase.firestore.MetadataChanges: com.google.firebase.firestore.MetadataChanges[] values()
me.carda.awesome_notifications.core.managers.LifeCycleManager: void startListeners()
androidx.webkit.WebViewClientCompat: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,androidx.webkit.WebResourceErrorCompat)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$3: void onGreatestScrollPercentageIncreased(int,android.os.Bundle)
com.google.android.material.timepicker.ChipTextInputComboView: ChipTextInputComboView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager)
com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase: com.google.firestore.v1.DocumentTransform$FieldTransform$TransformTypeCase valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$15: InAppWebView$15(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
com.google.android.material.button.MaterialButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings$DirectoryBasePaths: java.util.Map getRealSettings(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void destroy()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void setInFullscreen(boolean)
com.google.android.material.button.MaterialButton: void setChecked(boolean)
com.google.gson.stream.JsonReader: void setLenient(boolean)
me.carda.awesome_notifications.core.managers.BadgeManager: boolean isBadgeDeviceGloballyAllowed(android.content.Context)
com.google.common.collect.ImmutableCollection: ImmutableCollection()
me.carda.awesome_notifications.core.utils.HtmlUtils: HtmlUtils()
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$3: void onReceiveValue(java.lang.Object)
com.google.firebase.installations.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
androidx.constraintlayout.widget.VirtualLayout: void setElevation(float)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ServiceConnectionCallback: void onServiceConnected(androidx.browser.customtabs.CustomTabsClient)
com.google.android.gms.internal.measurement.zzgd$zzd$zza: com.google.android.gms.internal.measurement.zzgd$zzd$zza[] values()
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: java.lang.String getPolicyName()
io.grpc.Context: Context()
androidx.appcompat.app.AppCompatActivity: boolean dispatchKeyEvent(android.view.KeyEvent)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void onPermissionRequest(android.webkit.PermissionRequest)
io.grpc.LoadBalancer$Helper: LoadBalancer$Helper()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodDismissNotification(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.android.FlutterImageView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
androidx.appcompat.widget.AppCompatButton: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: void notifyNotificationEvent(java.lang.String,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
me.carda.awesome_notifications.core.utils.CalendarUtils: CalendarUtils()
com.google.android.material.chip.Chip: void setChipStartPadding(float)
com.google.gson.stream.JsonReader: java.lang.String nextName()
com.google.android.material.card.MaterialCardView: int getCheckedIconMargin()
com.google.protobuf.BooleanArrayList: BooleanArrayList()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$1: void onReceiveValue(java.lang.Object)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.util.Map getFloatsStartingWith(android.content.Context,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.managers.StatusBarManager: void dismissNotification(android.content.Context,java.lang.Integer)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumWidth()
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory valueOf(java.lang.String)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodGetBadgeCounter(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCustomSize(int)
androidx.core.view.VelocityTrackerCompat$Api34Impl: boolean isAxisSupported(android.view.VelocityTracker,int)
io.flutter.view.TextureRegistry$ImageConsumer: android.media.Image acquireLatestImage()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void maybeWaitOnFence(android.media.Image)
io.grpc.internal.ClientTransportFactory$ClientTransportOptions: ClientTransportFactory$ClientTransportOptions()
me.carda.awesome_notifications.core.enumerators.NotificationCategory: java.lang.String getSafeName()
androidx.appcompat.widget.AbsActionBarView: void setVisibility(int)
androidx.datastore.preferences.protobuf.Writer$FieldOrder: androidx.datastore.preferences.protobuf.Writer$FieldOrder valueOf(java.lang.String)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void setClearCachedDataIntervalMs(int)
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: void setProtectionSpaceId(java.lang.Long)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$4: void onReceiveValue(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.net.Uri retrieveSoundResourceUri(android.content.Context,java.lang.String,com.dexterous.flutterlocalnotifications.models.SoundSource)
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.lang.String getExpressionSummary()
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroup(android.app.NotificationManager,android.app.NotificationChannelGroup)
com.google.firebase.firestore.core.LimboDocumentChange$Type: com.google.firebase.firestore.core.LimboDocumentChange$Type[] values()
me.carda.awesome_notifications.core.managers.DisplayedManager: boolean saveDisplayed(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar: void setLayout(com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: void initJsInstance()
com.google.firestore.v1.TransactionOptions$ReadOnly: TransactionOptions$ReadOnly()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void clearProxyOverride(java.lang.Runnable,java.util.concurrent.Executor)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundColor(int)
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void adjustFloatingContextMenuPosition()
androidx.activity.ComponentActivity: java.lang.Object onRetainCustomNonConfigurationInstance()
com.pichillilorenzo.flutter_inappwebview_android.types.BaseCallbackResultImpl: void defaultBehaviour(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: boolean isInFullscreen()
com.google.android.material.textfield.TextInputLayout: void setStartIconTintList(android.content.res.ColorStateList)
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat[] values()
com.google.android.material.snackbar.BaseTransientBottomBar$Behavior: BaseTransientBottomBar$Behavior()
me.carda.awesome_notifications.DartNotificationActionReceiver: void initializeExternalPlugins(android.content.Context)
com.google.android.material.chip.Chip: void setBackgroundResource(int)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setMediaId(android.media.MediaDescription$Builder,java.lang.String)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(float,float)
androidx.constraintlayout.widget.ConstraintLayout: ConstraintLayout(android.content.Context,android.util.AttributeSet)
com.google.firebase.analytics.FirebaseAnalytics: void setCurrentScreen(android.app.Activity,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: java.util.Map getWebMessageChannels()
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection[] values()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void removeWebMessageListener(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void handlePlatformMessageResponse(int,java.nio.ByteBuffer)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void hide()
androidx.appcompat.app.AppCompatActivity: void onSupportContentChanged()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: android.os.Handler getHandler()
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.Date getTimeBefore(java.util.Date)
me.carda.awesome_notifications.core.AwesomeNotifications: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle getApplicationLifeCycle()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShadowPaddingEnabled(boolean)
com.google.gson.stream.JsonWriter: int peek()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivitySaveInstanceState(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzdo,long)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemWindowInsets()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void removeAllLong(android.content.Context,java.lang.String)
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.lang.String getCronExpression()
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSpeculativeLoadingStatus(int)
com.google.firebase.sessions.DataCollectionState: com.google.firebase.sessions.DataCollectionState[] values()
com.google.protobuf.GeneratedMessageLite: GeneratedMessageLite()
androidx.core.widget.PopupWindowCompat$Api23Impl: void setWindowLayoutType(android.widget.PopupWindow,int)
me.carda.awesome_notifications.core.utils.MediaUtils: java.lang.String cleanMediaPath(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean sendNotificationPayloadMessage(android.content.Intent)
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void onCreate(android.os.Bundle)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getGravityTextAlignment()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleEnabled(boolean)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerTrigger(android.net.Uri,kotlin.coroutines.Continuation)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: boolean equals(java.lang.Object)
com.google.firebase.firestore.model.MutableDocument$DocumentState: com.google.firebase.firestore.model.MutableDocument$DocumentState valueOf(java.lang.String)
io.grpc.ManagedChannelRegistry: ManagedChannelRegistry()
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
com.google.android.material.chip.Chip: void setChecked(boolean)
com.google.firebase.FirebaseCommonKtxRegistrar: java.util.List getComponents()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodCancelSchedulesByGroupKey(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: java.util.List access$102(java.util.List)
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int)
com.google.android.datatransport.cct.internal.LogResponse: LogResponse()
androidx.appcompat.widget.AppCompatImageButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Map getUserAgentMetadataMap()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$1: boolean nonNullSuccess(java.lang.Object)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalGap(int)
me.carda.awesome_notifications.core.AwesomeNotifications: boolean isApplicationInDebug(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void nativeUnregisterTexture(long,long)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.graphics.Bitmap getIconBitmap(android.media.MediaDescription)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsConfirmCallback: java.lang.Object decodeResult(java.lang.Object)
com.google.android.material.search.SearchView: void setStatusBarSpacerEnabledInternal(boolean)
androidx.appcompat.widget.LinearLayoutCompat: float getWeightSum()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings parse(java.util.Map)
com.google.android.material.internal.CheckableImageButton: void setChecked(boolean)
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets dispatchApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.pichillilorenzo.flutter_inappwebview_android.R$attr: R$attr()
me.carda.awesome_notifications.core.managers.DisplayedManager: boolean removeAllDisplayed(android.content.Context)
com.google.android.gms.internal.measurement.zzfy$zzh: zzfy$zzh()
androidx.activity.Api34Impl: int swipeEdge(android.window.BackEvent)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readChannelInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt: void setUrl(java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Action$Builder createBuilder(android.graphics.drawable.Icon,java.lang.CharSequence,android.app.PendingIntent)
com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView: android.view.View getView()
androidx.appcompat.widget.LinearLayoutCompat: int getOrientation()
com.google.firebase.firestore.core.EventManager$ListenerRemovalAction: com.google.firebase.firestore.core.EventManager$ListenerRemovalAction valueOf(java.lang.String)
me.carda.awesome_notifications.core.services.AutoCancelService: AutoCancelService()
com.google.android.material.chip.Chip: void setShowMotionSpecResource(int)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar: java.util.List getClickableIDs()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
me.carda.awesome_notifications.core.utils.JsonUtils: java.util.Map jsonToMap(org.json.JSONObject)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.core.view.ViewCompat$Api21Impl: float getElevation(android.view.View)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalBias(float)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.ChannelDelegateImpl: void dispose()
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: boolean isHasGesture()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.media.MediaDescription build(android.media.MediaDescription$Builder)
me.leolin.shortcutbadger.impl.AdwHomeBadger: AdwHomeBadger()
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getFinalClippingPaths()
me.carda.awesome_notifications.core.utils.TimeZoneUtils: java.lang.String timeZoneToString(java.util.TimeZone)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeSetSemanticsEnabled(long,boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: java.lang.String toString()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: android.os.LocaleList localeManagerGetApplicationLocales(java.lang.Object)
me.carda.awesome_notifications.DartBackgroundExecutor: void access$100(me.carda.awesome_notifications.DartBackgroundExecutor,io.flutter.plugin.common.BinaryMessenger)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$1: MyCookieManager$1(com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.bottomappbar.BottomAppBar: void setMenuAlignmentMode(int)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setTimeoutAfter(android.app.Notification$Builder,long)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void scrollBy(java.lang.Integer,java.lang.Integer,java.lang.Boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: byte[] getData()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVisibility(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: WebViewChannelDelegate(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,io.flutter.plugin.common.MethodChannel)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: boolean containsUserOnlyScript(com.pichillilorenzo.flutter_inappwebview_android.types.UserScript)
com.google.android.material.button.MaterialButton: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatRadioButton: void setFilters(android.text.InputFilter[])
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(long)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$2: InAppWebView$2(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
androidx.appcompat.widget.AppCompatCheckBox: void setEmojiCompatEnabled(boolean)
me.leolin.shortcutbadger.impl.SonyHomeBadger: SonyHomeBadger()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: boolean setBoolean(android.content.Context,java.lang.String,java.lang.String,boolean)
me.carda.awesome_notifications.core.managers.ChannelGroupManager: void saveChannelGroup(android.content.Context,me.carda.awesome_notifications.core.models.NotificationChannelGroupModel)
me.carda.awesome_notifications.core.builders.NotificationBuilder: androidx.core.app.NotificationCompat$Builder getNotificationBuilderFromModel(android.content.Context,android.content.Intent,me.carda.awesome_notifications.core.models.NotificationChannelModel,me.carda.awesome_notifications.core.models.NotificationModel)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getNoBackupFilesDir(android.content.Context)
io.flutter.embedding.engine.loader.FlutterLoader: FlutterLoader()
androidx.core.content.FileProvider: java.lang.String removeTrailingSlash(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$17: InAppWebViewChromeClient$17(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.GeolocationPermissions$Callback,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$2: ChromeCustomTabsActivity$2(com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity)
com.google.android.material.button.MaterialButtonToggleGroup: void setSingleSelection(int)
androidx.core.view.ViewCompat$Api29Impl: android.view.View$AccessibilityDelegate getAccessibilityDelegate(android.view.View)
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform[] values()
com.google.firestore.v1.Value: Value()
androidx.core.app.JobIntentService: void setInterruptIfStopped(boolean)
androidx.appcompat.widget.Toolbar: android.graphics.drawable.Drawable getLogo()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$4: InAppWebViewClient$4(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient,com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,android.webkit.ClientCertRequest,android.webkit.WebView)
com.google.android.material.textfield.TextInputLayout: int getBoxCollapsedPaddingTop()
androidx.appcompat.widget.LinearLayoutCompat: void setHorizontalGravity(int)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundColor(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType[] values()
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType[] values()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLargeIconInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
com.google.android.material.search.SearchView: androidx.appcompat.widget.Toolbar getToolbar()
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: ActionReceived()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setVisibility(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
com.google.firebase.firestore.model.mutation.Overlay: Overlay()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView$1: InputAwareWebView$1(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView,android.view.View)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setStableInsets(androidx.core.graphics.Insets)
com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus: com.google.firebase.installations.local.PersistedInstallation$RegistrationStatus valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void markDirty()
com.pichillilorenzo.flutter_inappwebview_android.R$xml: R$xml()
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments: AccessibilityViewCommand$SetTextArguments()
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: void setContentDisposition(java.lang.String)
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: int getPriority()
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType[] values()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: boolean removeAll(android.content.Context,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy: void onPreWebViewInitialization(android.hardware.display.DisplayManager)
androidx.appcompat.widget.ActionBarContextView: void setTitle(java.lang.CharSequence)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider)
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate$SyncHandleCallback: WebViewAssetLoaderExt$PathHandlerExtChannelDelegate$SyncHandleCallback()
me.carda.awesome_notifications.core.enumerators.ActionType: ActionType(java.lang.String,int,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy$1: void onDisplayRemoved(int)
androidx.appcompat.widget.ViewStubCompat: void setLayoutInflater(android.view.LayoutInflater)
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType valueOf(java.lang.String)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getAdjustedDefault()
com.google.firebase.datatransport.TransportRegistrar: java.util.List getComponents()
me.carda.awesome_notifications.core.AwesomeNotifications: me.carda.awesome_notifications.core.AwesomeNotifications unsubscribeOnActionEvents(me.carda.awesome_notifications.core.listeners.AwesomeActionEventListener)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: void updateContentWorldsCreatorScript()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItemSelectedColor(int)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState valueOf(java.lang.String)
me.carda.awesome_notifications.core.AwesomeNotifications: void notifyAwesomeEvent(java.lang.String,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void onHideCustomView()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getPasswordVisibilityToggleDrawable()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void loadFile(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetStartWithNavigation()
com.google.android.gms.internal.measurement.zzgd$zzd: zzgd$zzd()
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$3: void execute(java.lang.Runnable)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType[] values()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$6: void onClick(android.content.DialogInterface,int)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$CustomAttribute: CrashlyticsReport$CustomAttribute()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setupAllowWhileIdleAlarm(com.dexterous.flutterlocalnotifications.models.NotificationDetails,android.app.AlarmManager,long,android.app.PendingIntent)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZ(float)
androidx.browser.customtabs.CustomTabsCallback: void onMessageChannelReady(android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: void setPrecomputedText(androidx.core.text.PrecomputedTextCompat)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onShouldOverrideUrlLoading(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,java.lang.String,java.lang.String,java.util.Map,boolean,boolean,boolean)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction fromMap(java.util.Map)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProxyController()
androidx.webkit.ProcessGlobalConfig: ProcessGlobalConfig()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSlingshotDistance(int)
androidx.emoji2.text.EmojiCompatInitializer: EmojiCompatInitializer()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$5: void onReceiveValue(java.lang.Object)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$1: FlutterLocalNotificationsPlugin$1()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onGreatestScrollPercentageIncreased(int)
androidx.core.view.ViewCompat$Api21Impl: void setTransitionName(android.view.View,java.lang.String)
androidx.appcompat.widget.Toolbar: void setBackInvokedCallbackEnabled(boolean)
com.google.gson.stream.JsonReader: void endArray()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodGetNextDate(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.Util: java.lang.String normalizeIPv6(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void updateJavaAssetManager(android.content.res.AssetManager,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void generateConfigDelta_locale(android.content.res.Configuration,android.content.res.Configuration,android.content.res.Configuration)
com.google.android.material.search.SearchBar: float getCornerSize()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getAppInstanceId()
androidx.appcompat.widget.AppCompatImageButton: void setImageURI(android.net.Uri)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean isRefreshing()
me.carda.awesome_notifications.core.managers.LifeCycleManager: void onCreated()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: void unbindCustomTabsService(android.app.Activity)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: android.webkit.CookieManager getCookieManager()
me.carda.awesome_notifications.core.threads.NotificationScheduler: void cancelSchedulesByGroupKey(android.content.Context,java.lang.String)
androidx.emoji2.text.EmojiCompat$InitCallback: EmojiCompat$InitCallback()
androidx.recyclerview.widget.RecyclerView: void setScrollState(int)
com.google.android.material.card.MaterialCardView: void setBackgroundInternal(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeSafariBrowserManager: void open(android.app.Activity,java.lang.String,java.lang.String,java.util.HashMap,java.lang.String,java.util.ArrayList,java.util.HashMap,java.util.HashMap,java.util.HashMap,java.util.List,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.enumerators.MediaSource: me.carda.awesome_notifications.core.enumerators.MediaSource[] $values()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertServiceWorkerSettings(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void didUpdateVisitedHistory(java.lang.String)
com.google.firebase.firestore.FirestoreRegistrar: java.util.List getComponents()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsMenuItem: com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsMenuItem fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStarted(com.google.android.gms.dynamic.IObjectWrapper,long)
com.google.android.material.internal.NavigationMenuItemView: void setIconSize(int)
androidx.core.content.ContextCompat$Api23Impl: java.lang.String getSystemServiceName(android.content.Context,java.lang.Class)
androidx.core.view.ViewCompat$Api28Impl: java.lang.CharSequence getAccessibilityPaneTitle(android.view.View)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodSetChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks: NoHistoryCustomTabsActivityCallbacks(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
com.google.protobuf.FieldType: com.google.protobuf.FieldType valueOf(java.lang.String)
androidx.browser.customtabs.CustomTabsCallback: CustomTabsCallback()
me.carda.awesome_notifications.core.utils.MapUtils: MapUtils()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonQueryParameters: GeneratedAndroidFirebaseFirestore$PigeonQueryParameters()
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: boolean isEmpty()
me.carda.awesome_notifications.core.threads.NotificationThread: void runOnBackgroundThread()
androidx.lifecycle.LegacySavedStateHandleController$OnRecreation: LegacySavedStateHandleController$OnRecreation()
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setStartIconOnClickListener(android.view.View$OnClickListener)
com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse: java.lang.Integer getAction()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: java.lang.Boolean acceptsImages(java.lang.String)
okio.Segment: Segment()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: void setContentType(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: java.util.Map toMap()
com.google.gson.internal.bind.DateTypeAdapter: DateTypeAdapter()
androidx.appcompat.view.menu.ExpandedMenuView: int getWindowAnimations()
androidx.core.app.ComponentActivity: boolean dispatchKeyShortcutEvent(android.view.KeyEvent)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$15: void onCancel(android.content.DialogInterface)
androidx.core.widget.CompoundButtonCompat$Api23Impl: android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.chip.Chip: float getChipIconSize()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void getContentWidth(android.webkit.ValueCallback)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$3: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onFormResubmission(android.webkit.WebView,android.os.Message,android.os.Message)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap getBitmap()
androidx.datastore.preferences.protobuf.CodedOutputStream: CodedOutputStream()
com.google.gson.internal.bind.SerializationDelegatingTypeAdapter: SerializationDelegatingTypeAdapter()
com.pichillilorenzo.flutter_inappwebview_android.types.ChannelDelegateImpl: ChannelDelegateImpl(io.flutter.plugin.common.MethodChannel)
androidx.core.app.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
com.google.android.gms.internal.measurement.zzfr$zzh: zzfr$zzh()
me.carda.awesome_notifications.core.models.NotificationScheduleModel: java.lang.Boolean hasNextValidDate()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebResourceError(java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.ContentFrameLayout: void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener)
kotlin.time.DurationUnit: kotlin.time.DurationUnit[] values()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: java.lang.CharSequence getErrorMessage(android.media.session.PlaybackState)
io.flutter.embedding.engine.FlutterJNI: void onEndFrame()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onDownloadStartRequest(com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: void addAwesomeActionEvent(android.content.Context,java.lang.String,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorScheme(int[])
androidx.cardview.widget.CardView: void setCardElevation(float)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt shouldInterceptRequest(com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onShouldOverrideUrlLoading(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,java.lang.String,java.lang.String,java.util.Map,boolean,boolean,boolean)
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.Object areNotificationsGloballyAllowed()
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatImageButton: android.content.res.ColorStateList getSupportImageTintList()
me.carda.awesome_notifications.core.models.NotificationModel: java.lang.String toJson()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: java.util.Map getContextMenu()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$6: boolean nonNullSuccess(java.lang.Integer)
com.google.android.material.textfield.MaterialAutoCompleteTextView: android.content.res.ColorStateList getDropDownBackgroundTintList()
androidx.datastore.preferences.protobuf.LongArrayList: LongArrayList()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$3: WebMessagePort$3(com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort,android.webkit.ValueCallback)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction: java.lang.String toString()
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source[] values()
com.google.firestore.v1.Target$Builder: Target$Builder()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status[] values()
io.grpc.ManagedChannelProvider: ManagedChannelProvider()
io.grpc.internal.DnsNameResolverProvider: DnsNameResolverProvider()
io.grpc.InternalChannelz: InternalChannelz()
com.google.firestore.v1.Document: Document()
androidx.recyclerview.widget.RecyclerView: int getItemDecorationCount()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: com.google.firebase.analytics.connector.AnalyticsConnector lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setCircularRevealScrimColor(int)
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleMargin(float)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readColor(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: java.lang.String getName()
me.carda.awesome_notifications.core.managers.RepositoryManager: boolean commit(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.R$menu: R$menu()
androidx.appcompat.widget.SearchView: int getPreferredHeight()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: boolean containsPluginScriptByGroupName(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onActivityResult(int,int,android.content.Intent)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: byte[] getData()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag valueOf(java.lang.String)
androidx.core.graphics.drawable.IconCompat: IconCompat()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.MaterialAutoCompleteTextView: java.lang.CharSequence getHint()
com.google.android.material.bottomappbar.BottomAppBar: boolean getHideOnScroll()
org.chromium.support_lib_boundary.ProfileBoundaryInterface: void prefetchUrl(java.lang.String,java.lang.reflect.InvocationHandler,android.webkit.ValueCallback)
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: int toMap()
com.google.android.material.appbar.AppBarLayout$Behavior: AppBarLayout$Behavior(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: long id()
androidx.core.view.ViewCompat$Api26Impl: boolean isImportantForAutofill(android.view.View)
androidx.webkit.WebViewRenderProcessClient: void onRenderProcessUnresponsive(android.webkit.WebView,androidx.webkit.WebViewRenderProcess)
me.carda.awesome_notifications.core.managers.PermissionManager: void setChannelPropertyThroughPermission(me.carda.awesome_notifications.core.models.NotificationChannelModel,me.carda.awesome_notifications.core.enumerators.NotificationPermission,boolean)
me.carda.awesome_notifications.core.managers.DisplayedManager: me.carda.awesome_notifications.core.models.returnedData.NotificationReceived getDisplayedByIdAndDate(android.content.Context,java.lang.Integer,java.util.Calendar)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
androidx.webkit.WebViewClientCompat: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,android.webkit.SafeBrowsingResponse)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidBigPictureResources(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.engine.FlutterJNI: void setDeferredComponentManager(io.flutter.embedding.engine.deferredcomponents.DeferredComponentManager)
androidx.appcompat.widget.ActionBarContainer: void setPrimaryBackground(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt: WebMessagePortCompatExt(int,java.lang.String)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetRight()
me.carda.awesome_notifications.core.builders.NotificationBuilder: android.content.Intent buildNotificationIntentFromActionModel(android.content.Context,android.content.Intent,java.lang.String,me.carda.awesome_notifications.core.models.returnedData.ActionReceived,java.lang.Class)
me.carda.awesome_notifications.core.AwesomeNotifications: void onNewActionReceived(java.lang.String,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
androidx.core.view.ViewCompat$Api26Impl: int getNextClusterForwardId(android.view.View)
com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: java.lang.String getOriginalUrl()
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder: void whenComplete(java.lang.Object,me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getConditionalUserProperties(java.lang.String,java.lang.String,com.google.android.gms.internal.measurement.zzdo)
androidx.core.view.ViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View)
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor[] values()
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void updateRefreshRate()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeAlpha(float)
me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour: GroupAlertBehaviour(java.lang.String,int,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2: void defaultBehaviour(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: int hashCode()
androidx.appcompat.widget.SearchView: void setOnSearchClickListener(android.view.View$OnClickListener)
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: java.lang.String getUrl()
com.google.android.material.chip.Chip: void setChipIconSize(float)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodSetEventsHandle(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.gson.stream.JsonReader: void skipToEndOfLine()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.graphics.Insets getStableInsets()
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: com.pichillilorenzo.flutter_inappwebview_android.ISettings parse(java.util.Map)
com.google.android.material.card.MaterialCardView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void onReceivedIcon(android.webkit.WebView,android.graphics.Bitmap)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessage: WebMessage(java.lang.String,java.util.List)
android.support.v4.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.search.SearchView: void setText(java.lang.CharSequence)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: InAppWebView(android.content.Context,com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin,java.lang.Object,java.lang.Integer,com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings,java.util.Map,android.view.View,java.util.List)
androidx.appcompat.app.AppCompatActivity: void onContentChanged()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$5: void onClick(android.content.DialogInterface,int)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt: int hashCode()
androidx.activity.Api34Impl: float touchY(android.window.BackEvent)
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: int getHighlightedResultIndex()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getWebauthnSupport()
com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse: ServerTrustAuthResponse(java.lang.Integer)
com.google.firestore.v1.BloomFilter: BloomFilter()
me.carda.awesome_notifications.core.models.AbstractModel: java.lang.Boolean getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,java.lang.Boolean)
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onTitleChanged(java.lang.String)
me.carda.awesome_notifications.core.utils.SerializableUtils: java.lang.Object serializeTimeZone(java.util.TimeZone)
com.google.android.material.chip.Chip: float getChipEndPadding()
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour valueOf(java.lang.String)
me.carda.awesome_notifications.core.services.ForegroundService: void startNewForegroundService(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.enumerators.ForegroundStartMode,me.carda.awesome_notifications.core.enumerators.ForegroundServiceType)
com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus: com.google.firebase.analytics.FirebaseAnalytics$ConsentStatus[] values()
me.carda.awesome_notifications.core.logs.Logger: void w(java.lang.String,java.lang.String)
com.google.protobuf.LongArrayList: LongArrayList()
me.carda.awesome_notifications.core.models.NotificationScheduleModel: NotificationScheduleModel()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$16: void error(java.lang.String,java.lang.String,java.lang.Object)
me.carda.awesome_notifications.core.enumerators.NotificationSource: me.carda.awesome_notifications.core.enumerators.NotificationSource getSafeEnum(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: java.util.Map requestImageRef()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2: InAppWebViewClient$2(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient,android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,int,android.webkit.HttpAuthHandler)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDateMatchingDateTimeComponents(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: float getZoomScale()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator[] values()
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg: StructuredAggregationQuery$Aggregation$Avg()
androidx.appcompat.widget.DialogTitle: DialogTitle(android.content.Context,android.util.AttributeSet)
androidx.appcompat.app.AppCompatActivity: void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
me.carda.awesome_notifications.core.externalLibs.CronExpression: int getLastDayOfMonth(int,int)
com.pichillilorenzo.flutter_inappwebview_android.types.ICallbackResult: boolean nullSuccess()
com.google.android.material.card.MaterialCardView: float getCardViewRadius()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager: void dispose()
io.flutter.embedding.engine.FlutterJNI: boolean getIsSoftwareRenderingEnabled()
androidx.core.content.FileProvider: boolean onCreate()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$4: boolean nonNullSuccess(java.lang.Object)
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newUnratedRating(int)
androidx.appcompat.view.menu.ListMenuItemView: void setForceShowIcon(boolean)
androidx.appcompat.widget.AbsActionBarView: AbsActionBarView(android.content.Context,android.util.AttributeSet)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedScroll(int,int,int,int,int[])
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder: byte[] convertBitmapToByteArray(android.graphics.Bitmap,java.io.ByteArrayOutputStream)
me.carda.awesome_notifications.core.managers.StatusBarManager: android.app.NotificationManager getNotificationManager(android.content.Context)
me.carda.awesome_notifications.core.models.AbstractModel: java.util.Calendar getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,java.util.Calendar)
androidx.fragment.app.FragmentActivity: void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(double)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.ActivityResultListener: boolean onActivityResult(int,int,android.content.Intent)
me.carda.awesome_notifications.core.models.NotificationChannelModel: void refreshIconResource(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$10: void onClick(android.content.DialogInterface,int)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.textfield.TextInputLayout$LengthCounter getLengthCounter()
me.carda.awesome_notifications.core.models.NotificationModel: java.util.Map extractNotificationLocalizations(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void onScrollChanged(int,int,int,int)
com.google.android.gms.common.api.internal.zzb: zzb()
me.carda.awesome_notifications.core.managers.StatusBarManager: boolean isIndexCollapsedLayout(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDarkBehavior(int)
io.flutter.embedding.engine.FlutterJNI: void removeIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeAlpha()
me.carda.awesome_notifications.core.AwesomeNotifications: boolean cancelNotificationsByGroupKey(java.lang.String)
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: android.database.sqlite.SQLiteDatabase getReadableDatabase(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: void deleteCookie(java.lang.String,java.lang.String,java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: AppCompatTextViewAutoSizeHelper$Impl29()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$MobileSubtype[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setDropDownBackgroundResource(int)
androidx.appcompat.widget.FitWindowsFrameLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTint(android.graphics.drawable.Drawable,int)
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy: me.carda.awesome_notifications.core.enumerators.NotificationPrivacy[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: java.lang.Integer getAction()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundResource(int)
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings: ProxySettings()
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: void setHeightMils(int)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnClickListener(android.view.View$OnClickListener)
com.google.firebase.firestore.remote.TargetState: TargetState()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag: com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$Flag[] values()
androidx.core.view.ViewCompat$Api28Impl: void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
io.flutter.plugins.webviewflutter.PigeonApiView$Companion: PigeonApiView$Companion()
com.dexterous.flutterlocalnotifications.models.RepeatInterval: com.dexterous.flutterlocalnotifications.models.RepeatInterval[] values()
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: ForegroundServiceType(java.lang.String,int,java.lang.String)
com.google.android.material.chip.Chip: void setChipCornerRadius(float)
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
me.carda.awesome_notifications.core.models.NotificationContentModel: void validate(android.content.Context)
com.google.android.material.appbar.AppBarLayout: float getTargetElevation()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodGetLifeCycle(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)
androidx.emoji2.text.ConcurrencyHelpers$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.google.firestore.v1.Target$DocumentsTarget: Target$DocumentsTarget()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$18: boolean nonNullSuccess(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConditionalUserProperty(android.os.Bundle,long)
androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour: androidx.constraintlayout.solver.widgets.ConstraintWidget$DimensionBehaviour[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort: void postMessage(com.pichillilorenzo.flutter_inappwebview_android.types.WebMessage,android.webkit.ValueCallback)
com.google.android.gms.internal.measurement.zzfr$zza$zzd: com.google.android.gms.internal.measurement.zzfr$zza$zzd[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: void setSslError(android.net.http.SslError)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$6: InAppWebViewClientCompat$6(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat,android.os.Message,android.os.Message,android.webkit.WebView)
androidx.appcompat.app.AppCompatViewInflater: AppCompatViewInflater()
me.carda.awesome_notifications.core.managers.LostEventsManager: me.carda.awesome_notifications.core.managers.LostEventsManager getInstance()
androidx.appcompat.app.AppCompatActivity: void initDelegate()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterOverlaySurface: int getId()
com.pichillilorenzo.flutter_inappwebview_android.types.URLAuthenticationChallenge: com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace getProtectionSpace()
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase valueOf(java.lang.String)
com.google.gson.LongSerializationPolicy: com.google.gson.LongSerializationPolicy[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(int)
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.ForegroundServiceType)
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobChannelDelegate: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection[] values()
me.carda.awesome_notifications.core.managers.ScheduleManager: ScheduleManager()
androidx.appcompat.widget.AppCompatTextView: void setAllCaps(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$5: InAppWebView$5(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: void setDefaultValue(java.lang.String)
com.google.gson.internal.bind.TypeAdapters$13: TypeAdapters$13()
androidx.appcompat.widget.AppCompatImageView: void setImageBitmap(android.graphics.Bitmap)
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: void setId(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setCategory(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessWebViewChannelDelegate: void dispose()
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: me.carda.awesome_notifications.core.enumerators.ForegroundStartMode valueOf(java.lang.String)
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState valueOf(java.lang.String)
com.google.android.material.chip.ChipGroup: void setOnCheckedChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedChangeListener)
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType valueOf(java.lang.String)
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$5: void error(java.lang.String,java.lang.String,java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLargeIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource)
com.google.android.material.appbar.AppBarLayout: int getDownNestedScrollRange()
me.carda.awesome_notifications.core.managers.PermissionManager: boolean gotoAndroidGlobalNotificationsPage(android.content.Context)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundColor()
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setLengthCounter(com.google.android.material.textfield.TextInputLayout$LengthCounter)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager: void clearAllCache(android.content.Context,boolean)
androidx.browser.customtabs.CustomTabsIntent$Api23Impl: android.app.ActivityOptions makeBasicActivityOptions()
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: java.lang.String getRealm()
androidx.recyclerview.widget.StaggeredGridLayoutManager: StaggeredGridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void goForwardButtonClicked(android.view.MenuItem)
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: int pixelsToMils(double)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.content.Intent getFileChooserIntent(java.lang.String[],boolean)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintList(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.R$id: R$id()
com.google.android.material.internal.FlowLayout: void setLineSpacing(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.BaseCallbackResultImpl: boolean nonNullSuccess(java.lang.Object)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getAppInstanceId(com.google.android.gms.internal.measurement.zzdo)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath: VectorDrawableCompat$VClipPath()
com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld: java.lang.String getName()
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface: java.util.List getAllProfileNames()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: android.net.Uri getSafeBrowsingPrivacyPolicyUrl()
io.grpc.Context$DirectExecutor: io.grpc.Context$DirectExecutor[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void injectCSSFileFromUrl(java.lang.String,java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void goBackButtonClicked(android.view.MenuItem)
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase valueOf(java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void resetAnalyticsData(long)
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthenticationChallenge: void setPreviousFailureCount(int)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application: CrashlyticsReport$Session$Event$Application()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.util.Map getAllLongValues(android.content.Context,java.lang.String)
com.google.android.material.search.SearchBar: java.lang.CharSequence getHint()
com.google.android.material.chip.Chip: void setLayoutDirection(int)
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task getPluginConstantsForFirebaseApp(com.google.firebase.FirebaseApp)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleY(float)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setMeasurementEnabled(boolean,long)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void onStart()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onPermissionRequest(java.lang.String,java.util.List,java.lang.Object,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$PermissionRequestCallback)
com.google.android.datatransport.cct.internal.LogEvent: LogEvent()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setKeyListener(android.text.method.KeyListener)
androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact: androidx.fragment.app.SpecialEffectsController$Operation$LifecycleImpact[] values()
com.google.android.material.chip.ChipGroup: void setOnCheckedStateChangeListener(com.google.android.material.chip.ChipGroup$OnCheckedStateChangeListener)
me.carda.awesome_notifications.core.exceptions.ExceptionFactory: void registerNewAwesomeException(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Exception)
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: FlutterFirebaseCoreRegistrar()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean isTracing()
androidx.lifecycle.viewmodel.CreationExtras: CreationExtras()
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListenerChannelDelegate: WebMessageListenerChannelDelegate(com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener,io.flutter.plugin.common.MethodChannel)
kotlinx.coroutines.YieldContext: YieldContext()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$17: void onReceiveValue(java.lang.String)
me.leolin.shortcutbadger.impl.NovaHomeBadger: NovaHomeBadger()
me.carda.awesome_notifications.core.builders.NotificationBuilder: me.carda.awesome_notifications.core.builders.NotificationBuilder updateMainTargetClassName(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void closeButtonClicked(android.view.MenuItem)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel createWebMessageChannel(android.webkit.ValueCallback)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory()
me.carda.awesome_notifications.core.listeners.AwesomeLifeCycleEventListener: void onNewLifeCycleEvent(me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle)
io.flutter.plugins.webviewflutter.WebViewClientProxyApi$WebViewClientImpl: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.Boolean setMessagingLayout(android.content.Context,boolean,me.carda.awesome_notifications.core.models.NotificationContentModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
me.carda.awesome_notifications.core.managers.DefaultsManager: java.lang.String getAwesomeExtensionClassName(android.content.Context)
com.google.android.gms.signin.internal.zaa: zaa()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void install()
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void showBigPictureWhenCollapsed(android.app.Notification$BigPictureStyle,boolean)
androidx.appcompat.widget.ActionBarContainer: void setTransitioning(boolean)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: android.media.MediaDescription$Builder createBuilder()
io.grpc.LoadBalancer$SubchannelPicker: LoadBalancer$SubchannelPicker()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: void addPluginScripts(java.util.List)
io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation: io.flutter.embedding.engine.systemchannels.PlatformChannel$DeviceOrientation[] values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void finalize()
com.google.android.material.chip.ChipGroup: int getChipSpacingHorizontal()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.ActionType getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.ActionType)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$400(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.pichillilorenzo.flutter_inappwebview_android.types.ChannelDelegateImpl: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.button.MaterialButtonToggleGroup: int getLastVisibleChildIndex()
androidx.appcompat.widget.Toolbar: void setTitleMarginEnd(int)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScroll(boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: byte[] getIcon()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: boolean setFloat(android.content.Context,java.lang.String,java.lang.String,float)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forScreeningCall(android.app.Person,android.app.PendingIntent,android.app.PendingIntent)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$12: void onClick(android.view.View)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalStyle(int)
com.google.protobuf.Int64Value: Int64Value()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnimationMode(int)
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: android.print.PrintAttributes$MediaSize toMediaSize()
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: NotificationLocalizationModel()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void onStop()
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthenticationChallenge: int getPreviousFailureCount()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: java.util.List getHttpAuthCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathEnd(float)
androidx.core.app.NotificationManagerCompat$Api24Impl: boolean areNotificationsEnabled(android.app.NotificationManager)
com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType: int toValue()
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: void deleteCookies(java.lang.String,java.lang.String,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: JsAlertResponse(java.lang.String,java.lang.String,boolean,java.lang.Integer)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setAlpha(float)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonDrawable()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentMode(int)
io.grpc.ChannelLogger: ChannelLogger()
com.qilowatt.qilowatt.MainActivity: MainActivity()
me.carda.awesome_notifications.core.models.NotificationCalendarModel: NotificationCalendarModel()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodStartForeground(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.enumerators.NotificationSource: me.carda.awesome_notifications.core.enumerators.NotificationSource[] $values()
io.flutter.embedding.engine.FlutterJNI: void dispatchEmptyPlatformMessage(java.lang.String,int)
me.carda.awesome_notifications.core.listeners.AwesomeActionEventListener: void onNewActionReceived(java.lang.String,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onScaleChanged(android.webkit.WebView,float,float)
io.grpc.internal.ServiceConfigUtil: ServiceConfigUtil()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressViewOffset(boolean,int,int)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session: CrashlyticsReport$Session()
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setChipEndPadding(float)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.lang.String getLayoutAlgorithm()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: void lockInputConnection()
androidx.core.app.NotificationCompat$CallStyle$Api21Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(int)
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextInputType[] values()
com.google.android.material.button.MaterialButton: void setToggleCheckedStateOnClick(boolean)
com.google.android.material.internal.ClippableRoundedCornerLayout: float getCornerRadius()
com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld: boolean equals(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$4: InAppWebView$4(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
androidx.appcompat.widget.Toolbar: void setTitleMarginTop(int)
me.carda.awesome_notifications.core.models.NotificationModel: NotificationModel()
com.google.android.material.button.MaterialButton: int getTextLayoutWidth()
me.carda.awesome_notifications.core.enumerators.MediaSource: java.lang.String getSafeName()
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: void removeSchedulesByChannelKey(android.content.Context,java.lang.String)
com.google.android.material.button.MaterialButton: void setCornerRadius(int)
com.google.android.material.chip.Chip: void setLines(int)
androidx.core.graphics.Insets$Api29Impl: android.graphics.Insets of(int,int,int,int)
com.google.gson.internal.bind.TypeAdapters$8: TypeAdapters$8()
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.dexterous.flutterlocalnotifications.models.NotificationDetails extractNotificationDetails(io.flutter.plugin.common.MethodChannel$Result,java.util.Map)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: void setInsets(int,androidx.core.graphics.Insets)
com.google.android.gms.common.api.Api$AbstractClientBuilder: Api$AbstractClientBuilder()
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessWebViewChannelDelegate: void onWebViewCreated()
androidx.core.app.Person$Api28Impl: androidx.core.app.Person fromAndroidPerson(android.app.Person)
androidx.media.AudioAttributesCompatParcelizer: void write(androidx.media.AudioAttributesCompat,androidx.versionedparcelable.VersionedParcel)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: int hashCode()
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.String permissionToOp(java.lang.String)
me.carda.awesome_notifications.core.utils.BitmapUtils: android.graphics.Bitmap getBitmapFromFile(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void dispose()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onPermissionRequestCanceled(java.lang.String,java.util.List)
androidx.datastore.preferences.protobuf.FieldType: androidx.datastore.preferences.protobuf.FieldType valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager: void init()
me.carda.awesome_notifications.core.enumerators.MediaSource: MediaSource(java.lang.String,int,java.lang.String)
com.google.android.material.textfield.TextInputLayout: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.firestore.v1.StructuredQuery$UnaryFilter: StructuredQuery$UnaryFilter()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readLedInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.google.android.material.internal.NavigationMenuView: NavigationMenuView(android.content.Context,android.util.AttributeSet)
androidx.constraintlayout.widget.ConstraintLayout: int getMinHeight()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatTextView: java.lang.CharSequence getText()
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.util.Map getRealSettings(com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface)
kotlinx.coroutines.flow.internal.AbstractSharedFlowSlot: AbstractSharedFlowSlot()
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(android.graphics.Path)
androidx.activity.ComponentActivity: java.lang.Object onRetainNonConfigurationInstance()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Api23Impl: android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int,android.widget.TextView,android.text.TextPaint,androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl)
me.carda.awesome_notifications.core.models.returnedData.NotificationReceived: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: java.util.List getCustomActions(android.media.session.PlaybackState)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] $values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$18: void onReceiveValue(java.lang.String)
androidx.appcompat.widget.ViewStubCompat: void setInflatedId(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy$1: void onDisplayAdded(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean,boolean)
androidx.core.view.animation.PathInterpolatorCompat$Api21Impl: android.view.animation.Interpolator createPathInterpolator(float,float,float,float)
me.carda.awesome_notifications.core.managers.StatusBarManager: java.lang.String getIndexActiveNotificationGroup(java.lang.String)
me.carda.awesome_notifications.core.threads.NotificationScheduler: java.util.Calendar doInBackground()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.util.Map getRealSettings(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onDetachedFromActivityForConfigChanges()
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: int getVerticalDpi()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean hasNestedScrollingParent()
com.google.gson.stream.JsonReader: void skipValue()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setAnimationProgress(float)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$17: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.firebase.firestore.FirebaseFirestoreKtxRegistrar: FirebaseFirestoreKtxRegistrar()
com.google.android.material.chip.Chip: void setCloseIconEndPadding(float)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar: void setClickableIDs(java.util.List)
androidx.appcompat.widget.Toolbar: void setPopupTheme(int)
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D: com.pichillilorenzo.flutter_inappwebview_android.types.Size2D fromMap(java.util.Map)
androidx.fragment.app.FragmentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api28Impl: android.app.Notification$MessagingStyle$Message createMessage(java.lang.CharSequence,long,android.app.Person)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void onGeolocationPermissionsHidePrompt()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setInboxStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
me.carda.awesome_notifications.core.threads.NotificationSender: java.lang.Object doInBackground()
io.flutter.embedding.engine.FlutterJNI: void notifyLowMemoryWarning()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: float getAlpha()
me.carda.awesome_notifications.core.managers.ActionManager: boolean commitChanges(android.content.Context)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.Boolean lambda$getBooleansStartingWith$1(android.database.Cursor,int)
com.google.android.material.transformation.FabTransformationSheetBehavior: FabTransformationSheetBehavior()
com.google.common.collect.AbstractIterator$State: com.google.common.collect.AbstractIterator$State[] values()
com.google.gson.stream.JsonWriter: void flush()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setOffscreenPreRaster(boolean)
com.google.android.material.snackbar.BaseTransientBottomBar$BaseCallback: BaseTransientBottomBar$BaseCallback()
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: java.lang.Integer getAction()
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageResponseCallback(int,java.nio.ByteBuffer,int)
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIcon(android.graphics.drawable.Drawable)
androidx.core.app.AlarmManagerCompat$Api23Impl: void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.browser.customtabs.CustomTabsCallback: void extraCallback(java.lang.String,android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: java.lang.Integer getStatusCode()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.chip.Chip: float getChipStrokeWidth()
me.carda.awesome_notifications.core.models.DefaultsModel: java.util.Map toMap()
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationX()
me.carda.awesome_notifications.core.managers.RepositoryManager: me.carda.awesome_notifications.core.models.AbstractModel get(android.content.Context,java.lang.String,java.lang.String)
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getStartIconMinSize()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter jsonValue(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.PlatformUtil: void dispose()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: boolean isCalledFromListPopupWindowShow()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void onCreate(android.database.sqlite.SQLiteDatabase)
me.carda.awesome_notifications.core.managers.StatusBarManager: androidx.core.app.NotificationManagerCompat getAdaptedOldNotificationManager(android.content.Context)
com.google.android.material.timepicker.TimePickerView: TimePickerView(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt: java.util.Map toMap()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger fromMap(java.util.Map)
androidx.appcompat.view.menu.ListMenuItemView: void setSubMenuArrowVisible(boolean)
com.google.android.material.search.SearchView: void setVisible(boolean)
io.flutter.embedding.engine.FlutterJNI: java.lang.String[] computePlatformResolvedLocale(java.lang.String[])
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$1: JavaScriptBridgeInterface$2$1(com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2,java.lang.String)
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType[] values()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean onNewIntent(android.content.Intent)
me.carda.awesome_notifications.core.AwesomeNotifications: me.carda.awesome_notifications.core.AwesomeNotifications subscribeOnNotificationEvents(me.carda.awesome_notifications.core.listeners.AwesomeNotificationEventListener)
androidx.core.app.ComponentActivity: boolean superDispatchKeyEvent(android.view.KeyEvent)
com.google.android.material.button.MaterialButton: MaterialButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.SearchView: void setAppSearchData(android.os.Bundle)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback)
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings: java.util.Map getRealSettings(androidx.webkit.ProcessGlobalConfig)
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState[] $values()
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererResponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.plugins.GeneratedPluginRegistrant: GeneratedPluginRegistrant()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: android.net.http.SslCertificate getCertificate()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean launchedActivityFromHistory(android.content.Intent)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHandler: void init(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$1: void onCustomTabsConnected()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo getRootNode(android.view.View,int,android.graphics.Rect)
androidx.webkit.ServiceWorkerClientCompat: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode[] values()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void injectJavascriptFileFromUrl(java.lang.String,java.util.Map)
me.carda.awesome_notifications.core.models.AbstractModel: java.util.TimeZone getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,java.util.TimeZone)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: boolean isFileNotEmpty(android.net.Uri)
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: java.lang.String toString()
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: java.lang.String toString()
androidx.appcompat.widget.ActionBarContextView: void setCustomView(android.view.View)
androidx.core.app.NotificationCompat$BigPictureStyle$Api23Impl: void setBigLargeIcon(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ServerTimestampBehavior: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ServerTimestampBehavior[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void setPlugin(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
com.google.gson.internal.sql.SqlDateTypeAdapter$1: SqlDateTypeAdapter$1()
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeStarted(androidx.appcompat.view.ActionMode)
me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException: java.lang.String getDetailedCode()
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder: java.lang.Object onPostExecute(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$500(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.google.android.material.search.SearchBar: void setDefaultScrollFlagsEnabled(boolean)
androidx.appcompat.widget.ActionMenuView: void setExpandedActionViewsExclusive(boolean)
io.grpc.NameResolverRegistry: NameResolverRegistry()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$4: void defaultBehaviour(java.lang.Object)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.util.Map getAllStringValues(android.content.Context,java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setBadgeIconType(android.app.Notification$Builder,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.app.Activity getActivity()
com.google.firestore.v1.FirestoreGrpc: FirestoreGrpc()
androidx.fragment.app.FragmentContainerView: FragmentContainerView(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings$DirectoryBasePaths: com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings$DirectoryBasePaths parse(java.util.Map)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: void setAccessibilityClassName(java.lang.CharSequence)
me.carda.awesome_notifications.core.managers.LostEventsManager: void saveCreated(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.CharSequence getDescription(android.media.MediaDescription)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityResumed(android.app.Activity)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: void setSource(java.lang.String)
androidx.constraintlayout.widget.ConstraintLayout: void setId(int)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlocker: ContentBlocker(com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger,com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction)
me.carda.awesome_notifications.core.utils.JsonUtils: JsonUtils()
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
me.carda.awesome_notifications.core.utils.IntegerUtils: int generateNextRandomId()
androidx.appcompat.widget.AppCompatTextView: void setFirstBaselineToTopHeight(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setRefreshing(boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: java.util.Map getHeaders()
me.carda.awesome_notifications.R$string: R$string()
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshChannelDelegate: void dispose()
me.carda.awesome_notifications.core.models.NotificationContentModel: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: java.lang.String getConfirmButtonTitle()
com.google.android.material.textfield.TextInputLayout: void setHelperText(java.lang.CharSequence)
com.google.android.gms.measurement.AppMeasurement: void setConditionalUserProperty(com.google.android.gms.measurement.AppMeasurement$ConditionalUserProperty)
com.google.android.material.button.MaterialButtonToggleGroup: int getVisibleButtonCount()
com.google.firestore.v1.DocumentMask: DocumentMask()
com.google.firestore.v1.StructuredAggregationQuery: StructuredAggregationQuery()
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: int getHeightMils()
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(android.graphics.drawable.Drawable)
me.carda.awesome_notifications.core.managers.DefaultsManager: java.lang.Long getDisplayedCallbackDispatcher(android.content.Context)
me.carda.awesome_notifications.core.broadcasters.receivers.NotificationActionReceiver: NotificationActionReceiver()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void getHitTestResult(android.webkit.ValueCallback)
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$1: JavaScriptBridgeInterface$1(com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathOffset(float)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$16: InAppWebView$16(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestorePlugin: FlutterFirebaseFirestorePlugin()
com.google.android.material.checkbox.MaterialCheckBox: void setErrorAccessibilityLabelResource(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$4: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse)
me.carda.awesome_notifications.core.managers.ScheduleManager: me.carda.awesome_notifications.core.models.NotificationModel getScheduleById(android.content.Context,java.lang.Integer)
com.google.android.material.button.MaterialButton: int getIconSize()
com.google.firebase.firestore.remote.WatchChangeAggregator$BloomFilterApplicationStatus: com.google.firebase.firestore.remote.WatchChangeAggregator$BloomFilterApplicationStatus[] values()
androidx.constraintlayout.widget.VirtualLayout: VirtualLayout(android.content.Context,android.util.AttributeSet)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRendererClient()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType[] $values()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ShouldOverrideUrlLoadingCallback: WebViewChannelDelegate$ShouldOverrideUrlLoadingCallback()
com.google.android.gms.internal.measurement.zzaj: zzaj()
androidx.activity.ComponentActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$6: boolean nonNullSuccess(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$1: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEditTextBoxBackground()
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout: PullToRefreshLayout(android.content.Context,com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin,java.lang.Object,com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void onDestroy()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks$1: void onActivityResumed(android.app.Activity)
com.google.firebase.sessions.SessionsActivityLifecycleCallbacks: SessionsActivityLifecycleCallbacks()
com.google.firebase.appcheck.AppCheckTokenResult: AppCheckTokenResult()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$1: InAppBrowserActivity$1(com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity)
androidx.core.view.ViewCompat$Api28Impl: java.lang.Object requireViewById(android.view.View,int)
com.google.android.material.textfield.TextInputLayout: void setHintTextColor(android.content.res.ColorStateList)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void onDetachedFromEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
me.carda.awesome_notifications.core.utils.SerializableUtils: java.util.TimeZone deserializeTimeZone(java.lang.String)
androidx.appcompat.app.AppCompatActivity: void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder)
com.google.android.material.textfield.TextInputLayout: void setHint(int)
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: java.util.Map getSchedulesByGroupKey(android.content.Context,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setTappableElementInsets(androidx.core.graphics.Insets)
com.google.android.material.button.MaterialButton: android.graphics.drawable.Drawable getIcon()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: boolean onJsBeforeUnload(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)
androidx.core.view.ViewCompat$Api26Impl: int getImportantForAutofill(android.view.View)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setVisibility(android.app.Notification$Builder,int)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Application: CrashlyticsReport$Session$Application()
androidx.transition.Transition$Impl26: long getTotalDuration(android.animation.Animator)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[])
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect)
com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView: void onInputConnectionUnlocked()
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String,int)
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: java.util.List getComponents()
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController: void findAll(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior()
me.carda.awesome_notifications.core.externalLibs.CronExpression: boolean isValidExpression(java.lang.String)
androidx.core.widget.NestedScrollView$Api21Impl: boolean getClipToPadding(android.view.ViewGroup)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getActionTextColorAlpha()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onTouchEvent(android.view.MotionEvent)
com.google.android.material.chip.Chip: void setEllipsize(android.text.TextUtils$TruncateAt)
io.flutter.view.TextureRegistry$SurfaceProducer: boolean handlesCropAndRotation()
androidx.activity.ComponentActivity: void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
me.carda.awesome_notifications.core.models.NotificationMessageModel: java.lang.String toJson()
androidx.appcompat.app.AppCompatActivity: void onNightModeChanged(int)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler addDocumentStartJavaScript(java.lang.String,java.lang.String[])
me.carda.awesome_notifications.core.models.AbstractModel: java.util.Map getValueOrDefaultMap(java.util.Map,java.lang.String,java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: void setName(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: boolean containsUserOnlyScriptByGroupName(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager: InAppWebViewManager(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginObject()
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy: me.carda.awesome_notifications.core.enumerators.NotificationPrivacy[] $values()
com.google.firebase.installations.FirebaseInstallationsRegistrar: FirebaseInstallationsRegistrar()
me.carda.awesome_notifications.core.managers.ActionManager: void setInitialNotificationAction(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: void setHost(java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setDisabledActionModeMenuItems(int)
me.carda.awesome_notifications.core.builders.NotificationBuilder: me.carda.awesome_notifications.core.models.returnedData.ActionReceived buildNotificationActionFromIntent(android.content.Context,android.content.Intent,me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle)
com.google.firestore.admin.v1.Index: Index()
android.support.v4.media.RatingCompat$Api19Impl: boolean isRated(android.media.Rating)
me.carda.awesome_notifications.core.threads.NotificationThread: void runOnForegroundThread()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onLayout(boolean,int,int,int,int)
androidx.core.view.ViewCompat$Api30Impl: void setImportantForContentCapture(android.view.View,int)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setTitle(me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
com.google.firebase.messaging.ktx.FirebaseMessagingKtxRegistrar: FirebaseMessagingKtxRegistrar()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onJsConfirm(java.lang.String,java.lang.String,java.lang.Boolean,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsConfirmCallback)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme)
me.carda.awesome_notifications.core.background.BackgroundExecutor: boolean runBackgroundAction(android.content.Context,android.content.Intent)
androidx.activity.Api34Impl: float touchX(android.window.BackEvent)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.media.session.PlaybackState$Builder createBuilder()
io.flutter.plugins.webviewflutter.WebViewClientProxyApi$WebViewClientImpl: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)
androidx.transition.TransitionSet: TransitionSet()
me.carda.awesome_notifications.core.externalLibs.CronExpression: me.carda.awesome_notifications.core.externalLibs.ValueSet getValue(int,java.lang.String,int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getBackForwardCacheEnabled()
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: InAppBrowserSettings()
me.carda.awesome_notifications.core.managers.CancellationManager: boolean dismissNotificationsByGroupKey(android.content.Context,java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setTextSelectable(android.view.accessibility.AccessibilityNodeInfo,boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListenerChannelDelegate: void onPostMessage(com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt,java.lang.String,boolean)
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: me.carda.awesome_notifications.core.models.NotificationModel showForegroundNotification(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void insertVisualStateCallback(long,java.lang.reflect.InvocationHandler)
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: void onDetachedFromActivityForConfigChanges()
androidx.appcompat.app.AppCompatActivity: void initViewTreeOwners()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void initialize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodListAllSchedules(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setExitTransition(android.widget.PopupWindow,android.transition.Transition)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserChannelDelegate: InAppBrowserChannelDelegate(io.flutter.plugin.common.MethodChannel)
androidx.core.view.WindowInsetsCompat$Impl20: void copyRootViewBounds(android.view.View)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(int)
androidx.fragment.app.FragmentContainerView: void setLayoutTransition(android.animation.LayoutTransition)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDark()
androidx.appcompat.widget.AppCompatEditText: androidx.appcompat.widget.AppCompatEditText$SuperCaller getSuperCaller()
com.google.android.material.card.MaterialCardView: int getContentPaddingTop()
com.google.gson.internal.bind.TypeAdapters$18: TypeAdapters$18()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getEnterpriseAuthenticationAppLinkPolicyEnabled()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivitySingleInstance: ChromeCustomTabsActivitySingleInstance()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType getResourceTypeFromContentType(java.lang.String)
me.carda.awesome_notifications.core.managers.ChannelManager: void updateChannelModelThroughAndroidChannel(me.carda.awesome_notifications.core.models.NotificationChannelModel,android.app.NotificationChannel)
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat: AnimatedVectorDrawableCompat()
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerWebSource(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest,kotlin.coroutines.Continuation)
com.google.android.material.chip.Chip: void setTextEndPadding(float)
com.google.android.material.button.MaterialButton: void setInsetTop(int)
com.google.firestore.v1.BatchGetDocumentsRequest$Builder: BatchGetDocumentsRequest$Builder()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: boolean canScrollVertically()
io.flutter.plugin.platform.SingleViewPresentation: void onCreate(android.os.Bundle)
androidx.appcompat.widget.Toolbar: void setCollapseIcon(android.graphics.drawable.Drawable)
me.leolin.shortcutbadger.impl.VivoHomeBadger: VivoHomeBadger()
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: NavigationAction(com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest,boolean,boolean,boolean)
me.carda.awesome_notifications.core.managers.DefaultsManager: java.lang.Long getActionCallbackDispatcher(android.content.Context)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void waitOnFence(android.media.Image)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: int getProgress()
com.google.gson.internal.sql.SqlTimeTypeAdapter: SqlTimeTypeAdapter()
android.support.v4.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerDrawable(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager$DummyServiceWorkerClientCompat: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl30)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onGeolocationPermissionsHidePrompt()
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void didFinishNavigation(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$4: void onReceiveValue(java.lang.Boolean)
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState valueOf(java.lang.String)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader access$800(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.util.LinkedHashSet getPluginScriptsRequiredInAllContentWorlds()
com.dexterous.flutterlocalnotifications.models.ScheduleMode: boolean useExactAlarm()
com.google.android.material.bottomappbar.BottomAppBar: int getBottomInset()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabsHelper: java.lang.String getPackageNameToUse(android.content.Context)
androidx.fragment.app.SpecialEffectsController$Operation$State: androidx.fragment.app.SpecialEffectsController$Operation$State valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.Adapter)
com.google.gson.internal.LinkedTreeMap: LinkedTreeMap()
me.carda.awesome_notifications.core.utils.BitmapUtils: android.graphics.Bitmap getBitmapFromResource(android.content.Context,java.lang.String)
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: int getWindowAreaStatus()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getForceDarkBehavior()
com.google.firestore.v1.ArrayValue: ArrayValue()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior(android.content.Context,android.util.AttributeSet)
me.carda.awesome_notifications.core.managers.ChannelGroupManager: ChannelGroupManager()
me.carda.awesome_notifications.core.threads.NotificationScheduler: java.lang.Object doInBackground()
me.carda.awesome_notifications.core.managers.CancellationManager: me.carda.awesome_notifications.core.managers.CancellationManager getInstance()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setOnClickListener(android.view.View$OnClickListener)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType: java.lang.String toString()
com.google.android.material.search.SearchBar: void setSubtitle(java.lang.CharSequence)
androidx.core.os.LocaleListCompat$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
androidx.fragment.app.FragmentActivity: void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle)
androidx.appcompat.widget.ActionBarOverlayLayout: ActionBarOverlayLayout(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar: java.lang.String toString()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String generateContentWorldsCreatorCode()
androidx.core.view.WindowInsetsCompat$Impl30: androidx.core.graphics.Insets getInsets(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void animateOffsetToStartPosition(int,android.view.animation.Animation$AnimationListener)
kotlin.UninitializedPropertyAccessException: UninitializedPropertyAccessException()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: void dispose()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readBigPictureStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
androidx.activity.ComponentActivity$NonConfigurationInstances: ComponentActivity$NonConfigurationInstances()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures: MeasurementManagerFutures()
kotlin.jvm.internal.Ref$BooleanRef: Ref$BooleanRef()
com.google.android.datatransport.ProductData: ProductData()
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: void setMimeType(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: void setUrlFilterPatternCompiled(java.util.regex.Pattern)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager$1: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$8: InAppWebView$8(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,java.util.Map,float,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.Toolbar: void setSubtitle(java.lang.CharSequence)
io.grpc.ThreadLocalContextStorage: ThreadLocalContextStorage()
me.carda.awesome_notifications.core.models.NotificationModel: me.carda.awesome_notifications.core.models.NotificationScheduleModel extractNotificationSchedule(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ServiceConnectionCallback: void onServiceDisconnected()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getFillAlpha()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: void onDragEnd(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: boolean zoomIn()
androidx.core.view.AccessibilityDelegateCompat: AccessibilityDelegateCompat()
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiMode[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: boolean isFocused()
androidx.recyclerview.widget.RecyclerView: boolean getClipToPadding()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: boolean isTextSelectable(android.view.accessibility.AccessibilityNodeInfo)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmojiModifier(int)
androidx.appcompat.widget.ActionMenuView: int getPopupTheme()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setCurrentTranslation(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel)
com.google.gson.JsonObject: JsonObject()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat: VectorDrawableCompat()
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: me.carda.awesome_notifications.core.models.returnedData.ActionReceived fromJson(java.lang.String)
me.carda.awesome_notifications.core.managers.StatusBarManager: void setIndexActiveNotificationGroup(android.content.SharedPreferences$Editor,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.utils.StringUtils: java.lang.Enum getEnumFromString(java.lang.Class,java.lang.String)
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedPreFling(android.view.View,float,float)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient: void dispose()
androidx.arch.core.executor.ArchTaskExecutor: ArchTaskExecutor()
androidx.activity.ComponentActivity$Api33Impl: android.window.OnBackInvokedDispatcher getOnBackInvokedDispatcher(android.app.Activity)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController$3: UserContentController$3(com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController)
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: void setMessage(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout: PullToRefreshLayout(android.content.Context)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: FlutterFirebasePluginRegistry()
androidx.core.view.ViewCompat$Api21Impl: void setElevation(android.view.View,float)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$16: boolean nonNullSuccess(java.lang.Object)
androidx.core.widget.NestedScrollView: int getScrollRange()
androidx.core.view.WindowInsetsCompat$Impl30: WindowInsetsCompat$Impl30(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: int getRootAlpha()
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannels(android.app.NotificationManager)
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: java.lang.String getMessage()
com.google.android.gms.measurement.AppMeasurementReceiver: AppMeasurementReceiver()
me.carda.awesome_notifications.core.managers.StatusBarManager: android.app.Notification getAndroidNotificationById(android.content.Context,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpecResource(int)
com.google.protobuf.FieldType$Collection: com.google.protobuf.FieldType$Collection valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: boolean equals(java.lang.Object)
com.google.android.material.checkbox.MaterialCheckBox: void setStateDescription(java.lang.CharSequence)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreScroll(int,int,int[],int[])
io.flutter.view.TextureRegistry$SurfaceProducer: long id()
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color[] values()
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMaxTextSize()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void openFileChooser(android.webkit.ValueCallback,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$6: void error(java.lang.String,java.lang.String,java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: java.util.List access$102(java.util.List)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.datastore.preferences.protobuf.BooleanArrayList: BooleanArrayList()
androidx.appcompat.widget.DropDownListView$Api33Impl: void setSelectedChildViewEnabled(android.widget.AbsListView,boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void postUrl(java.lang.String,byte[])
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$SyncLoadResourceWithCustomSchemeCallback: com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse decodeResult(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$7: void onReceiveValue(java.lang.Boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertChallenge: ClientCertChallenge(com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace,java.security.Principal[],java.lang.String[])
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$1: void run()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: java.lang.String getPathName()
com.google.android.material.textfield.TextInputLayout: void setStartIconDrawable(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: boolean zoomOut()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointVariantSelector(int)
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: boolean equals(java.lang.Object)
me.carda.awesome_notifications.core.enumerators.MediaSource: me.carda.awesome_notifications.core.enumerators.MediaSource[] values()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspot(android.graphics.drawable.Drawable,float,float)
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: java.util.Map getRealSettings(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void createAlertDialog(java.lang.String,android.webkit.JsResult,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout$2: PullToRefreshLayout$2(com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout,com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean isAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo)
com.google.firebase.installations.InstallationTokenResult: InstallationTokenResult()
com.google.android.material.checkbox.MaterialCheckBox: void setOnCheckedChangeListener(android.widget.CompoundButton$OnCheckedChangeListener)
com.google.firebase.firestore.model.FieldIndex$Segment: FieldIndex$Segment()
io.flutter.plugins.webviewflutter.PigeonApiFlutterAssetManager$Companion: PigeonApiFlutterAssetManager$Companion()
me.carda.awesome_notifications.core.models.NotificationContentModel: java.util.Map toMap()
com.google.android.gms.internal.measurement.zzbx: boolean onTransact(int,android.os.Parcel,android.os.Parcel,int)
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: DownloadStartRequest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long,java.lang.String,java.lang.String)
com.google.firebase.installations.FirebaseInstallationsRegistrar: java.util.List getComponents()
androidx.core.widget.EdgeEffectCompat$Api31Impl: android.widget.EdgeEffect create(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationCompat$MessagingStyle: NotificationCompat$MessagingStyle()
com.google.android.material.checkbox.MaterialCheckBox: void setUseMaterialThemeColors(boolean)
me.carda.awesome_notifications.core.models.NotificationChannelModel: NotificationChannelModel()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifierBase(int)
io.flutter.plugins.webviewflutter.FileChooserMode: io.flutter.plugins.webviewflutter.FileChooserMode valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: java.lang.String getOrigin()
com.google.android.gms.internal.measurement.zzfy$zzi: zzfy$zzi()
com.google.firestore.v1.StructuredQuery$FieldReference$Builder: StructuredQuery$FieldReference$Builder()
com.pichillilorenzo.flutter_inappwebview_android.types.PrintJobInfoExt: com.pichillilorenzo.flutter_inappwebview_android.types.PrintJobInfoExt fromPrintJobInfo(android.print.PrintJobInfo)
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.firebase.firestore.Source: com.google.firebase.firestore.Source valueOf(java.lang.String)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: void onBroadcastNotificationDisplayed(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController: void prepare()
com.google.firebase.messaging.FirebaseMessagingRegistrar: com.google.firebase.messaging.FirebaseMessaging lambda$getComponents$0(com.google.firebase.components.Qualified,com.google.firebase.components.ComponentContainer)
me.carda.awesome_notifications.core.models.AbstractModel: java.lang.Short getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,java.lang.Short)
androidx.appcompat.widget.ActionBarContextView: java.lang.CharSequence getTitle()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAligned(boolean)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannel(android.app.NotificationManager,android.app.NotificationChannel)
com.google.gson.stream.JsonWriter: void setLenient(boolean)
me.carda.awesome_notifications.core.utils.BitmapUtils: android.graphics.Bitmap getBitmapFromAsset(android.content.Context,java.lang.String)
me.carda.awesome_notifications.core.utils.MediaUtils: java.lang.Boolean matchMediaType(java.lang.String,java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: android.graphics.SurfaceTexture surfaceTexture()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse: java.lang.Integer getAction()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCheckedIconTint()
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener)
androidx.appcompat.widget.LinearLayoutCompat: void setMeasureWithLargestChildEnabled(boolean)
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessWebViewChannelDelegate: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt fromResolution(android.print.PrintAttributes$Resolution)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: int getType()
androidx.appcompat.widget.AppCompatImageButton: void setImageLevel(int)
androidx.core.view.ViewCompat$Api21Impl: boolean hasNestedScrollingParent(android.view.View)
android.support.v4.media.session.PlaybackStateCompat$Api22Impl: android.os.Bundle getExtras(android.media.session.PlaybackState)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getStrokeColor()
com.google.android.material.textfield.TextInputLayout: void setStartIconVisible(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationAction: java.util.List castList(java.lang.Class,java.util.Collection)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onVerticalScrollEvent(boolean)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.String getData()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$2: ContentBlockerHandler$2(com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler,com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setStrokeColor(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void saveWebArchive(java.lang.String,boolean,android.webkit.ValueCallback)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void onResume()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void wakeUpScreen(android.content.Context)
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.Throwable)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$SyncLoadResourceWithCustomSchemeCallback: java.lang.Object decodeResult(java.lang.Object)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods valueOf(java.lang.String)
io.flutter.plugins.firebase.analytics.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void show()
me.carda.awesome_notifications.core.managers.SharedManager: SharedManager(me.carda.awesome_notifications.core.utils.StringUtils,java.lang.String,java.lang.Class,java.lang.String)
com.google.android.material.chip.Chip: void setTextStartPaddingResource(int)
com.google.android.datatransport.cct.internal.QosTier: com.google.android.datatransport.cct.internal.QosTier valueOf(java.lang.String)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator[] values()
io.grpc.okhttp.OkHttpFrameLogger$Direction: io.grpc.okhttp.OkHttpFrameLogger$Direction[] values()
com.google.android.material.chip.Chip: com.google.android.material.resources.TextAppearance getTextAppearance()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void dispose()
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: ClientCertResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.gson.stream.JsonReader: java.lang.String nextString()
me.carda.awesome_notifications.AwesomeNotificationsFlutterExtension: void initialize()
com.google.android.gms.dynamite.DynamiteModule$DynamiteLoaderClassLoader: DynamiteModule$DynamiteLoaderClassLoader()
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.models.NotificationButtonModel: void adaptInputFieldToRequireText()
io.grpc.internal.DnsNameResolverProvider: boolean isAvailable()
com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld: void setName(java.lang.String)
com.google.android.gms.measurement.AppMeasurement: void logEventInternal(java.lang.String,java.lang.String,android.os.Bundle)
me.carda.awesome_notifications.core.utils.SerializableUtils: java.lang.Object serializeCalendar(java.util.Calendar)
io.grpc.internal.JndiResourceResolverFactory: JndiResourceResolverFactory()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPrefixTextColor()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getOrCreatePerImageReader(android.media.ImageReader)
com.google.android.gms.internal.measurement.zzic: zzic()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$RenderProcessUnresponsiveCallback: java.lang.Integer decodeResult(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void detachFromNativeAndReleaseResources()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setMaxImageSize(int)
com.google.android.material.chip.Chip: void setHideMotionSpec(com.google.android.material.animation.MotionSpec)
io.grpc.NameResolver$Listener2: NameResolver$Listener2()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: ContentBlockerTrigger(java.lang.String,java.lang.Boolean,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List,java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabsHelper: boolean hasSpecializedHandlerIntents(android.content.Context,android.content.Intent)
io.flutter.view.FlutterCallbackInformation: io.flutter.view.FlutterCallbackInformation lookupCallbackInformation(long)
com.google.android.material.button.MaterialButton: android.text.Layout$Alignment getActualTextAlignment()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZ(float)
com.google.gson.stream.JsonWriter: boolean isLenient()
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(int)
com.google.gson.internal.bind.TypeAdapters$20: TypeAdapters$20()
androidx.core.view.MenuItemCompat$Api26Impl: android.content.res.ColorStateList getIconTintList(android.view.MenuItem)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.Boolean lambda$getAllBooleanValues$2(android.database.Cursor,int)
com.google.android.material.chip.Chip: float getIconEndPadding()
com.pichillilorenzo.flutter_inappwebview_android.types.BaseCallbackResultImpl: void error(java.lang.String,java.lang.String,java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy: void onPostWebViewInitialization(android.hardware.display.DisplayManager)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: void prefetchUrl(java.lang.String,android.webkit.ValueCallback)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void disableFenceForTest()
me.carda.awesome_notifications.core.databases.SqLiteCypher: java.lang.String getDatabaseSecret(android.content.Context)
androidx.core.view.ViewCompat$Api28Impl: boolean isAccessibilityHeading(android.view.View)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityStopped(android.app.Activity)
androidx.appcompat.widget.Toolbar: void setLogo(int)
androidx.core.app.AppOpsManagerCompat$Api29Impl: int checkOpNoThrow(android.app.AppOpsManager,java.lang.String,int,java.lang.String)
me.carda.awesome_notifications.core.models.NotificationChannelModel: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
androidx.recyclerview.widget.RecyclerView: boolean isLayoutSuppressed()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$12: InAppWebViewChromeClient$12(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsResult,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void didChangeTitle(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: void setStableInsets(androidx.core.graphics.Insets)
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance[] $values()
me.carda.awesome_notifications.core.managers.CreatedManager: me.carda.awesome_notifications.core.models.returnedData.NotificationReceived getCreatedByIdAndDate(android.content.Context,java.lang.Integer,java.util.Calendar)
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase[] values()
com.google.android.gms.internal.measurement.zzfr$zza$zzc: zzfr$zza$zzc()
me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour: me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour getSafeEnum(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthenticationChallenge: java.lang.String toString()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: java.lang.String getTitle()
androidx.constraintlayout.helper.widget.Flow: void setVerticalGap(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getError()
com.google.android.material.bottomsheet.BottomSheetBehavior$BottomSheetCallback: BottomSheetBehavior$BottomSheetCallback()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void processForegroundNotificationAction(android.content.Intent,java.util.Map)
androidx.core.content.ContextCompat$Api26Impl: android.content.Intent registerReceiver(android.content.Context,android.content.BroadcastReceiver,android.content.IntentFilter,java.lang.String,android.os.Handler,int)
com.google.android.material.search.SearchView: void setToolbarTouchscreenBlocksFocus(boolean)
com.google.android.material.card.MaterialCardView: void setPreventCornerOverlap(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController getUserContentController()
com.google.android.material.chip.ChipGroup: void setShowDividerVertical(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setDistanceToTriggerSync(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: void resetInputConnection()
io.flutter.plugins.firebase.crashlytics.FirebaseCrashlyticsTestCrash: FirebaseCrashlyticsTestCrash()
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: void setHandledByClient(boolean)
me.carda.awesome_notifications.core.managers.ScheduleManager: java.lang.Boolean saveSchedule(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel)
androidx.core.view.ViewCompat$Api31Impl: void setOnReceiveContentListener(android.view.View,java.lang.String[],androidx.core.view.OnReceiveContentListener)
com.google.protobuf.ByteString: ByteString()
me.carda.awesome_notifications.core.managers.BadgeManager: BadgeManager()
com.google.android.gms.internal.ads_identifier.zzc: zzc()
io.grpc.okhttp.OkHttpServerProvider: OkHttpServerProvider()
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: void setTitle(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
androidx.core.widget.NestedScrollView: void setNestedScrollingEnabled(boolean)
android.support.v4.media.RatingCompat$Api19Impl: float getStarRating(android.media.Rating)
io.grpc.internal.DnsNameResolverProvider: int priority()
androidx.activity.ComponentActivity: void addOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$7: void onReceiveValue(java.lang.Boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: void setUrl(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.EditText getEditText()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void setChannelDelegate(com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: android.view.accessibility.AccessibilityNodeInfo$AccessibilityAction getActionScrollInDirection()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorViewAlpha(int)
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: java.lang.String getCancelButtonTitle()
com.google.android.material.textfield.TextInputLayout: void setCounterTextColor(android.content.res.ColorStateList)
com.google.firebase.firestore.model.FieldIndex: FieldIndex()
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: boolean isReadyToReceiveEvents()
com.google.android.datatransport.cct.internal.BatchedLogRequest: BatchedLogRequest()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImageReader getActiveReader()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodCancelNotification(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onCreateWindow(com.pichillilorenzo.flutter_inappwebview_android.types.CreateWindowAction,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$CreateWindowCallback)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getRootStableInsets()
androidx.browser.customtabs.CustomTabsCallback: void onActivityResized(int,int,android.os.Bundle)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onLongPressHitTestResult(com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: android.os.Looper getWebViewLooper()
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface: boolean deleteProfile(java.lang.String)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.appcompat.view.ContextThemeWrapper: ContextThemeWrapper()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getStrokeColorStateList()
io.flutter.view.TextureRegistry$ImageTextureEntry: void pushImage(android.media.Image)
com.google.android.material.datepicker.MaterialCalendar: MaterialCalendar()
com.google.android.material.search.SearchBar: void setCenterView(android.view.View)
androidx.appcompat.widget.AppCompatCheckedTextView: void setEmojiCompatEnabled(boolean)
com.google.android.material.chip.Chip: void setCloseIconSize(float)
io.flutter.view.AccessibilityViewEmbedder: void cacheVirtualIdMappings(android.view.View,int,int)
com.google.android.gms.measurement.AppMeasurement: void clearConditionalUserProperty(java.lang.String,java.lang.String,android.os.Bundle)
androidx.appcompat.widget.Toolbar: android.view.View getNavButtonView()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ServiceConnection: void onCustomTabsServiceConnected(android.content.ComponentName,androidx.browser.customtabs.CustomTabsClient)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: ChromeCustomTabsSettings()
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$1: void onReceiveValue(java.lang.Object)
com.google.protobuf.CodedInputStream: CodedInputStream()
com.google.android.material.textfield.TextInputLayout: int getHintCurrentCollapsedTextColor()
androidx.appcompat.app.AppCompatActivity: android.view.MenuInflater getMenuInflater()
me.carda.awesome_notifications.core.AwesomeNotifications: boolean isNotificationActiveOnStatusBar(int)
me.carda.awesome_notifications.core.threads.NotificationScheduler: void cancelAllSchedules(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.util.Map toMap()
kotlinx.coroutines.android.AndroidDispatcherFactory: kotlinx.coroutines.MainCoroutineDispatcher createDispatcher(java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: void setLoadType(java.util.List)
me.carda.awesome_notifications.DartBackgroundExecutor: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.firebase.crashlytics.FlutterError: FlutterError(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onInterceptTouchEvent(android.view.MotionEvent)
com.pichillilorenzo.flutter_inappwebview_android.types.ICallbackResult: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.appcompat.widget.AppCompatSpinner: void setDropDownHorizontalOffset(int)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: int getAutoSizeStepGranularity(android.widget.TextView)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionSettings: java.util.Map getRealSettings(com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerTriggerAsync(android.net.Uri)
com.google.firebase.firestore.Query$Direction: com.google.firebase.firestore.Query$Direction valueOf(java.lang.String)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver unsubscribeOnActionEvents(me.carda.awesome_notifications.core.listeners.AwesomeActionEventListener)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager: ServiceWorkerManager(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
io.grpc.ManagedChannelBuilder: ManagedChannelBuilder()
androidx.core.app.JobIntentService: androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int)
com.google.gson.internal.bind.TypeAdapters$2: TypeAdapters$2()
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: int getErrorCode()
android.support.v4.media.session.MediaSessionCompat$QueueItem$Api21Impl: long getQueueId(android.media.session.MediaSession$QueueItem)
com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult: java.util.Map toMap()
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: void setAction(java.lang.Integer)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(int)
com.google.android.material.chip.ChipGroup: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathEnd()
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: java.util.Map toMap()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: io.flutter.plugin.common.MethodChannel access$000(me.carda.awesome_notifications.AwesomeNotificationsPlugin)
io.flutter.view.AccessibilityBridge$AccessibilityFeature: io.flutter.view.AccessibilityBridge$AccessibilityFeature[] values()
com.google.android.material.appbar.MaterialToolbar: void setLogoAdjustViewBounds(boolean)
com.google.android.gms.internal.measurement.zzfo$zzf$zzb: com.google.android.gms.internal.measurement.zzfo$zzf$zzb[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$2: void onReceiveValue(java.lang.Boolean)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: NotificationChannelAction(java.lang.String,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$11: void run()
androidx.fragment.app.FragmentActivity: void supportInvalidateOptionsMenu()
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: void setConfirmButtonTitle(java.lang.String)
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy: java.lang.String getSafeName()
io.flutter.view.TextureRegistry$ImageTextureEntry: long id()
androidx.appcompat.widget.ActionBarContextView: void setVisibility(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$9: InAppWebViewChromeClient$9(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.widget.EditText,android.webkit.JsPromptResult,java.lang.String)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void setAllBooleanValues(android.content.Context,java.lang.String,java.util.Map)
me.carda.awesome_notifications.core.managers.StatusBarManager: void resetRegisters()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathStart()
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannelChannelDelegate: void onMessage(int,com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient: void onRenderProcessUnresponsive(android.webkit.WebView,androidx.webkit.WebViewRenderProcess)
androidx.appcompat.widget.AppCompatTextView: void setTextFuture(java.util.concurrent.Future)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedHttpAuthRequestCallback: java.lang.Object decodeResult(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onFormResubmission(java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$FormResubmissionCallback)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D: java.util.Map toMap()
androidx.core.content.FileProvider: FileProvider()
com.google.firestore.v1.AggregationResult: AggregationResult()
me.carda.awesome_notifications.core.managers.StatusBarManager: void closeStatusBar(android.content.Context)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay valueOf(java.lang.String)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreDestroyed(android.app.Activity)
androidx.appcompat.app.AppLocalesMetadataHolderService: AppLocalesMetadataHolderService()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper: void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int)
com.google.firestore.v1.StructuredQuery$Filter$Builder: StructuredQuery$Filter$Builder()
androidx.transition.ViewUtilsApi21$Api29Impl: void setAnimationMatrix(android.view.View,android.graphics.Matrix)
io.flutter.embedding.engine.FlutterJNI: void markTextureFrameAvailable(long)
io.grpc.okhttp.OkHttpChannelProvider: boolean isAvailable()
me.carda.awesome_notifications.core.AwesomeNotifications: boolean cancelSchedule(java.lang.Integer)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: int getCacheMode()
com.google.android.material.textfield.TextInputLayout: void setEndIconScaleType(android.widget.ImageView$ScaleType)
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.String getLocalization()
com.google.gson.stream.JsonWriter: void push(int)
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: void setWidthMils(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getBoxStrokeErrorColor()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAlignmentModeEndMargin(int)
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] values()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution$BinaryImage: CrashlyticsReport$Session$Event$Application$Execution$BinaryImage()
me.carda.awesome_notifications.core.models.NotificationChannelModel: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2: boolean nonNullSuccess(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings: java.util.Map getRealSettings(androidx.webkit.ProxyConfig)
me.carda.awesome_notifications.core.broadcasters.receivers.ScheduledNotificationReceiver: void onReceiveBroadcastEvent(android.content.Context,android.content.Intent)
android.support.v4.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript: java.lang.String toString()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setOnHierarchyChangeListener(android.view.ViewGroup$OnHierarchyChangeListener)
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: void setRequest(com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest)
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem: StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem()
me.carda.awesome_notifications.core.AwesomeNotifications: AwesomeNotifications(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void nativeSetAccessibilityFeatures(long,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onUpdateVisitedHistory(java.lang.String,boolean)
androidx.appcompat.app.AppCompatActivity: boolean performMenuItemShortcut(android.view.KeyEvent)
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertWebMessagePort(java.lang.reflect.InvocationHandler)
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: boolean getValue(java.lang.Boolean)
androidx.appcompat.widget.AbsActionBarView: void setContentHeight(int)
androidx.cardview.widget.CardView: int getContentPaddingRight()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setColorized(android.app.Notification$Builder,boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: com.pichillilorenzo.flutter_inappwebview_android.types.UserScript fromMap(java.util.Map)
me.carda.awesome_notifications.core.threads.NotificationThread: void execute(me.carda.awesome_notifications.core.models.NotificationModel)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult)
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newThumbRating(boolean)
androidx.core.widget.PopupWindowCompat$Api23Impl: int getWindowLayoutType(android.widget.PopupWindow)
androidx.appcompat.widget.AppCompatSpinner: android.content.Context getPopupContext()
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExt: void dispose()
androidx.appcompat.widget.AppCompatSpinner: int getDropDownHorizontalOffset()
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior()
androidx.fragment.app.FragmentTransitionImpl: FragmentTransitionImpl()
me.carda.awesome_notifications.BuildConfig: BuildConfig()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.content.Intent getPhotoIntent()
io.flutter.plugin.platform.PlatformViewWrapper: android.view.ViewTreeObserver$OnGlobalFocusChangeListener getActiveFocusListener()
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: boolean equals(java.lang.Object)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation getDefaultStyleInformation(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onCompletedInitialLoad()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onStopNestedScroll(android.view.View)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: boolean remove(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View access$402(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.View)
androidx.cardview.widget.CardView: void setMaxCardElevation(float)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: void setContentType(java.lang.String)
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType[] $values()
com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse: int hashCode()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt: com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt fromMap(java.util.Map)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeBroadcastReceiver: void onReceiveBroadcastEvent(android.content.Context,android.content.Intent)
com.google.android.material.textfield.TextInputLayout: int getMinWidth()
androidx.appcompat.widget.AppCompatTextView: int getLastBaselineToBottomHeight()
androidx.core.app.ActivityCompat$Api23Impl: void onSharedElementsReady(java.lang.Object)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void addWebMessageListener(java.lang.String,java.lang.String[],java.lang.reflect.InvocationHandler)
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode valueOf(java.lang.String)
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose[] values()
com.google.firebase.firestore.FirebaseFirestore: void setClientLanguage(java.lang.String)
io.grpc.SecurityLevel: io.grpc.SecurityLevel valueOf(java.lang.String)
com.google.android.material.internal.ForegroundLinearLayout: android.graphics.drawable.Drawable getForeground()
me.carda.awesome_notifications.core.utils.CompareUtils: CompareUtils()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroup(android.app.Notification$Builder,java.lang.String)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setRawInputType(int)
com.google.android.material.button.MaterialButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.helper.widget.Flow: void setFirstVerticalBias(float)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackground(android.graphics.drawable.Drawable)
me.carda.awesome_notifications.core.managers.PermissionManager: void showChannelConfigPage(android.content.Context,java.lang.String,me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler)
me.carda.awesome_notifications.core.models.NotificationContentModel: void validateIcon(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$DownloadStartListener: void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setTappableElementInsets(androidx.core.graphics.Insets)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMessagingStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.os.ConfigurationCompat$Api24Impl: android.os.LocaleList getLocales(android.content.res.Configuration)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getSuffixTextColor()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager: InAppBrowserManager(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.PlatformView,io.flutter.plugin.platform.AccessibilityEventsDelegate,int,android.view.View$OnFocusChangeListener)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: boolean isInFullscreen()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserChannelDelegate: void onMenuItemClicked(com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem)
com.pichillilorenzo.flutter_inappwebview_android.types.BaseCallbackResultImpl: java.lang.Object decodeResult(java.lang.Object)
com.google.android.material.card.MaterialCardView: void setChecked(boolean)
com.google.gson.internal.JsonReaderInternalAccess: JsonReaderInternalAccess()
androidx.appcompat.app.AppCompatActivity: void onSupportActionModeFinished(androidx.appcompat.view.ActionMode)
androidx.appcompat.app.AppCompatActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$5: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse)
com.google.android.material.shape.ShapePath$PathOperation: ShapePath$PathOperation()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: WebViewChannelDelegateMethods(java.lang.String,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$PermissionRequestProgress: com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$PermissionRequestProgress valueOf(java.lang.String)
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: me.carda.awesome_notifications.core.models.returnedData.NotificationReceived fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void access$501(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat,android.webkit.WebView,android.webkit.ClientCertRequest)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void addWebMessageListener(com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener)
androidx.constraintlayout.widget.Guideline: void setGuidelineBegin(int)
com.google.android.datatransport.cct.internal.ExternalPRequestContext: ExternalPRequestContext()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$9: void onReceiveValue(java.lang.String)
me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException: AwesomeNotificationsException(java.lang.String,java.lang.String,java.lang.String,java.lang.Exception)
me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException: AwesomeNotificationsException(java.lang.String,java.lang.String,java.lang.String)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerController()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setUseCompatPadding(boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.lang.String getContentDisposition()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$100(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient: void onRenderProcessResponsive(android.webkit.WebView,androidx.webkit.WebViewRenderProcess)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityCreated(com.google.android.gms.dynamic.IObjectWrapper,android.os.Bundle,long)
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type[] values()
me.carda.awesome_notifications.DartBackgroundExecutor: void initializeReverseMethodChannel(io.flutter.plugin.common.BinaryMessenger)
me.carda.awesome_notifications.core.enumerators.GroupSort: me.carda.awesome_notifications.core.enumerators.GroupSort getSafeEnum(java.lang.String)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: boolean setInt(android.content.Context,java.lang.String,java.lang.String,int)
androidx.media.app.NotificationCompat$Api21Impl: void setMediaSession(android.app.Notification$MediaStyle,android.media.session.MediaSession$Token)
androidx.appcompat.widget.Toolbar: void setContentInsetEndWithActions(int)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.Object getRow(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.Object,me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB$iGetRow)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence)
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: me.carda.awesome_notifications.core.models.returnedData.NotificationReceived fromJson(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceDestroyed()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$5: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse)
com.pichillilorenzo.flutter_inappwebview_android.types.SyncBaseCallbackResultImpl: void notImplemented()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$6: void defaultBehaviour(java.lang.Object)
androidx.appcompat.widget.SearchView$SearchAutoComplete: int getSearchViewTextMinWidthDp()
com.google.firestore.v1.StructuredAggregationQuery$Builder: StructuredAggregationQuery$Builder()
com.dexterous.flutterlocalnotifications.models.PersonDetails: PersonDetails(java.lang.Boolean,java.lang.Object,com.dexterous.flutterlocalnotifications.models.IconSource,java.lang.Boolean,java.lang.String,java.lang.String,java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: void setCradleVerticalOffset(float)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: boolean isForMainFrame()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowContentAccess()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setTargetOffsetTopAndBottom(int)
androidx.appcompat.widget.ActionBarOverlayLayout: void setHideOnContentScrollEnabled(boolean)
androidx.appcompat.widget.AppCompatEditText: android.view.textclassifier.TextClassifier getTextClassifier()
androidx.appcompat.widget.AppCompatToggleButton: void setBackgroundResource(int)
com.google.firebase.installations.remote.InstallationResponse: InstallationResponse()
androidx.coordinatorlayout.widget.CoordinatorLayout: CoordinatorLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.internal.VisibilityAwareImageButton: int getUserSetVisibility()
com.google.firestore.v1.StructuredQuery$CompositeFilter: StructuredQuery$CompositeFilter()
androidx.fragment.app.FragmentActivity: void supportStartPostponedEnterTransition()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setSmallIcon(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
com.google.android.gms.measurement.AppMeasurementService: AppMeasurementService()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: java.lang.String getUrl()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: int hashCode()
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$3: ProxyManager$3(com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager)
com.google.protobuf.JavaType: com.google.protobuf.JavaType[] values()
me.carda.awesome_notifications.core.managers.PermissionManager: boolean isNotificationSoundGloballyAllowed(android.content.Context)
com.dexterous.flutterlocalnotifications.models.ScheduleMode: com.dexterous.flutterlocalnotifications.models.ScheduleMode valueOf(java.lang.String)
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy: me.carda.awesome_notifications.core.enumerators.NotificationPrivacy getSafeEnum(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterImageTexture(long,long,java.lang.ref.WeakReference)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWebauthnSupport(int)
me.carda.awesome_notifications.core.completion_handlers.BitmapCompletionHandler: void handle(byte[],me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException)
io.flutter.embedding.engine.FlutterJNI: void setRefreshRateFPS(float)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager: void openWithSystemBrowser(android.app.Activity,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.measurement.zzjt$zzd: zzjt$zzd()
me.carda.awesome_notifications.core.managers.ActionManager: boolean saveAction(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
me.carda.awesome_notifications.core.utils.EnumUtils: me.carda.awesome_notifications.core.utils.EnumUtils getInstance()
com.google.android.material.datepicker.MaterialTextInputPicker: MaterialTextInputPicker()
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: java.util.Map toMap()
com.google.android.material.bottomappbar.BottomAppBar: int getMenuAlignmentMode()
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedClientCertRequestCallback: java.lang.Object decodeResult(java.lang.Object)
me.carda.awesome_notifications.core.managers.StatusBarManager: java.util.Map loadNotificationIdFromPreferences(java.lang.String)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar: FlutterFirebaseFirestoreRegistrar()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setEmojiCompatEnabled(boolean)
io.flutter.plugins.webviewflutter.AndroidWebkitLibraryPigeonInstanceManagerApi$Companion: AndroidWebkitLibraryPigeonInstanceManagerApi$Companion()
androidx.fragment.app.FragmentContainerView: androidx.fragment.app.Fragment getFragment()
com.dexterous.flutterlocalnotifications.models.RepeatInterval: com.dexterous.flutterlocalnotifications.models.RepeatInterval valueOf(java.lang.String)
me.carda.awesome_notifications.core.services.AutoCancelService: void onTaskRemoved(android.content.Intent)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: void remove()
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingPlugin: FlutterFirebaseMessagingPlugin()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: boolean canScrollVertically()
com.pichillilorenzo.flutter_inappwebview_android.webview.FlutterWebViewFactory: io.flutter.plugin.platform.PlatformView create(android.content.Context,int,java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: java.lang.String toString()
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setTooltipText(android.view.MenuItem,java.lang.CharSequence)
androidx.core.view.ViewCompat$Api21Impl: float getZ(android.view.View)
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PromisePolyfillJS: PromisePolyfillJS()
com.google.android.material.appbar.AppBarLayout: int getDownNestedPreScrollRange()
com.google.android.material.radiobutton.MaterialRadioButton: void setUseMaterialThemeColors(boolean)
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.models.AbstractModel templateFromJson(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: FindSession(int,int)
androidx.core.app.NotificationCompatBuilder$Api28Impl: android.app.Notification$Action$Builder setSemanticAction(android.app.Notification$Action$Builder,int)
kotlinx.coroutines.internal.OpDescriptor: OpDescriptor()
io.grpc.internal.PickFirstLoadBalancerProvider: int getPriority()
com.google.common.collect.Maps$EntryFunction: com.google.common.collect.Maps$EntryFunction valueOf(java.lang.String)
me.carda.awesome_notifications.core.AwesomeNotifications: void resetGlobalBadgeCounter()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ShouldOverrideUrlLoadingCallback: com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy decodeResult(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$7: void onReceiveValue(java.lang.Object)
com.google.android.gms.common.api.GoogleApiActivity: GoogleApiActivity()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getStrokeColor()
androidx.appcompat.widget.ActionMenuView: void setPresenter(androidx.appcompat.widget.ActionMenuPresenter)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$6: void onReceiveValue(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedClientCertRequestCallback: com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse decodeResult(java.lang.Object)
androidx.media.AudioAttributesImplApi26Parcelizer: void write(androidx.media.AudioAttributesImplApi26,androidx.versionedparcelable.VersionedParcel)
com.google.android.datatransport.cct.internal.ExperimentIds: ExperimentIds()
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setAdapter(android.widget.ListAdapter)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setAnswerButtonColorHint(android.app.Notification$CallStyle,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void scrollBy(java.lang.Integer,java.lang.Integer,java.lang.Boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks$1: void onActivityStarted(android.app.Activity)
androidx.appcompat.widget.AppCompatTextHelper$Api21Impl: java.util.Locale forLanguageTag(java.lang.String)
com.google.android.datatransport.runtime.TransportContext: TransportContext()
io.grpc.internal.PickFirstLoadBalancerProvider: PickFirstLoadBalancerProvider()
androidx.browser.customtabs.CustomTabsServiceConnection: void setApplicationContext(android.content.Context)
me.carda.awesome_notifications.core.managers.StatusBarManager: java.util.List unregisterActiveGroupKey(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidthFocused()
androidx.recyclerview.widget.RecyclerView: void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods[] $values()
com.google.firebase.sessions.api.SessionSubscriber$Name: com.google.firebase.sessions.api.SessionSubscriber$Name valueOf(java.lang.String)
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: java.util.Map toMap()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequest)
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: void registerUserActionEvent(me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeColor(int)
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(java.lang.CharSequence)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultCallback)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void setAllStringValues(android.content.Context,java.lang.String,java.util.Map)
com.google.android.material.textfield.TextInputLayout: void setHintInternal(java.lang.CharSequence)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: java.util.Map toMap()
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: java.lang.String toString()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setWakeUpScreen(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel)
androidx.core.app.RemoteInput$Api29Impl: int getEditChoicesBeforeSending(java.lang.Object)
io.grpc.internal.KeepAliveManager$State: io.grpc.internal.KeepAliveManager$State[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPreStopped(android.app.Activity)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onScaleChanged(android.webkit.WebView,float,float)
io.flutter.embedding.engine.FlutterJNI: void nativeDeferredComponentInstallFailure(int,java.lang.String,boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$19: void onReceiveValue(java.lang.Object)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onReceivedIcon(byte[])
androidx.core.text.HtmlCompat$Api24Impl: android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler)
me.carda.awesome_notifications.core.AwesomeNotifications: void initialize(android.content.Context)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] $values()
androidx.core.widget.NestedScrollView: void setSmoothScrollingEnabled(boolean)
com.google.android.material.search.SearchView: int getStatusBarHeight()
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: java.util.Map toMap()
com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation: DefaultStyleInformation(java.lang.Boolean,java.lang.Boolean)
com.google.android.material.card.MaterialCardView: void setStrokeColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: float getCloseIconStartPadding()
androidx.appcompat.app.AppCompatActivity: void onLocalesChanged(androidx.core.os.LocaleListCompat)
com.google.android.material.chip.ChipGroup: void setSingleSelection(int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getWebViewMediaIntegrityApiDefaultStatus()
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: void setOrigin(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getInsets(int)
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: me.carda.awesome_notifications.core.enumerators.ForegroundStartMode getSafeEnum(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: android.view.View platformViewOfNode(int)
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior()
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator valueOf(java.lang.String)
me.carda.awesome_notifications.core.managers.ChannelManager: android.net.Uri retrieveSoundResourceUri(android.content.Context,me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType,java.lang.String)
com.google.android.material.chip.Chip: void setChipTextResource(int)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetViewId(int)
androidx.lifecycle.Lifecycle: Lifecycle()
com.google.firebase.analytics.FirebaseAnalytics$ConsentType: com.google.firebase.analytics.FirebaseAnalytics$ConsentType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.gson.stream.JsonWriter: void beforeName()
com.google.android.material.textfield.TextInputEditText: com.google.android.material.textfield.TextInputLayout getTextInputLayout()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.Object createRangeInfo(int,float,float,float)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$1: InAppWebViewChromeClient$1(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsResult,java.lang.String)
io.grpc.stub.ClientCalls$StubType: io.grpc.stub.ClientCalls$StubType valueOf(java.lang.String)
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: java.lang.String toString()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: ReportFragment$LifecycleCallbacks()
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreTransactionResult: FlutterFirebaseFirestoreTransactionResult()
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: void postMessageForInAppWebView(java.lang.Integer,com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.AwesomeNotifications: void clearStoredActions()
androidx.core.app.ComponentActivity: void getExtraDataMap$annotations()
me.carda.awesome_notifications.core.managers.DefaultsManager: me.carda.awesome_notifications.core.models.DefaultsModel getDefaults(android.content.Context)
com.google.firebase.crashlytics.FirebaseCrashlyticsKtxRegistrar: java.util.List getComponents()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.NotificationDetails from(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$LoadResourceWithCustomSchemeCallback: java.lang.Object decodeResult(java.lang.Object)
androidx.core.content.FileProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onMeasure(int,int)
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: android.print.PrintAttributes$Margins toMargins()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMinor()
androidx.appcompat.widget.ActionBarOverlayLayout: int getActionBarHideOffset()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Device: CrashlyticsReport$Session$Event$Device()
androidx.core.content.res.ResourcesCompat$Api23Impl: android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getStartIconScaleType()
com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView$-CC: void $default$onFlutterViewDetached(com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$16: boolean nonNullSuccess(java.lang.Boolean)
com.google.firestore.v1.MapValue$Builder: MapValue$Builder()
com.google.firestore.v1.Cursor: Cursor()
io.flutter.embedding.engine.FlutterJNI: void removeEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
com.google.firebase.FirebaseCommonRegistrar: FirebaseCommonRegistrar()
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertChallenge: java.security.Principal[] getPrincipals()
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: void setForMainFrame(boolean)
com.google.android.gms.internal.measurement.zzkd: com.google.android.gms.internal.measurement.zzkd[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: void setTop(double)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setCacheMode(int)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.PlatformView getView()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20()
me.carda.awesome_notifications.core.utils.CalendarUtils: java.util.Calendar getCurrentCalendar(java.util.TimeZone)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportBackgroundTintList()
io.flutter.plugins.webviewflutter.WebChromeClientProxyApi$SecureWebChromeClient$1: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startDragging(float)
com.google.android.material.textfield.TextInputLayout: void setEndIconOnLongClickListener(android.view.View$OnLongClickListener)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(float)
com.google.gson.internal.sql.SqlDateTypeAdapter: SqlDateTypeAdapter()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setSystemWindowInsets(androidx.core.graphics.Insets)
me.carda.awesome_notifications.core.AwesomeNotifications: void setChannels(android.content.Context,java.util.List)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigPictureStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void saveScheduledNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.appcompat.widget.Toolbar: int getContentInsetLeft()
androidx.core.content.FileProvider: FileProvider(int)
com.google.android.material.drawable.DrawableUtils$OutlineCompatR: void setPath(android.graphics.Outline,android.graphics.Path)
androidx.core.view.ViewCompat$Api26Impl: boolean isKeyboardNavigationCluster(android.view.View)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$FilesPayload$File: CrashlyticsReport$FilesPayload$File()
me.carda.awesome_notifications.core.utils.HtmlUtils: java.lang.String adaptFlutterColorsToJava(java.lang.String)
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode[] values()
io.flutter.plugins.firebase.analytics.FlutterFirebaseAnalyticsPlugin: FlutterFirebaseAnalyticsPlugin()
io.flutter.embedding.engine.FlutterJNI: long nativeAttach(io.flutter.embedding.engine.FlutterJNI)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setVerificationIcon(android.app.Notification$CallStyle,android.graphics.drawable.Icon)
androidx.legacy.content.WakefulBroadcastReceiver: WakefulBroadcastReceiver()
androidx.cardview.widget.CardView: boolean getUseCompatPadding()
com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript: boolean isRequiredInAllContentWorlds()
com.google.android.material.internal.NavigationMenuItemView: void setHorizontalPadding(int)
io.grpc.internal.PickFirstLoadBalancerProvider: java.lang.String getPolicyName()
androidx.appcompat.widget.ActionBarContainer: void setSplitBackground(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void setLocalizationPlugin(io.flutter.plugin.localization.LocalizationPlugin)
com.google.android.gms.internal.measurement.zzfy$zze: zzfy$zze()
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel[] values()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$ProcessDetails: CrashlyticsReport$Session$Event$Application$ProcessDetails()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$6: boolean nonNullSuccess(java.lang.Object)
com.google.protobuf.Writer$FieldOrder: com.google.protobuf.Writer$FieldOrder valueOf(java.lang.String)
me.carda.awesome_notifications.core.managers.ScheduleManager: void commitChanges(android.content.Context)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeErrorColor(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$15: InAppWebViewChromeClient$15(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsResult)
io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType: io.flutter.embedding.engine.systemchannels.PlatformChannel$HapticFeedbackType valueOf(java.lang.String)
androidx.activity.ComponentActivity: void onSaveInstanceState(android.os.Bundle)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$2: MyCookieManager$2(com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: InAppBrowserActivity()
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: void setPermanentPersistence(boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult: void setExtra(java.lang.String)
com.google.common.util.concurrent.internal.InternalFutureFailureAccess: InternalFutureFailureAccess()
me.carda.awesome_notifications.DartBackgroundExecutor: void setPluginRegistrant(io.flutter.plugin.common.PluginRegistry$PluginRegistrantCallback)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedSize()
androidx.core.view.WindowInsetsCompat$Impl: boolean isConsumed()
androidx.activity.ComponentActivity: void access$001(androidx.activity.ComponentActivity)
me.carda.awesome_notifications.core.utils.MapUtils: com.google.common.base.Optional extractArgument(java.lang.Object,java.lang.Class)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.LogLevel getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.LogLevel)
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender: void sendBroadcastBackgroundAction(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
com.google.android.material.textfield.TextInputLayout: TextInputLayout(android.content.Context,android.util.AttributeSet)
io.grpc.util.OutlierDetectionLoadBalancerProvider: io.grpc.NameResolver$ConfigOrError parseLoadBalancingPolicyConfig(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$3: void run()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: android.webkit.WebView$HitTestResult getHitTestResult()
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getStartIconDrawable()
com.google.android.material.checkbox.MaterialCheckBox: java.lang.String getButtonStateDescription()
androidx.core.graphics.drawable.IconCompat$Api30Impl: android.graphics.drawable.Icon createWithAdaptiveBitmapContentUri(android.net.Uri)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.lang.String toString()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onNavigationEvent(int)
com.google.android.material.datepicker.MaterialDatePicker: MaterialDatePicker()
com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse: com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse fromMap(java.util.Map)
com.google.android.material.internal.NavigationMenuItemView: void setIcon(android.graphics.drawable.Drawable)
com.google.gson.stream.JsonWriter: void setSerializeNulls(boolean)
com.google.firebase.firestore.AggregateSource: com.google.firebase.firestore.AggregateSource valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: void removeHttpAuthCredentials(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)
com.google.android.material.textfield.TextInputLayout: void setEditText(android.widget.EditText)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$FormResubmissionCallback: java.lang.Integer decodeResult(java.lang.Object)
me.carda.awesome_notifications.core.utils.CalendarUtils: java.util.Calendar calendarFromString(java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.R: R()
com.google.android.gms.internal.measurement.zzfy$zzc$zza: zzfy$zzc$zza()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialDao: long delete(com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpec(com.google.android.material.animation.MotionSpec)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: boolean startPickerIntent(android.webkit.ValueCallback,java.lang.String[],boolean,boolean)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks$1: void onActivityPaused(android.app.Activity)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setTextStartPadding(float)
com.google.android.gms.internal.measurement.zzgd$zzc: zzgd$zzc()
com.google.gson.stream.JsonWriter: void writeDeferredName()
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings$DirectoryBasePaths: com.pichillilorenzo.flutter_inappwebview_android.ISettings parse(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: java.lang.String toString()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Action$Builder setAllowGeneratedReplies(android.app.Notification$Action$Builder,boolean)
me.carda.awesome_notifications.core.managers.StatusBarManager: void registerActiveNotification(me.carda.awesome_notifications.core.models.NotificationModel,int)
androidx.lifecycle.MutableLiveData: MutableLiveData()
me.carda.awesome_notifications.core.utils.StringUtils: java.lang.String getValueOrDefault(java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy: com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPlatformMessage(long,java.lang.String,java.nio.ByteBuffer,int,int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressViewEndTarget(boolean,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.util.Map requestFocusNodeHref()
com.google.android.material.search.SearchBar: int getDefaultMarginVerticalResource()
androidx.appcompat.widget.ScrollingTabContainerView: void setAllowCollapse(boolean)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void createProgressView()
androidx.core.view.WindowInsetsCompat$Impl: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
me.carda.awesome_notifications.core.models.returnedData.NotificationReceived: me.carda.awesome_notifications.core.models.NotificationContentModel fromJson(java.lang.String)
io.flutter.plugins.GeneratedPluginRegistrant: void registerWith(io.flutter.embedding.engine.FlutterEngine)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportButtonTintList()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getDropDataProvider()
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
android.support.v4.media.RatingCompat$Api19Impl: int getRatingStyle(android.media.Rating)
androidx.datastore.preferences.protobuf.FieldType$Collection: androidx.datastore.preferences.protobuf.FieldType$Collection valueOf(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: android.content.res.ColorStateList getBackgroundTint()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader29()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.util.Map getWebMessageChannels()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$1: void defaultBehaviour(java.lang.Object)
androidx.core.content.FileProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])
me.carda.awesome_notifications.R$id: R$id()
me.carda.awesome_notifications.DartScheduledNotificationReceiver: DartScheduledNotificationReceiver()
androidx.appcompat.widget.AppCompatEditText: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
me.carda.awesome_notifications.core.managers.StatusBarManager: void removeIndexActiveNotificationChannel(android.content.SharedPreferences$Editor,java.lang.String)
me.carda.awesome_notifications.core.models.AbstractModel: java.lang.Double getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,java.lang.Double)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate: void didUpdateVisitedHistory(java.lang.String)
androidx.appcompat.widget.AppCompatButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.firebase.firestore.model.MutableDocument$DocumentState: com.google.firebase.firestore.model.MutableDocument$DocumentState[] values()
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalBias(float)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: void setConfirmButtonTitle(java.lang.String)
com.google.firebase.sessions.DataCollectionState: com.google.firebase.sessions.DataCollectionState valueOf(java.lang.String)
androidx.media.app.NotificationCompat$Api21Impl: android.app.Notification$MediaStyle fillInMediaStyle(android.app.Notification$MediaStyle,int[],android.support.v4.media.session.MediaSessionCompat$Token)
androidx.appcompat.widget.ButtonBarLayout: void setAllowStacking(boolean)
me.carda.awesome_notifications.core.builders.NotificationBuilder: android.app.PendingIntent getPendingDismissIntent(android.content.Context,android.content.Intent,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$SafeBrowsingHitCallback: com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse decodeResult(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.ChannelDelegateImpl: io.flutter.plugin.common.MethodChannel getChannel()
io.grpc.internal.JsonParser: JsonParser()
androidx.fragment.app.Fragment: Fragment()
com.google.gson.stream.JsonReader$1: void promoteNameToValue(com.google.gson.stream.JsonReader)
com.google.android.material.chip.Chip: float getIconStartPadding()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodCancelAllSchedules(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setVerificationText(android.app.Notification$CallStyle,java.lang.CharSequence)
com.google.firestore.v1.ListenResponse: ListenResponse()
androidx.activity.ComponentActivity: void ensureViewModelStore()
androidx.webkit.WebViewClientCompat: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,java.lang.reflect.InvocationHandler)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$PermissionRequestCallback: com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse decodeResult(java.lang.Object)
io.grpc.internal.ReflectionLongAdderCounter: ReflectionLongAdderCounter()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getStatics()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
androidx.webkit.WebViewClientCompat: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBaseTransientBottomBar(com.google.android.material.snackbar.BaseTransientBottomBar)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodDecrementBadge(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.models.NotificationButtonModel: void validate(android.content.Context)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setStyle(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.pichillilorenzo.flutter_inappwebview_android.types.URLAuthenticationChallenge: void setProtectionSpace(com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidIcon(io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
me.carda.awesome_notifications.core.managers.LostEventsManager: void saveDismissed(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
com.google.android.material.textfield.TextInputLayout: void setErrorIconDrawable(android.graphics.drawable.Drawable)
com.google.android.material.chip.Chip: float getChipStartPadding()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$RolloutAssignment: CrashlyticsReport$Session$Event$RolloutAssignment()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setBufferedPosition(android.media.session.PlaybackState$Builder,long)
me.carda.awesome_notifications.core.models.NotificationChannelModel: void validate(android.content.Context)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: int stringCount(android.content.Context,java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setHideMotionSpecResource(int)
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: int toAndroidStartMode()
com.google.android.material.shape.MaterialShapeDrawable: MaterialShapeDrawable()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$3: void onReceiveValue(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: void setCancelButtonTitle(java.lang.String)
com.google.android.gms.internal.measurement.zzje: zzje()
androidx.recyclerview.widget.RecyclerView: void setNestedScrollingEnabled(boolean)
me.carda.awesome_notifications.core.enumerators.ActionType: me.carda.awesome_notifications.core.enumerators.ActionType[] values()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodDismissNotificationsByGroupKey(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.managers.LifeCycleManager: void stopListeners()
com.google.gson.stream.JsonToken: JsonToken(java.lang.String,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$300(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
com.google.gson.internal.JsonReaderInternalAccess: void promoteNameToValue(com.google.gson.stream.JsonReader)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$CreateWindowCallback: WebViewChannelDelegate$CreateWindowCallback()
com.google.android.gms.internal.measurement.zzfr$zzd: zzfr$zzd()
com.google.android.gms.internal.measurement.zzfy$zzm: zzfy$zzm()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeaturesInNative(int)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.regex.Pattern getUrlFilterPatternCompiled()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getPosition(android.media.session.PlaybackState)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate: void didStartNavigation(java.lang.String)
com.google.android.material.appbar.MaterialToolbar: void setTitleCentered(boolean)
androidx.appcompat.widget.SearchView: void setQueryHint(java.lang.CharSequence)
androidx.window.layout.adapter.sidecar.SidecarAdapter: SidecarAdapter()
androidx.core.view.ViewCompat$Api21Impl: float getTranslationZ(android.view.View)
androidx.cardview.widget.CardView: boolean getPreventCornerOverlap()
me.carda.awesome_notifications.core.managers.PermissionManager: java.lang.Boolean areNotificationsGloballyAllowed(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase getInstance(android.content.Context)
androidx.core.content.FileProvider: int modeToMode(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback)
com.google.android.material.search.SearchView: java.lang.CharSequence getSearchPrefixText()
androidx.appcompat.widget.AppCompatImageView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: InAppWebViewSettings()
androidx.core.app.NotificationCompat$MessagingStyle$Api28Impl: android.app.Notification$MessagingStyle setGroupConversation(android.app.Notification$MessagingStyle,boolean)
me.carda.awesome_notifications.core.models.NotificationCrontabModel: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface: void dispose()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: int hashCode()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getCallbackHandle(io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$5: boolean onTouch(android.view.View,android.view.MotionEvent)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: java.util.List getActivityResultListeners()
me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour: me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse: boolean equals(java.lang.Object)
androidx.activity.ComponentActivity: void addOnTrimMemoryListener(androidx.core.util.Consumer)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPreCreated(android.app.Activity,android.os.Bundle)
com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt: com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.Util$1: Util$1(io.flutter.plugin.common.MethodChannel,java.lang.String,java.lang.Object,com.pichillilorenzo.flutter_inappwebview_android.types.SyncBaseCallbackResultImpl)
androidx.cardview.widget.CardView: void setCardBackgroundColor(int)
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$2: void run()
androidx.core.app.AlarmManagerCompat$Api21Impl: android.app.AlarmManager$AlarmClockInfo createAlarmClockInfo(long,android.app.PendingIntent)
com.google.gson.internal.bind.TypeAdapters$7: TypeAdapters$7()
com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse: boolean equals(java.lang.Object)
me.carda.awesome_notifications.core.utils.BitmapUtils: java.lang.String cleanMediaPath(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: java.lang.String getConfirmButtonTitle()
me.carda.awesome_notifications.core.builders.NotificationBuilder: android.content.Intent buildNotificationIntentFromNotificationModel(android.content.Context,android.content.Intent,java.lang.String,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,me.carda.awesome_notifications.core.enumerators.ActionType,java.lang.Class)
me.carda.awesome_notifications.core.managers.PermissionManager: void showPreciseAlarmPage(android.content.Context,me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler)
io.flutter.view.TextureRegistry$SurfaceProducer: int getWidth()
com.pichillilorenzo.flutter_inappwebview_android.Util: java.io.InputStream getFileAsset(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: void openTrustedWebActivity(android.app.Activity,androidx.browser.trusted.TrustedWebActivityIntent,android.net.Uri,java.util.Map,android.net.Uri,int)
io.flutter.embedding.android.FlutterView: io.flutter.plugin.common.BinaryMessenger getBinaryMessenger()
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: java.lang.String toLanguageTag(java.util.Locale)
me.carda.awesome_notifications.core.models.NotificationIntervalModel: java.lang.String toJson()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: boolean canApplyTheme(android.graphics.drawable.Drawable)
me.carda.awesome_notifications.core.utils.CalendarUtils: java.util.Calendar getNowCalendar()
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle$Api24Impl: android.app.Notification$Style createDecoratedCustomViewStyle()
me.carda.awesome_notifications.core.AwesomeNotifications: void getDrawableData(java.lang.String,me.carda.awesome_notifications.core.completion_handlers.BitmapCompletionHandler)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments: AccessibilityViewCommand$MoveWindowArguments()
me.carda.awesome_notifications.core.utils.CompareUtils: boolean assertEqualLists(java.lang.Object,java.lang.Object)
androidx.transition.FragmentTransitionSupport: FragmentTransitionSupport()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void startRearDisplayPresentationSession(android.app.Activity,androidx.window.extensions.core.util.function.Consumer)
com.google.firebase.firestore.core.EventManager$ListenerRemovalAction: com.google.firebase.firestore.core.EventManager$ListenerRemovalAction[] values()
androidx.activity.ComponentActivity: void removeOnConfigurationChangedListener(androidx.core.util.Consumer)
com.google.firebase.concurrent.ExecutorsRegistrar: ExecutorsRegistrar()
androidx.core.app.NotificationManagerCompat$Api26Impl: android.app.NotificationChannel getNotificationChannel(android.app.NotificationManager,java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: int getCollapsedPadding()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintList(android.content.res.ColorStateList)
com.google.firebase.crashlytics.ktx.FirebaseCrashlyticsKtxRegistrar: java.util.List getComponents()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$3: void onReceiveValue(java.lang.Object)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setScaleX(float)
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: java.lang.String getConfirmButtonTitle()
kotlinx.coroutines.JobNode: JobNode()
io.flutter.view.TextureRegistry$ImageTextureEntry: void release()
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: void setResultCount(int)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: void onBroadcastSilentActionNotification(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
androidx.core.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])
me.carda.awesome_notifications.FlutterBitmapUtils: FlutterBitmapUtils()
com.google.android.material.chip.ChipGroup: void setSingleSelection(boolean)
androidx.datastore.preferences.PreferencesProto$Value: PreferencesProto$Value()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$1: ContentBlockerHandler$1(com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler,java.lang.String[],com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,java.util.concurrent.CountDownLatch)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void injectDeferredObject(java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld,java.lang.String,android.webkit.ValueCallback)
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.google.firebase.firestore.FirebaseFirestoreException$Code: com.google.firebase.firestore.FirebaseFirestoreException$Code valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: android.os.IBinder getWindowToken()
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
androidx.recyclerview.widget.RecyclerView: void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void removeAllFloat(android.content.Context,java.lang.String)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void onDetachedFromActivityForConfigChanges()
kotlinx.coroutines.JobCancellingNode: JobCancellingNode()
androidx.recyclerview.widget.RecyclerView: void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$PrintRequestCallback: WebViewChannelDelegate$PrintRequestCallback()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: java.util.Map getRealSettings(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setMaxEms(int)
me.carda.awesome_notifications.core.models.NotificationCalendarModel: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnChildScrollUpCallback(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnChildScrollUpCallback)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void forceBringAppToForeground(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.types.CreateWindowAction: java.util.Map toMap()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: void setUrlFilterIsCaseSensitive(java.lang.Boolean)
me.carda.awesome_notifications.core.managers.PermissionManager: void requestUserPermissions(android.app.Activity,android.content.Context,java.lang.String,java.util.List,me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler)
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnTrimMemoryListener(io.flutter.view.TextureRegistry$OnTrimMemoryListener)
me.carda.awesome_notifications.DartBackgroundExecutor: void closeBackgroundIsolate()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String generateCodeForScriptEvaluation(java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld)
com.google.android.gms.internal.base.zac: zac()
com.google.firebase.firestore.AggregateSource: com.google.firebase.firestore.AggregateSource[] values()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setTimeoutAfter(me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: void setContentWorld(com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld)
me.carda.awesome_notifications.core.managers.ChannelManager: me.carda.awesome_notifications.core.models.NotificationChannelModel getChannelByKey(android.content.Context,java.lang.String)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$ApplicationExitInfo$BuildIdMappingForArch: CrashlyticsReport$ApplicationExitInfo$BuildIdMappingForArch()
me.carda.awesome_notifications.core.managers.StatusBarManager: StatusBarManager()
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: int hashCode()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: void dispose()
androidx.media.AudioAttributesImplBaseParcelizer: androidx.media.AudioAttributesImplBase read(androidx.versionedparcelable.VersionedParcel)
com.google.android.material.chip.Chip: void setBackgroundColor(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map describePerson(androidx.core.app.Person)
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipBackgroundColor()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$3: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse)
androidx.recyclerview.widget.RecyclerView: void setPreserveFocusAfterLayout(boolean)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: me.carda.awesome_notifications.core.AwesomeNotifications access$100(me.carda.awesome_notifications.AwesomeNotificationsPlugin)
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2: void run()
androidx.core.app.JobIntentService: boolean doStopCurrentWork()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction: boolean equals(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void requestNotificationsPermission(com.dexterous.flutterlocalnotifications.PermissionRequestListener)
androidx.appcompat.widget.AppCompatSpinner: void setPopupBackgroundResource(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,androidx.webkit.SafeBrowsingResponseCompat)
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: java.lang.String toString()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: androidx.browser.customtabs.CustomTabsSession getSession()
me.carda.awesome_notifications.R$animator: R$animator()
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: void setHandledByClient(boolean)
com.google.android.material.bottomappbar.BottomAppBar: void setSubtitle(java.lang.CharSequence)
com.google.android.material.textfield.TextInputLayout: void setExpandedHintEnabled(boolean)
androidx.core.view.ViewCompat$Api30Impl: androidx.core.view.WindowInsetsControllerCompat getWindowInsetsController(android.view.View)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getCounterOverflowDescription()
androidx.datastore.preferences.protobuf.FloatArrayList: FloatArrayList()
com.google.android.material.chip.Chip: void setChipStrokeWidth(float)
com.google.firebase.firestore.ktx.FirebaseFirestoreKtxRegistrar: FirebaseFirestoreKtxRegistrar()
androidx.appcompat.widget.AppCompatSpinner: void setDropDownWidth(int)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean getSafeBrowsingEnabled()
com.google.android.material.chip.ChipGroup: int getVisibleChipCount()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onServiceConnected()
com.google.firebase.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
com.google.firebase.firestore.local.QueryPurpose: com.google.firebase.firestore.local.QueryPurpose valueOf(java.lang.String)
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.GroupSort getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.GroupSort)
androidx.appcompat.widget.AppCompatTextView: void setFilters(android.text.InputFilter[])
com.google.android.gms.internal.measurement.zzap: zzap()
me.carda.awesome_notifications.core.models.NotificationIntervalModel: me.carda.awesome_notifications.core.models.NotificationScheduleModel fromMap(java.util.Map)
androidx.appcompat.widget.ListPopupWindow$Api29Impl: void setIsClippedToScreen(android.widget.PopupWindow,boolean)
io.flutter.plugins.webviewflutter.WebViewProxyApi$WebViewPlatformView: android.view.View getView()
com.google.android.material.card.MaterialCardView: int getContentPaddingLeft()
com.google.android.material.textfield.TextInputLayout: int getMaxWidth()
androidx.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
io.grpc.ConnectivityState: io.grpc.ConnectivityState valueOf(java.lang.String)
me.carda.awesome_notifications.core.background.BackgroundExecutor: BackgroundExecutor()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressCircleDiameter()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$FormResubmissionCallback: java.lang.Object decodeResult(java.lang.Object)
androidx.constraintlayout.widget.Barrier: int getType()
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api24Impl: android.app.Notification$MessagingStyle$Message createMessage(java.lang.CharSequence,long,java.lang.CharSequence)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void removeRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readPlatformSpecifics(java.util.Map,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.core.graphics.drawable.IconCompat$Api28Impl: java.lang.String getResPackage(java.lang.Object)
androidx.activity.ComponentActivity: void onBackPressed()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceContract$FeedEntry: URLProtectionSpaceContract$FeedEntry()
me.carda.awesome_notifications.core.builders.NotificationBuilder: android.app.Notification createNewAndroidNotification(android.content.Context,android.content.Intent,me.carda.awesome_notifications.core.models.NotificationModel)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$13: InAppWebViewChromeClient$13(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsResult)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void release()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)
androidx.appcompat.widget.ActionMenuView: void setOverflowIcon(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: int hashCode()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: int getCircularRevealScrimColor()
androidx.appcompat.widget.MenuPopupWindow$Api29Impl: void setTouchModal(android.widget.PopupWindow,boolean)
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHintFromLayout()
me.carda.awesome_notifications.core.builders.NotificationBuilder: int[] toIntArray(java.util.ArrayList)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getSessionId(com.google.android.gms.internal.measurement.zzdo)
me.carda.awesome_notifications.core.enumerators.ActionType: me.carda.awesome_notifications.core.enumerators.ActionType valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse: java.lang.String toString()
com.google.android.material.card.MaterialCardView: void setCheckedIconTint(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$1: MyWebStorage$1(com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.Boolean setBigPictureLayout(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.chip.Chip: void setCloseIconStartPaddingResource(int)
androidx.appcompat.widget.Toolbar: void setCollapsible(boolean)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: long getLong(android.content.Context,java.lang.String,java.lang.String,long)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$1: boolean nonNullSuccess(java.lang.Object)
androidx.transition.ViewUtilsApi22$Api29Impl: void setLeftTopRightBottom(android.view.View,int,int,int,int)
me.carda.awesome_notifications.core.utils.SerializableUtils: java.util.Calendar deserializeCalendar(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView: void dispose()
androidx.core.app.NotificationCompat$CallStyle$Api28Impl: android.os.Parcelable castToParcelable(android.app.Person)
androidx.appcompat.widget.FitWindowsLinearLayout: void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setSound(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.chip.ChipGroup: int getCheckedChipId()
com.google.firestore.v1.TransactionOptions$ReadWrite: TransactionOptions$ReadWrite()
androidx.core.content.ContextCompat$Api28Impl: java.util.concurrent.Executor getMainExecutor(android.content.Context)
com.google.android.material.card.MaterialCardView: void setCheckedIconMarginResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSmallIcon(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.core.graphics.drawable.IconCompatParcelizer: androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel)
androidx.fragment.app.FragmentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
androidx.appcompat.widget.AppCompatToggleButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void setCacheEnabled(boolean)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAnchorMode()
com.google.android.material.internal.NavigationMenuItemView: void setActionView(android.view.View)
androidx.core.content.ContextCompat$Api23Impl: int getColor(android.content.Context,int)
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage: MyWebStorage(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
io.flutter.embedding.engine.FlutterJNI: void lambda$decodeImage$0(long,android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source)
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: URLCredential(java.lang.Long,java.lang.String,java.lang.String,java.lang.Long)
androidx.browser.browseractions.BrowserActionsFallbackMenuView: BrowserActionsFallbackMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setTranslationZ(float)
com.google.android.material.search.SearchView: void setStatusBarSpacerEnabled(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: java.lang.String getMimeTypeFromExtension(java.lang.String)
me.carda.awesome_notifications.core.models.AbstractModel: java.lang.String toJson()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: java.lang.String[] getAcceptedMimeType(java.lang.String[])
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: io.grpc.NameResolver$ConfigOrError parseLoadBalancingPolicyConfig(java.util.Map)
androidx.window.area.reflectionguard.ExtensionWindowAreaStatusRequirements: android.util.DisplayMetrics getWindowAreaDisplayMetrics()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Integer tryParseInt(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthResource(int)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPlaceholderText()
androidx.coordinatorlayout.widget.CoordinatorLayout: android.graphics.drawable.Drawable getStatusBarBackground()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getSystemGestureInsets()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void scrollTo(java.lang.Integer,java.lang.Integer,java.lang.Boolean)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void updateRemoteHistoryOnActiveNotification(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.returnedData.ActionReceived,me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: void onMessage(int,com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt)
androidx.core.app.AppOpsManagerCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ShouldInterceptRequestCallback: WebViewChannelDelegate$ShouldInterceptRequestCallback()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportImageTintMode()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController$2: UserContentController$2(com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController)
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage: void getQuotaForOrigin(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress valueOf(java.lang.String)
com.google.firebase.installations.remote.InstallationResponse$ResponseCode: com.google.firebase.installations.remote.InstallationResponse$ResponseCode[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: void setStatusCode(java.lang.Integer)
me.carda.awesome_notifications.core.AwesomeNotifications: void cancelAllSchedules()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsPromptCallback: java.lang.Object decodeResult(java.lang.Object)
com.google.firestore.v1.StructuredQuery$Builder: StructuredQuery$Builder()
androidx.constraintlayout.widget.R$id: R$id()
me.carda.awesome_notifications.core.managers.RepositoryManager: java.lang.String generateSharedKey(java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.PendingIntent getBroadcastPendingIntent(android.content.Context,int,android.content.Intent)
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$1: void run()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
me.carda.awesome_notifications.core.managers.DisplayedManager: java.lang.Boolean removeDisplayed(android.content.Context,java.lang.Integer,java.util.Calendar)
androidx.appcompat.widget.Toolbar: void setTitle(int)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: boolean equals(java.lang.Object)
me.carda.awesome_notifications.core.models.NotificationCalendarModel: me.carda.awesome_notifications.core.models.NotificationScheduleModel fromMap(java.util.Map)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void endAdUnitExposure(java.lang.String,long)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$14: InAppWebViewChromeClient$14(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsResult)
me.carda.awesome_notifications.FlutterBitmapUtils: android.graphics.Bitmap getBitmapFromAsset(android.content.Context,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeat(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource valueOf(java.lang.String)
me.carda.awesome_notifications.core.managers.PermissionManager: boolean gotoPreciseAlarmPage(android.content.Context)
me.carda.awesome_notifications.core.broadcasters.receivers.NotificationActionReceiver: void receiveActionIntent(android.content.Context,android.content.Intent,boolean)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodIsNotificationActiveOnStatusBar(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startScaleDownReturnToStartAnimation(int,android.view.animation.Animation$AnimationListener)
androidx.appcompat.widget.Toolbar: void setOverflowIcon(android.graphics.drawable.Drawable)
kotlin.Unit: Unit()
com.pichillilorenzo.flutter_inappwebview_android.Util: Util()
me.carda.awesome_notifications.core.utils.AudioUtils: int getAudioResourceId(android.content.Context,java.lang.String)
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
me.carda.awesome_notifications.core.databases.SqLiteCypher: java.lang.String getInstallationSecret(java.lang.String)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodDismissAllNotifications(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.TextView getMessageView()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setOnRefreshListener(androidx.swiperefreshlayout.widget.SwipeRefreshLayout$OnRefreshListener)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt: java.lang.String getWebMessageChannelId()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void doUpdateVisitedHistory(android.webkit.WebView,java.lang.String,boolean)
com.google.android.material.shape.RoundedCornerTreatment: RoundedCornerTreatment()
androidx.appcompat.widget.ResourceManagerInternal$DrawableDelegate: ResourceManagerInternal$DrawableDelegate()
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: java.lang.String getValue()
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: void init()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void clearFocus()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: boolean onCreate()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void injectJavascriptFileFromUrl(java.lang.String,java.util.Map)
me.carda.awesome_notifications.core.managers.DismissedManager: DismissedManager()
com.google.android.material.chip.Chip: void setChipBackgroundColorResource(int)
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.NotificationCategory getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.NotificationCategory)
com.google.android.material.internal.CheckableImageButton: void setPressed(boolean)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType fromValue(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: AppCompatCheckBox(android.content.Context,android.util.AttributeSet)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean onNestedFling(android.view.View,float,float,boolean)
androidx.constraintlayout.widget.Barrier: void setMargin(int)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.transition.Transition$Impl26: void setCurrentPlayTime(android.animation.Animator,long)
com.google.firebase.sessions.DataCollectionStatus: DataCollectionStatus()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: int hashCode()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatPressedTranslationZResource(int)
androidx.appcompat.widget.AppCompatSpinner: void setPrompt(java.lang.CharSequence)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$12: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.firestore.v1.StructuredQuery$FieldFilter$Builder: StructuredQuery$FieldFilter$Builder()
androidx.core.app.RemoteInput$Api26Impl: java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String)
me.carda.awesome_notifications.core.models.NotificationContentModel: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
androidx.appcompat.widget.AppCompatImageButton: void setImageResource(int)
com.google.android.gms.internal.measurement.zzb: zzb()
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.utils.StringUtils: StringUtils()
com.google.android.material.appbar.ViewOffsetBehavior: ViewOffsetBehavior()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlocker: java.lang.String toString()
com.google.android.material.chip.Chip: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegateMethods[] values()
com.pichillilorenzo.flutter_inappwebview_android.R$drawable: R$drawable()
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerManager: androidx.webkit.TracingConfig buildTracingConfig(com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingSettings)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event: CrashlyticsReport$Session$Event()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void access$601(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat,android.webkit.WebView,android.webkit.WebResourceRequest,int,androidx.webkit.SafeBrowsingResponseCompat)
androidx.appcompat.widget.AppCompatEditText: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.firestore.v1.DocumentChange: DocumentChange()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMinor()
androidx.core.view.ViewCompat$Api30Impl: boolean isImportantForContentCapture(android.view.View)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate$ShouldInterceptRequestCallback: java.lang.Object decodeResult(java.lang.Object)
me.carda.awesome_notifications.core.externalLibs.CronExpression: void validateExpression(java.lang.String)
com.google.android.gms.internal.measurement.zzfy$zzn$zza: zzfy$zzn$zza()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.lang.Boolean getUrlFilterIsCaseSensitive()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void findAllAsync(java.lang.String)
com.google.gson.JsonElement: JsonElement()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatHoveredFocusedTranslationZResource(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityPaused(android.app.Activity)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: HiddenLifecycleReference(androidx.lifecycle.Lifecycle)
com.google.android.material.chip.Chip: void setIconEndPaddingResource(int)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime: com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime fromValue(int)
com.google.android.material.button.MaterialButton: void setBackgroundColor(int)
com.google.android.material.textfield.TextInputLayout: int getCounterMaxLength()
io.flutter.plugin.platform.SingleViewPresentation: SingleViewPresentation(android.content.Context,android.view.Display,io.flutter.plugin.platform.AccessibilityEventsDelegate,io.flutter.plugin.platform.SingleViewPresentation$PresentationState,android.view.View$OnFocusChangeListener,boolean)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ActionBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: InAppWebViewChromeClient(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin,com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate)
com.google.protobuf.AbstractMessageLite: AbstractMessageLite()
androidx.appcompat.widget.AppCompatCheckedTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: boolean canGoForward()
me.carda.awesome_notifications.core.managers.CancellationManager: boolean cancelNotification(android.content.Context,java.lang.Integer)
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: void setUsername(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt: void setSchemeFilter(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.Util: java.net.HttpURLConnection makeHttpRequest(java.lang.String,java.lang.String,java.util.Map)
me.carda.awesome_notifications.core.managers.ChannelManager: boolean isChannelEnabled(android.content.Context,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void clearMatches()
me.carda.awesome_notifications.core.models.NotificationContentModel: me.carda.awesome_notifications.core.models.NotificationContentModel fromJson(java.lang.String)
com.google.android.gms.tasks.Task: Task()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: java.util.Map toMap()
me.carda.awesome_notifications.core.threads.NotificationSender: me.carda.awesome_notifications.core.models.returnedData.NotificationReceived onPostExecute(me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D: int hashCode()
com.google.firebase.crashlytics.CrashlyticsRegistrar: CrashlyticsRegistrar()
androidx.recyclerview.widget.GapWorker$Task: GapWorker$Task()
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(android.content.res.ColorStateList)
com.google.firebase.firestore.core.EventManager$QueryListenersInfo: EventManager$QueryListenersInfo()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlocker: void setAction(com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void updateTrackingExtras(me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,android.os.Bundle)
me.carda.awesome_notifications.core.services.ForegroundService$ForegroundServiceIntent: java.lang.String toString()
androidx.appcompat.widget.AppCompatButton: void setAutoSizeTextTypeWithDefaults(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void moveToStart(float)
com.pichillilorenzo.flutter_inappwebview_android.BuildConfig: BuildConfig()
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender: void sendBroadcastNotificationDisplayed(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
androidx.appcompat.app.AppCompatDelegate: AppCompatDelegate()
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture deleteRegistrationsAsync(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest)
androidx.appcompat.widget.Toolbar: int getContentInsetRight()
androidx.profileinstaller.FileSectionType: androidx.profileinstaller.FileSectionType valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse: java.lang.Integer getAction()
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection[] values()
com.google.android.material.ripple.RippleUtils$RippleUtilsLollipop: android.graphics.drawable.Drawable createOvalRipple(android.content.Context,int)
com.google.firebase.messaging.FirebaseMessagingKtxRegistrar: FirebaseMessagingKtxRegistrar()
io.flutter.embedding.engine.FlutterJNI: void requestDartDeferredLibrary(int)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertSafeBrowsingResponse(java.lang.reflect.InvocationHandler)
me.carda.awesome_notifications.core.managers.LostEventsManager: void saveAction(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
com.google.android.material.chip.Chip: float getCloseIconSize()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: WindowInsetsCompat$BuilderImpl20(androidx.core.view.WindowInsetsCompat)
com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt: java.lang.String getSchemeFilter()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution$Exception: CrashlyticsReport$Session$Event$Application$Execution$Exception()
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: void removeSchedulesByGroupKey(android.content.Context,java.lang.String)
androidx.appcompat.widget.SearchView: void setQuery(java.lang.CharSequence)
io.flutter.plugins.webviewflutter.PigeonApiJavaScriptChannel$Companion: PigeonApiJavaScriptChannel$Companion()
androidx.appcompat.view.WindowCallbackWrapper$Api26Impl: void onPointerCaptureChanged(android.view.Window$Callback,boolean)
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView disposeAndGetFlutterWebView()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String generateWrappedCodeForDocumentStart()
org.chromium.support_lib_boundary.ProxyControllerBoundaryInterface: void setProxyOverride(java.lang.String[][],java.lang.String[],java.lang.Runnable,java.util.concurrent.Executor,boolean)
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager: void setProxyOverride(com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateSource: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateSource[] values()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: java.util.Map toMap()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$5: boolean nonNullSuccess(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: boolean onConsoleMessage(android.webkit.ConsoleMessage)
com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt: int hashCode()
kotlinx.coroutines.CancelHandlerBase: CancelHandlerBase()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.util.Map getContextMenu()
com.google.android.material.search.SearchBar: void setText(java.lang.CharSequence)
com.google.firebase.analytics.FirebaseAnalytics: com.google.firebase.analytics.FirebaseAnalytics getInstance(android.content.Context)
androidx.appcompat.app.AppCompatActivity: void setSupportProgress(int)
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$2: ProxyManager$2(com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceDestroyed(long)
io.grpc.NameResolver$ServiceConfigParser: NameResolver$ServiceConfigParser()
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void addRearDisplayPresentationStatusListener(androidx.window.extensions.core.util.function.Consumer)
me.carda.awesome_notifications.core.models.NotificationCrontabModel: me.carda.awesome_notifications.core.models.NotificationCalendarModel fromJson(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int,int)
me.carda.awesome_notifications.core.models.AbstractModel: java.util.List getValueOrDefaultListString(java.util.Map,java.lang.String,java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsMenuItem: java.lang.String getLabel()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: void resetContentWorlds()
androidx.appcompat.widget.AppCompatButton: AppCompatButton(android.content.Context,android.util.AttributeSet)
com.google.android.material.button.MaterialButton: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: java.lang.String toString()
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings$DirectoryBasePaths: java.util.Map toMap()
com.google.firestore.v1.Write$Builder: Write$Builder()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageResource(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$16: InAppWebViewChromeClient$16(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,int)
com.pichillilorenzo.flutter_inappwebview_android.types.SyncBaseCallbackResultImpl: SyncBaseCallbackResultImpl()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt fromMapWebMessageCompat(androidx.webkit.WebMessageCompat)
androidx.appcompat.widget.Toolbar: void setSubtitle(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsets access$502(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,android.view.WindowInsets)
me.carda.awesome_notifications.core.managers.LostEventsManager: java.util.Map recoverNotificationCreated(android.content.Context)
org.chromium.support_lib_boundary.WebMessageCallbackBoundaryInterface: void onMessage(java.lang.reflect.InvocationHandler,java.lang.reflect.InvocationHandler)
com.google.firebase.crashlytics.internal.common.DeliveryMechanism: com.google.firebase.crashlytics.internal.common.DeliveryMechanism valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: void onAttachedToEngine(io.flutter.embedding.engine.plugins.FlutterPlugin$FlutterPluginBinding)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver unsubscribeOnNotificationEvents(me.carda.awesome_notifications.core.listeners.AwesomeNotificationEventListener)
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: void setIcon(java.lang.Object)
androidx.appcompat.widget.AppCompatButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSize()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateQueryResponse: GeneratedAndroidFirebaseFirestore$AggregateQueryResponse()
androidx.window.core.ExtensionsUtil: ExtensionsUtil()
com.google.firestore.v1.WriteResponse: WriteResponse()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onSecondaryItemActionPerform(java.lang.String,java.lang.String)
androidx.appcompat.widget.ActionBarOverlayLayout: void setUiOptions(int)
org.chromium.support_lib_boundary.PrefetchParamsBoundaryInterface: java.util.Map getAdditionalHeaders()
com.google.firebase.crashlytics.internal.common.DeliveryMechanism: com.google.firebase.crashlytics.internal.common.DeliveryMechanism[] values()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlocker: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction getAction()
androidx.core.view.ViewCompat$Api26Impl: android.view.autofill.AutofillId getAutofillId(android.view.View)
me.carda.awesome_notifications.core.AwesomeNotifications: me.carda.awesome_notifications.core.AwesomeNotifications subscribeOnActionEvents(me.carda.awesome_notifications.core.listeners.AwesomeActionEventListener)
com.google.android.material.textfield.MaterialAutoCompleteTextView: float getPopupElevation()
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void reload()
me.carda.awesome_notifications.core.enumerators.GroupSort: GroupSort(java.lang.String,int,java.lang.String)
me.carda.awesome_notifications.core.managers.CancellationManager: void dismissAllNotifications(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: java.lang.Boolean acceptsAny(java.lang.String[])
androidx.appcompat.widget.Toolbar: void setTitleMarginStart(int)
androidx.recyclerview.widget.RecyclerView: void setLayoutFrozen(boolean)
me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType: me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType[] values()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Drawable loadDrawable(android.graphics.drawable.Icon,android.content.Context)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getResId(java.lang.Object)
androidx.core.view.WindowInsetsCompat$Impl20: void loadReflectionField()
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness valueOf(java.lang.String)
io.grpc.okhttp.internal.framed.HeadersMode: io.grpc.okhttp.internal.framed.HeadersMode[] values()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setTitle(android.media.MediaDescription$Builder,java.lang.CharSequence)
me.carda.awesome_notifications.core.utils.CompareUtils: boolean assertEqualNumbers(java.lang.Object,java.lang.Object)
com.dexterous.flutterlocalnotifications.models.NotificationStyle: com.dexterous.flutterlocalnotifications.models.NotificationStyle[] $values()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setFitsSystemWindows(boolean)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings: java.util.Map getRealSettings(com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.firestore.v1.RunAggregationQueryRequest: RunAggregationQueryRequest()
me.carda.awesome_notifications.core.threads.NotificationScheduler: void refreshScheduledNotifications(android.content.Context)
com.google.gson.stream.JsonReader: boolean isLenient()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setWebViewRendererClient(java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface: java.lang.reflect.InvocationHandler getProfile(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getPrefixText()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.android.FlutterImageView getCurrentImageSurface()
com.google.firebase.firestore.proto.UnknownDocument$Builder: UnknownDocument$Builder()
com.google.gson.internal.bind.TypeAdapters$28: TypeAdapters$28()
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: void setMessage(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setNeedsEmptyIcon(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$1: InAppWebViewClient$1(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient,com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,java.lang.String,java.util.Map,boolean)
androidx.media.app.NotificationCompat$Api21Impl: void setShowActionsInCompactView(android.app.Notification$MediaStyle,int[])
me.carda.awesome_notifications.core.utils.MediaUtils: java.lang.Boolean matchMediaType(java.lang.String,java.lang.String,java.lang.Boolean)
androidx.activity.Api34Impl: float progress(android.window.BackEvent)
androidx.appcompat.widget.ActivityChooserView$InnerLayout: ActivityChooserView$InnerLayout(android.content.Context,android.util.AttributeSet)
com.google.firestore.v1.TargetChange$TargetChangeType: com.google.firestore.v1.TargetChange$TargetChangeType valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setCloseIconResource(int)
com.google.android.material.search.SearchView: int getSoftInputMode()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setBody(me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
androidx.datastore.preferences.protobuf.CodedInputStream: CodedInputStream()
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution$Thread$Frame: CrashlyticsReport$Session$Event$Application$Execution$Thread$Frame()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderText(java.lang.CharSequence)
androidx.appcompat.widget.Toolbar: void setLogo(android.graphics.drawable.Drawable)
com.google.firebase.installations.FirebaseInstallationsException$Status: com.google.firebase.installations.FirebaseInstallationsException$Status[] values()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setBadge(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse: void setReport(boolean)
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle setConversationTitle(android.app.Notification$MessagingStyle,java.lang.CharSequence)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$1: void onReceiveValue(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBar$Behavior getBehavior()
com.google.android.datatransport.cct.internal.ClientInfo: ClientInfo()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getLastPositionUpdateTime(android.media.session.PlaybackState)
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.Object clone()
me.carda.awesome_notifications.core.utils.MapUtils: java.lang.Boolean isNullOrEmpty(java.util.Map)
com.google.android.material.appbar.HeaderBehavior: HeaderBehavior()
com.google.android.material.chip.Chip: void setChipEndPaddingResource(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getAnimationMode()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
me.carda.awesome_notifications.core.threads.NotificationScheduler: void whenComplete(java.lang.Object,me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException)
com.google.android.material.textfield.TextInputLayout: int getBoxBackgroundMode()
com.google.android.material.bottomappbar.BottomAppBar: void setBackgroundTint(android.content.res.ColorStateList)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: int getIcon(android.media.session.PlaybackState$CustomAction)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void postMessage(java.lang.reflect.InvocationHandler)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialDao: com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential find(java.lang.String,java.lang.String,java.lang.Long)
com.google.android.material.bottomappbar.BottomAppBar: void setElevation(float)
androidx.datastore.preferences.protobuf.UnknownFieldSetLite: UnknownFieldSetLite()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsMenuItem: int getId()
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: PrintJobSettings()
com.google.android.material.card.MaterialCardView: void setCheckedIconSizeResource(int)
androidx.cardview.widget.CardView: float getMaxCardElevation()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap nativeGetBitmap(long)
me.carda.awesome_notifications.core.managers.PermissionManager: void fireActivityCompletionHandle()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpec(com.google.android.material.animation.MotionSpec)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedServerTrustAuthRequestCallback: WebViewChannelDelegate$ReceivedServerTrustAuthRequestCallback()
com.google.android.material.internal.NavigationMenuItemView: NavigationMenuItemView(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: java.lang.String toString()
me.carda.awesome_notifications.core.managers.CancellationManager: boolean dismissNotificationsByChannelKey(android.content.Context,java.lang.String)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setLocalOnly(android.app.Notification$Builder,boolean)
me.carda.awesome_notifications.core.utils.CompareUtils: boolean assertEqualObjects(java.lang.Object,java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setBigTextStyle(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setTextColor(int)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setRemoteInputHistory(android.app.Notification$Builder,java.lang.CharSequence[])
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.google.android.material.chip.Chip: void setTextAppearanceResource(int)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool()
com.google.gson.internal.bind.TypeAdapters$15: TypeAdapters$15()
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: void commit(android.content.Context)
me.carda.awesome_notifications.core.enumerators.GroupSort: me.carda.awesome_notifications.core.enumerators.GroupSort[] $values()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getSubtitle()
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newHeartRating(boolean)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: android.view.WindowInsets createWindowInsetsInstance()
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager: ProxyManager(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
androidx.appcompat.widget.AppCompatRadioButton: void setEmojiCompatEnabled(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setSize(int,int)
io.grpc.Context$DirectExecutor: io.grpc.Context$DirectExecutor valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: java.util.HashMap getCopyBackForwardList()
androidx.fragment.app.FragmentActivity: void supportFinishAfterTransition()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: int getFillColor()
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance fromAndroidPriority(int)
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledHorizontalScrollFactor(android.view.ViewConfiguration)
me.carda.awesome_notifications.R$attr: R$attr()
me.carda.awesome_notifications.core.models.DefaultsModel: void validate(android.content.Context)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowTitle(java.lang.CharSequence)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime getInjectionTime()
androidx.activity.ComponentActivity: void onCreate(android.os.Bundle)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onRestoreInstanceState(android.os.Parcelable)
androidx.core.widget.TextViewCompat$Api23Impl: void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList)
me.carda.awesome_notifications.core.models.AbstractModel: java.util.Map getValueOrDefaultStringMap(java.util.Map,java.lang.String,java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: void setKeyStoreType(java.lang.String)
androidx.appcompat.widget.Toolbar: int getContentInsetStart()
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: JsPromptResponse(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.String,java.lang.Integer)
androidx.emoji2.text.MetadataRepo$Node: MetadataRepo$Node()
com.google.android.gms.internal.measurement.zzfy$zzj$zzb: com.google.android.gms.internal.measurement.zzfy$zzj$zzb[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: long getContentLength()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setErrorMessage(android.media.session.PlaybackState$Builder,java.lang.CharSequence)
androidx.cardview.widget.CardView: void setPreventCornerOverlap(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$RenderProcessUnresponsiveCallback: java.lang.Object decodeResult(java.lang.Object)
androidx.fragment.app.FragmentActivity: void onStop()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void removeLong(android.content.Context,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.managers.DismissedManager: java.util.List listDismisses(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: void setSearchResultDisplayStyle(int)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate: android.app.Activity getActivity()
com.google.android.material.button.MaterialButton: void setPressed(boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: void setLabel(java.lang.String)
androidx.collection.LongSparseArray: LongSparseArray()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void onDetachedFromActivity()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController$1: UserContentController$1(com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$6: void defaultBehaviour(java.lang.Integer)
me.carda.awesome_notifications.core.managers.DefaultsManager: DefaultsManager(android.content.Context)
me.carda.awesome_notifications.core.models.AbstractModel: void putDataOnSerializedMap(java.lang.String,java.util.Map,java.util.TimeZone)
com.google.android.material.textfield.TextInputLayout: void setHelperTextEnabled(boolean)
androidx.appcompat.widget.SearchView: int getMaxWidth()
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobManager: PrintJobManager(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$DownloadStartListener: InAppWebView$DownloadStartListener(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$SafeBrowsingHitCallback: java.lang.Object decodeResult(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void nativeInvokePlatformMessageEmptyResponseCallback(long,int)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownWidth()
io.grpc.Channel: Channel()
com.google.android.material.internal.TouchObserverFrameLayout: TouchObserverFrameLayout(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$1: void onFindResultReceived(int,int,boolean)
com.google.protobuf.Timestamp: Timestamp()
io.grpc.internal.ClientStreamListener$RpcProgress: io.grpc.internal.ClientStreamListener$RpcProgress[] values()
me.carda.awesome_notifications.core.models.NotificationCrontabModel: java.util.Map toMap()
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface: void _callHandler(java.lang.String,java.lang.String,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void setFlutterNodeParent(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: ChromeCustomTabsChannelDelegate(com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity,io.flutter.plugin.common.MethodChannel)
com.google.android.material.textfield.TextInputLayout: void setEndIconTintList(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: URLCredential(java.lang.String,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getNotificationChannels(io.flutter.plugin.common.MethodChannel$Result)
androidx.core.widget.TextViewCompat$Api23Impl: void setHyphenationFrequency(android.widget.TextView,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getExpandedComponentIdHint()
com.google.android.material.card.MaterialCardView: void setCheckedIconMargin(int)
com.google.firestore.v1.Target$QueryTarget: Target$QueryTarget()
androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type: androidx.constraintlayout.solver.widgets.analyzer.DependencyNode$Type valueOf(java.lang.String)
me.carda.awesome_notifications.core.models.NotificationScheduleModel: me.carda.awesome_notifications.core.models.NotificationScheduleModel getScheduleModelFromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType valueOf(java.lang.String)
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: int getType()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedFling(float,float,boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: void setAllCaps(boolean)
me.carda.awesome_notifications.core.managers.ScheduleManager: java.lang.Boolean removeSchedule(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel)
android.support.v4.media.AudioAttributesCompatParcelizer: AudioAttributesCompatParcelizer()
com.google.protobuf.ExtensionRegistryLite: ExtensionRegistryLite()
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode valueOf(java.lang.String)
kotlinx.coroutines.CompletionHandlerBase: CompletionHandlerBase()
com.dexterous.flutterlocalnotifications.models.ScheduleMode$Deserializer: ScheduleMode$Deserializer()
androidx.core.widget.TextViewCompat$Api23Impl: android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView)
com.google.firestore.v1.BitSequence: BitSequence()
me.carda.awesome_notifications.R$style: R$style()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setOnClickListener(android.view.View$OnClickListener)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.util.Map getCustomSettings()
androidx.activity.ComponentActivity: void addOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
com.google.android.gms.measurement.AppMeasurement: void endAdUnitExposure(java.lang.String)
androidx.appcompat.widget.AppCompatEditText: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.models.styles.InboxStyleInformation: InboxStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void addWebMessageListener(com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener)
com.google.android.material.textfield.TextInputLayout: void setErrorTextAppearance(int)
androidx.appcompat.widget.AppCompatTextView: androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat()
androidx.recyclerview.widget.RecyclerView: androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: boolean onCreateWindow(android.webkit.WebView,boolean,boolean,android.os.Message)
com.google.android.material.chip.Chip: void setChipIconTintResource(int)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.util.Map getAllBooleanValues(android.content.Context,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: InputAwareWebView(android.content.Context,android.util.AttributeSet,int)
me.carda.awesome_notifications.core.managers.BadgeManager: boolean isBadgeAppGloballyAllowed(android.content.Context)
androidx.concurrent.futures.CallbackToFutureAdapter$Completer: CallbackToFutureAdapter$Completer()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setColorSchemeColors(int[])
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: int getHorizontalDpi()
androidx.fragment.app.FragmentActivity: void init()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateRefreshRate(float)
com.pichillilorenzo.flutter_inappwebview_android.types.ICallbackResult: void defaultBehaviour(java.lang.Object)
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails from(java.util.Map)
me.carda.awesome_notifications.core.managers.BadgeManager: boolean isBadgeGloballyAllowed(android.content.Context)
com.google.android.material.search.SearchView: android.widget.EditText getEditText()
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: java.lang.String getKeyStoreType()
androidx.activity.ComponentActivity: void onPictureInPictureModeChanged(boolean,android.content.res.Configuration)
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newStarRating(int,float)
com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture: com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture[] values()
me.carda.awesome_notifications.core.threads.NotificationScheduler: void _removeAllFromAlarm(android.content.Context,java.util.List)
androidx.appcompat.app.AppCompatActivity: void supportInvalidateOptionsMenu()
com.google.firestore.bundle.BundledQuery$Builder: BundledQuery$Builder()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt: void setDescription(java.lang.String)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator: com.google.firestore.v1.StructuredQuery$UnaryFilter$Operator valueOf(java.lang.String)
me.carda.awesome_notifications.core.utils.JsonUtils: org.json.JSONArray listToJson(java.util.List)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setGroupKey(me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: android.net.http.SslError getSslError()
androidx.webkit.WebViewClientCompat: java.lang.String[] getSupportedFeatures()
androidx.core.content.FileProvider: void attachInfo(android.content.Context,android.content.pm.ProviderInfo)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate: void dispose()
io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization: io.flutter.embedding.engine.systemchannels.TextInputChannel$TextCapitalization valueOf(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl29: WindowInsetsCompat$Impl29(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets)
com.google.android.material.chip.Chip: void setChipDrawable(com.google.android.material.chip.ChipDrawable)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numTrims()
com.google.firestore.v1.Value$Builder: Value$Builder()
com.pichillilorenzo.flutter_inappwebview_android.types.ICallbackResult: void success(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void loadCustomJavaScriptOnPageStarted(android.webkit.WebView)
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.Integer getLayoutColor(me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel)
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy: java.lang.String toString()
androidx.fragment.app.FragmentActivity: void onPause()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: boolean isAudioMuted()
com.pichillilorenzo.flutter_inappwebview_android.types.CreateWindowAction: java.lang.String toString()
com.google.gson.stream.JsonReader: java.lang.String locationString()
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Builder setForegroundServiceBehavior(android.app.Notification$Builder,int)
com.google.android.material.chip.Chip: void setChipIconEnabledResource(int)
com.google.android.material.textfield.TextInputLayout: int getErrorCurrentTextColors()
androidx.appcompat.widget.AppCompatEditText: void setTextClassifier(android.view.textclassifier.TextClassifier)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabsHelper: java.lang.String[] getPackages()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserChannelDelegate: void onExit()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.content.Intent getFileChooserIntent(java.lang.String)
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.String toJson()
com.google.android.gms.measurement.internal.zzjh: com.google.android.gms.measurement.internal.zzjh[] values()
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class,java.lang.String)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setProgressLayout(me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
com.google.android.gms.internal.measurement.zzcj: com.google.android.gms.internal.measurement.zzcj[] values()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.util.Map getAllFloatValues(android.content.Context,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings: PullToRefreshSettings()
me.carda.awesome_notifications.core.managers.PermissionManager: PermissionManager(me.carda.awesome_notifications.core.utils.StringUtils)
com.dexterous.flutterlocalnotifications.models.NotificationAction: NotificationAction(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.util.HashMap getCopyBackForwardList()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$9: void onClick(android.content.DialogInterface,int)
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: AndroidResource(java.lang.String,java.lang.String,java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: boolean isAlgorithmicDarkeningAllowed()
androidx.constraintlayout.solver.widgets.VirtualLayout: VirtualLayout()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$3: InAppWebViewManager$3(com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.button.MaterialButton: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse: com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse fromMap(java.util.Map)
com.google.android.material.card.MaterialCardView: void setStrokeWidth(int)
com.google.android.gms.internal.measurement.zzfo$zzf: zzfo$zzf()
org.chromium.support_lib_boundary.ProfileBoundaryInterface: java.lang.String getName()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void loadUrl(com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void disposeWebMessageListeners()
androidx.webkit.WebMessagePortCompat$WebMessageCallbackCompat: void onMessage(androidx.webkit.WebMessagePortCompat,androidx.webkit.WebMessageCompat)
com.google.android.material.appbar.MaterialToolbar: void setElevation(float)
me.carda.awesome_notifications.core.externalLibs.CronExpression: int getDayOfWeekNumber(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: void setRetain(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener$1: void onPostMessage(android.webkit.WebView,androidx.webkit.WebMessageCompat,android.net.Uri,boolean,androidx.webkit.JavaScriptReplyProxy)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: boolean dispatchTouchEvent(android.view.MotionEvent)
org.chromium.support_lib_boundary.WebResourceErrorBoundaryInterface: java.lang.CharSequence getDescription()
me.carda.awesome_notifications.R$drawable: R$drawable()
com.google.firebase.sessions.LogEnvironment: com.google.firebase.sessions.LogEnvironment[] values()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType: ContentBlockerActionType(java.lang.String,int,java.lang.String)
io.flutter.plugins.webviewflutter.WebChromeClientProxyApi$SecureWebChromeClient: WebChromeClientProxyApi$SecureWebChromeClient()
me.carda.awesome_notifications.core.managers.LifeCycleManager: void onStarted()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$2: InAppBrowserActivity$2(com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$2: void error(java.lang.String,java.lang.String,java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void setChannelDelegate(com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate)
me.carda.awesome_notifications.R$anim: R$anim()
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlocker: boolean equals(java.lang.Object)
androidx.appcompat.view.menu.ExpandedMenuView: ExpandedMenuView(android.content.Context,android.util.AttributeSet)
me.carda.awesome_notifications.core.enumerators.LogLevel: LogLevel(java.lang.String,int,java.lang.String)
com.google.android.material.card.MaterialCardView: void setUseCompatPadding(boolean)
io.grpc.internal.GrpcUtil: GrpcUtil()
androidx.appcompat.app.AppCompatActivity: void attachBaseContext(android.content.Context)
me.carda.awesome_notifications.core.AwesomeNotifications: boolean dismissNotificationsByGroupKey(java.lang.String)
com.google.firebase.provider.FirebaseInitProvider: FirebaseInitProvider()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ActionBroadcastReceiver: ActionBroadcastReceiver()
com.google.firestore.v1.StructuredQuery$FieldFilter: StructuredQuery$FieldFilter()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: boolean removePluginScript(com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript)
androidx.fragment.app.FragmentActivity: void setExitSharedElementCallback(androidx.core.app.SharedElementCallback)
me.carda.awesome_notifications.core.AwesomeNotificationsExtension: AwesomeNotificationsExtension()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: void setShouldTint(boolean)
androidx.datastore.preferences.protobuf.LazyFieldLite: LazyFieldLite()
com.google.protobuf.MapFieldLite: MapFieldLite()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$4: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse)
androidx.core.app.NotificationCompatBuilder$Api20Impl: java.lang.String getGroup(android.app.Notification)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String wrapSourceCodeInContentWorld(com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld,java.lang.String)
androidx.core.content.res.ResourcesCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealOverlayDrawable(android.graphics.drawable.Drawable)
io.grpc.internal.MessageDeframer$State: io.grpc.internal.MessageDeframer$State[] values()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType: io.grpc.okhttp.OkHttpChannelBuilder$NegotiationType valueOf(java.lang.String)
com.google.gson.stream.JsonReader: int peekNumber()
com.google.firestore.v1.ListenRequest$Builder: ListenRequest$Builder()
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt handle(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushClipRect(int,int,int,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void onRequestFocus(android.webkit.WebView)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction: java.lang.String getSelector()
com.dexterous.flutterlocalnotifications.models.styles.BigPictureStyleInformation: BigPictureStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource,java.lang.Boolean)
androidx.appcompat.app.AppCompatActivity: void openOptionsMenu()
com.google.android.material.textfield.TextInputLayout: void setHintEnabled(boolean)
kotlin.internal.PlatformImplementations: PlatformImplementations()
io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat: io.flutter.embedding.engine.systemchannels.PlatformChannel$ClipboardContentFormat valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.graphics.Bitmap getDefaultVideoPoster()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityResumed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.core.view.ViewCompat$Api28Impl: void setScreenReaderFocusable(android.view.View,boolean)
me.carda.awesome_notifications.core.broadcasters.receivers.RefreshSchedulesReceiver: void onReceiveBroadcastEvent(android.content.Context,android.content.Intent)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10$1: void onReceiveValue(java.lang.Object)
androidx.core.view.ViewCompat$Api23Impl: int getScrollIndicators(android.view.View)
androidx.appcompat.widget.Toolbar: int getContentInsetEnd()
androidx.window.extensions.core.util.function.Consumer: void accept(java.lang.Object)
com.google.android.material.chip.Chip: void setChipMinHeightResource(int)
me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler: void handle(boolean,me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException)
androidx.constraintlayout.widget.Barrier: void setAllowsGoneWidget(boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleX()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedScroll(int,int,int,int,int[],int)
me.leolin.shortcutbadger.impl.XiaomiHomeBadger: XiaomiHomeBadger()
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D: Size2D(double,double)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIcon(android.graphics.drawable.Drawable)
com.google.android.material.chip.ChipGroup: void setSingleLine(int)
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionSettings: FindInteractionSettings()
io.flutter.plugins.webviewflutter.PigeonApiWebView$Companion: PigeonApiWebView$Companion()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void setSettings(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings,java.util.HashMap)
com.google.android.material.chip.Chip: void setIconStartPaddingResource(int)
androidx.recyclerview.widget.RecyclerView: void setLayoutTransition(android.animation.LayoutTransition)
androidx.appcompat.widget.AppCompatEditText: void setEmojiCompatEnabled(boolean)
me.carda.awesome_notifications.R$integer: R$integer()
com.google.firestore.v1.StructuredQuery$FieldReference: StructuredQuery$FieldReference()
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$1: void defaultBehaviour(java.lang.Object)
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.util.Calendar getNextValidDate(java.util.Calendar)
androidx.constraintlayout.widget.Guideline: void setGuidelinePercent(float)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate: void didFinishNavigation(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHelperTextTextAppearance(int)
android.support.v4.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.protobuf.Any: Any()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: java.util.List getMutators()
androidx.core.view.ViewCompat$Api26Impl: void setKeyboardNavigationCluster(android.view.View,boolean)
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: float getRadius()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: void unlockInputConnection()
me.carda.awesome_notifications.core.broadcasters.receivers.ScheduledNotificationReceiver: ScheduledNotificationReceiver()
com.google.android.material.circularreveal.CircularRevealFrameLayout: int getCircularRevealScrimColor()
kotlinx.coroutines.EventLoop: EventLoop()
me.carda.awesome_notifications.core.enumerators.NotificationCategory: NotificationCategory(java.lang.String,int,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.models.AbstractModel: void putDataOnSerializedMap(java.lang.String,java.util.Map,java.util.Calendar)
com.google.firebase.firestore.core.CompositeFilter$Operator: com.google.firebase.firestore.core.CompositeFilter$Operator[] values()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$DocumentReferenceRequest: GeneratedAndroidFirebaseFirestore$DocumentReferenceRequest()
me.carda.awesome_notifications.DartBackgroundExecutor: void access$200(me.carda.awesome_notifications.DartBackgroundExecutor)
com.google.android.material.search.SearchView: void setMenuItemsAnimated(boolean)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void shareButtonClicked(android.view.MenuItem)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate$SyncShouldInterceptRequestCallback: java.lang.Object decodeResult(java.lang.Object)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintList(android.view.MenuItem,android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: java.lang.Boolean arrayContainsString(java.lang.String[],java.lang.String)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt: void setType(int)
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.lang.String getSuggestedFilename()
androidx.activity.ComponentActivity: ComponentActivity()
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver: void notifyNewException(java.lang.String,java.lang.Exception)
com.google.gson.stream.JsonReader: void push(int)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: void removeSessionCookies(io.flutter.plugin.common.MethodChannel$Result)
androidx.webkit.WebViewClientCompat: void onSafeBrowsingHit(android.webkit.WebView,android.webkit.WebResourceRequest,int,androidx.webkit.SafeBrowsingResponseCompat)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.textfield.TextInputLayout: void setEndIconOnClickListener(android.view.View$OnClickListener)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] $values()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper: void clearAllTables(android.database.sqlite.SQLiteDatabase)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction: int hashCode()
androidx.appcompat.widget.Toolbar: int getTitleMarginEnd()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateDisplayMetrics(long)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setCloseIconVisible(boolean)
androidx.appcompat.widget.ViewStubCompat: void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomBigContentView(android.app.Notification$Builder,android.widget.RemoteViews)
androidx.profileinstaller.ProfileVerifier$Api33Impl: android.content.pm.PackageInfo getPackageInfo(android.content.pm.PackageManager,android.content.Context)
me.carda.awesome_notifications.core.models.AbstractModel: void validate(android.content.Context)
androidx.profileinstaller.ProfileInstallerInitializer$Handler28Impl: android.os.Handler createAsync(android.os.Looper)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout$1: boolean canChildScrollUp(androidx.swiperefreshlayout.widget.SwipeRefreshLayout,android.view.View)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$5: void onReceiveValue(java.lang.String)
kotlinx.coroutines.scheduling.WorkQueue: WorkQueue()
me.carda.awesome_notifications.core.managers.StatusBarManager: me.carda.awesome_notifications.core.managers.StatusBarManager getInstance(android.content.Context)
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannelGroup(android.app.NotificationManager,java.lang.String)
com.google.firebase.firestore.core.EventManager$ListenerSetupAction: com.google.firebase.firestore.core.EventManager$ListenerSetupAction[] values()
com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat: com.google.firebase.heartbeatinfo.HeartBeatInfo$HeartBeat[] values()
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId[] values()
me.carda.awesome_notifications.core.managers.ChannelGroupManager: java.util.List listChannelGroup(android.content.Context)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenClass(com.google.android.gms.internal.measurement.zzdo)
com.pichillilorenzo.flutter_inappwebview_android.Util: void log(java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String generateUserOnlyScriptsCodeAt(com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime)
me.carda.awesome_notifications.core.models.NotificationChannelGroupModel: NotificationChannelGroupModel()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setAlgorithmicDarkeningAllowed(boolean)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialDao: long insert(com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential)
androidx.activity.ComponentActivity: void onActivityResult(int,int,android.content.Intent)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getScaleY()
com.google.type.LatLng: LatLng()
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Sum$Builder: StructuredAggregationQuery$Aggregation$Sum$Builder()
com.google.gson.internal.bind.TypeAdapters$11: TypeAdapters$11()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int)
io.flutter.view.AccessibilityBridge$StringAttribute: AccessibilityBridge$StringAttribute()
androidx.appcompat.widget.Toolbar: void setTitleTextColor(int)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort: WebMessagePort(java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel)
androidx.activity.ComponentActivity: androidx.activity.FullyDrawnReporter getFullyDrawnReporter()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager: void openExternalExcludeCurrentApp(android.app.Activity,android.content.Intent)
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse fromMap(java.util.Map)
io.flutter.embedding.engine.FlutterJNI: void nativeNotifyLowMemoryWarning(long)
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: me.carda.awesome_notifications.core.models.NotificationContentModel fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: void setRedirect(boolean)
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeWidth()
com.google.firebase.firestore.model.FieldIndex$Segment$Kind: com.google.firebase.firestore.model.FieldIndex$Segment$Kind[] values()
androidx.appcompat.widget.ActionBarContextView: ActionBarContextView(android.content.Context,android.util.AttributeSet)
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setSmallIcon(android.app.Notification$Builder,java.lang.Object)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$2: void onReceiveValue(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort: void close(android.webkit.ValueCallback)
android.support.v4.media.session.MediaSessionCompat$QueueItem$Api21Impl: android.media.session.MediaSession$QueueItem createQueueItem(android.media.MediaDescription,long)
me.carda.awesome_notifications.core.AwesomeNotifications: boolean captureNotificationActionFromIntent(android.content.Intent)
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.FirebaseSessions getComponents$lambda$0(com.google.firebase.components.ComponentContainer)
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PluginScriptsUtil: PluginScriptsUtil()
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: me.carda.awesome_notifications.core.enumerators.ForegroundStartMode[] $values()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void postWebMessage(com.pichillilorenzo.flutter_inappwebview_android.types.WebMessage,android.net.Uri,android.webkit.ValueCallback)
com.google.gson.stream.JsonReader: boolean skipTo(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: java.lang.Object getIcon()
com.google.firestore.v1.Value$ValueTypeCase: com.google.firestore.v1.Value$ValueTypeCase valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$FormResubmissionCallback: WebViewChannelDelegate$FormResubmissionCallback()
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: java.lang.String getMethod()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: WindowInsetsCompat$BuilderImpl29(androidx.core.view.WindowInsetsCompat)
org.chromium.support_lib_boundary.ProfileStoreBoundaryInterface: java.lang.reflect.InvocationHandler getOrCreateProfile(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: boolean onRenderProcessGone(android.webkit.WebView,android.webkit.RenderProcessGoneDetail)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$1: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStarted(android.app.Activity)
me.carda.awesome_notifications.core.managers.StatusBarManager: boolean isNotificationActiveOnStatusBar(int)
androidx.constraintlayout.helper.widget.Flow: void setVerticalBias(float)
com.google.firebase.firestore.proto.Target: Target()
com.google.android.material.search.SearchBar: void setStrokeColor(int)
me.carda.awesome_notifications.core.utils.StringUtils: me.carda.awesome_notifications.core.utils.StringUtils getInstance()
androidx.appcompat.widget.AppCompatTextClassifierHelper$Api26Impl: android.view.textclassifier.TextClassifier getTextClassifier(android.widget.TextView)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: void setSslCertificate(android.net.http.SslCertificate)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCurrentScreenName(com.google.android.gms.internal.measurement.zzdo)
androidx.core.view.ViewCompat$Api21Impl: void setNestedScrollingEnabled(android.view.View,boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void finalize()
androidx.core.app.RemoteInput$Api26Impl: void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map)
com.google.android.gms.internal.measurement.zzfy$zzl: zzfy$zzl()
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: java.util.List getCookies(java.lang.String)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getEndIconContentDescription()
androidx.arch.core.internal.SafeIterableMap$SupportRemove: SafeIterableMap$SupportRemove()
com.google.android.material.checkbox.MaterialCheckBox: android.content.res.ColorStateList getButtonTintList()
com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse: java.lang.String toString()
io.flutter.embedding.engine.FlutterJNI: void registerTexture(long,io.flutter.embedding.engine.renderer.SurfaceTextureWrapper)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getShowMotionSpec()
io.flutter.embedding.engine.FlutterJNI: void loadDartDeferredLibrary(int,java.lang.String[])
com.google.android.gms.internal.measurement.zzfo$zzb$zza: zzfo$zzb$zza()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: java.lang.String getContentType()
com.google.android.material.internal.ClippableRoundedCornerLayout: ClippableRoundedCornerLayout(android.content.Context,android.util.AttributeSet)
me.carda.awesome_notifications.core.AwesomeNotifications: void showPreciseAlarmPage(me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler)
me.carda.awesome_notifications.core.models.NotificationContentModel: NotificationContentModel()
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.String getMatchedLanguageCode(java.util.Map,java.lang.String)
me.carda.awesome_notifications.core.managers.CancellationManager: boolean dismissNotification(android.content.Context,java.lang.Integer)
androidx.core.app.AlarmManagerCompat$Api23Impl: void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent)
androidx.recyclerview.widget.RecyclerView: int getMinFlingVelocity()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$2: WebViewChannelDelegate$2(com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.internal.NavigationMenuItemView: void setTextAppearance(int)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle)
com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()
com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld: int hashCode()
io.flutter.view.TextureRegistry$SurfaceTextureEntry: void setOnFrameConsumedListener(io.flutter.view.TextureRegistry$OnFrameConsumedListener)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setAlphabeticShortcut(android.view.MenuItem,char,int)
com.google.firebase.datatransport.TransportRegistrar: TransportRegistrar()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void isSecureContext(android.webkit.ValueCallback)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDataCollectionEnabled(boolean)
com.dexterous.flutterlocalnotifications.models.styles.MessagingStyleInformation: MessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.Boolean,java.util.ArrayList,java.lang.Boolean,java.lang.Boolean)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setCriticalAlert(android.content.Context,me.carda.awesome_notifications.core.models.NotificationChannelModel)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: com.google.android.material.animation.MotionSpec getExtendMotionSpec()
com.google.android.material.search.SearchView: void setHint(java.lang.CharSequence)
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$1(com.google.firebase.components.ComponentContainer)
androidx.core.widget.ImageViewCompat$Api21Impl: android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNextRepeatingNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxWidth()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationManagerCompat getNotificationManager(android.content.Context)
com.google.android.gms.internal.measurement.zzfo$zze$zza: zzfo$zze$zza()
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType valueOf(java.lang.String)
io.grpc.Status$Code: io.grpc.Status$Code[] values()
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingSettings: com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingSettings parse(java.util.Map)
me.carda.awesome_notifications.core.builders.NotificationBuilder: me.carda.awesome_notifications.core.builders.NotificationBuilder getNewBuilder()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.appcompat.widget.AppCompatTextView: void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback)
androidx.core.widget.ImageViewCompat$Api21Impl: android.content.res.ColorStateList getImageTintList(android.widget.ImageView)
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails fromNotificationDetails(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.pichillilorenzo.flutter_inappwebview_android.Util$1: void run()
io.grpc.okhttp.internal.Protocol: io.grpc.okhttp.internal.Protocol valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: int getDividerWidth()
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$1: void onReceiveValue(java.lang.Object)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setEnabled(boolean)
android.support.v4.media.RatingCompat$Api19Impl: android.media.Rating newPercentageRating(float)
org.chromium.support_lib_boundary.WebViewRendererClientBoundaryInterface: void onRendererUnresponsive(android.webkit.WebView,java.lang.reflect.InvocationHandler)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: ImeSyncDeferringInsetsCallback$AnimationCallback(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
me.carda.awesome_notifications.core.utils.CalendarUtils: java.util.Calendar getCurrentCalendar(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.ISettings: com.pichillilorenzo.flutter_inappwebview_android.ISettings parse(java.util.Map)
androidx.core.view.WindowInsetsCompat$Impl21: WindowInsetsCompat$Impl21(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21)
io.grpc.CallCredentials: CallCredentials()
me.carda.awesome_notifications.core.models.NotificationIntervalModel: NotificationIntervalModel()
com.google.android.material.card.MaterialCardView: void setCheckedIconResource(int)
io.flutter.embedding.engine.FlutterOverlaySurface: FlutterOverlaySurface(int,android.view.Surface)
com.google.android.material.internal.NavigationMenuItemView: void setTextColor(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$3: void onVerticalScrollEvent(boolean,android.os.Bundle)
androidx.appcompat.widget.DropDownListView$Api33Impl: boolean isSelectedChildViewEnabled(android.widget.AbsListView)
kotlin.jvm.internal.TypeIntrinsics: TypeIntrinsics()
androidx.cardview.widget.CardView: float getRadius()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void dispose()
androidx.browser.customtabs.CustomTabsCallback: void onPostMessage(java.lang.String,android.os.Bundle)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.os.Bundle call(java.lang.String,java.lang.String,android.os.Bundle)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeStepGranularity()
androidx.constraintlayout.widget.VirtualLayout: void setVisibility(int)
androidx.fragment.app.FragmentActivity: void onActivityResult(int,int,android.content.Intent)
androidx.collection.SparseArrayCompat: SparseArrayCompat()
com.google.android.gms.internal.measurement.zzik: zzik()
com.google.android.material.search.SearchView$Behavior: SearchView$Behavior()
io.flutter.view.AccessibilityViewEmbedder: java.lang.Integer getRecordFlutterId(android.view.View,android.view.accessibility.AccessibilityRecord)
me.carda.awesome_notifications.core.utils.CalendarUtils: java.util.Calendar shiftTimeZone(java.util.Calendar,java.util.TimeZone)
androidx.fragment.app.DefaultSpecialEffectsController$Api24Impl: long totalDuration(android.animation.AnimatorSet)
com.google.android.material.textfield.TextInputLayout: void setMinWidth(int)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackgroundResource(int)
me.carda.awesome_notifications.core.logs.Logger: void e(java.lang.String,java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: float getBackgroundOverlayColorAlpha()
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage: void init()
me.carda.awesome_notifications.core.managers.DisplayedManager: DisplayedManager()
com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView: void makeInitialLoad(java.util.HashMap)
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,int,java.nio.ByteBuffer,int)
me.carda.awesome_notifications.core.listeners.AwesomeExceptionListener: void onNewAwesomeException(java.lang.Exception)
androidx.appcompat.widget.AppCompatTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource fromMap(java.util.Map)
kotlinx.coroutines.selects.TrySelectDetailedResult: kotlinx.coroutines.selects.TrySelectDetailedResult valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void postWebMessage(android.webkit.WebMessage,android.net.Uri)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(boolean)
io.flutter.view.TextureRegistry$GLTextureConsumer: android.graphics.SurfaceTexture getSurfaceTexture()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void lambda$setAllLongValues$7(android.content.ContentValues,java.lang.Long)
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy: int toAndroidPrivacy(me.carda.awesome_notifications.core.enumerators.NotificationPrivacy)
me.carda.awesome_notifications.core.models.NotificationCrontabModel: java.util.Calendar getNextMinimalPreciseSchedule(java.util.Calendar)
com.google.android.gms.internal.measurement.zzfr$zzg: zzfr$zzg()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initialize(com.google.android.gms.dynamic.IObjectWrapper,com.google.android.gms.internal.measurement.zzdw,long)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodSetLocalization(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.search.SearchView: void setUpStatusBarSpacer(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map describeIcon(androidx.core.graphics.drawable.IconCompat)
com.google.firebase.firestore.core.OnlineState: com.google.firebase.firestore.core.OnlineState[] values()
com.google.gson.stream.JsonReader: void close()
me.carda.awesome_notifications.core.threads.NotificationThread: NotificationThread()
me.carda.awesome_notifications.core.managers.ActionManager: me.carda.awesome_notifications.core.managers.ActionManager getInstance()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: InAppWebView(android.content.Context)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotY()
com.google.gson.stream.JsonReader: double nextDouble()
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$1: boolean nonNullSuccess(java.lang.Boolean)
com.dexterous.flutterlocalnotifications.models.Time: Time()
androidx.core.os.LocaleListCompat$Api21Impl: boolean matchesLanguageAndScript(java.util.Locale,java.util.Locale)
io.grpc.internal.TransportFrameUtil: TransportFrameUtil()
com.google.android.material.textfield.TextInputLayout: void setHint(java.lang.CharSequence)
androidx.datastore.preferences.protobuf.ExtensionRegistryLite: ExtensionRegistryLite()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCloseIconTint()
androidx.activity.ComponentActivity: androidx.activity.ComponentActivity$ReportFullyDrawnExecutor createFullyDrawnExecutor()
me.carda.awesome_notifications.core.managers.LocalizationManager: me.carda.awesome_notifications.core.managers.LocalizationManager getInstance()
me.carda.awesome_notifications.core.managers.ChannelManager: ChannelManager(me.carda.awesome_notifications.core.utils.StringUtils,me.carda.awesome_notifications.core.utils.AudioUtils)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl23: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabsHelper: CustomTabsHelper()
com.google.firebase.messaging.EnhancedIntentService: EnhancedIntentService()
com.google.firestore.v1.StructuredQuery: StructuredQuery()
com.google.android.material.textfield.TextInputLayout: com.google.android.material.internal.CheckableImageButton getEndIconView()
kotlin.jvm.internal.PropertyReference: PropertyReference()
com.google.firebase.firestore.Query$Direction: com.google.firebase.firestore.Query$Direction[] values()
com.google.android.material.search.SearchBar$ScrollingViewBehavior: SearchBar$ScrollingViewBehavior()
com.google.android.material.textfield.TextInputLayout: void setEndIconActivated(boolean)
com.google.android.material.chip.Chip: void setEnsureMinTouchTargetSize(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$17: void defaultBehaviour(java.lang.Object)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void releaseInternal()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: void start(int,java.util.Collection,int)
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.lang.String getExpressionSetSummary(java.util.Set)
com.google.android.material.internal.CheckableImageButton: void setPressable(boolean)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.view.WindowInsetsCompat inset(int,int,int,int)
me.carda.awesome_notifications.core.managers.DefaultsManager: void saveDefault(android.content.Context,java.lang.String,java.lang.Long)
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: NotificationForegroundSender(android.content.Context,me.carda.awesome_notifications.core.utils.StringUtils,me.carda.awesome_notifications.core.services.ForegroundService$ForegroundServiceIntent,me.carda.awesome_notifications.core.builders.NotificationBuilder,me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle,me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler)
androidx.browser.customtabs.CustomTabsCallback: void onActivityLayout(int,int,int,int,int,android.os.Bundle)
io.flutter.plugin.platform.PlatformViewWrapper: int getRenderTargetWidth()
me.carda.awesome_notifications.core.utils.BitmapUtils: java.lang.Boolean isValidDrawableResource(android.content.Context,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: java.util.Map toMap()
me.carda.awesome_notifications.core.models.NotificationMessageModel: void validate(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$1: InAppWebViewManager$1(com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ViewUtils$Api29Impl: void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect)
me.carda.awesome_notifications.core.enumerators.ForegroundStartMode: ForegroundStartMode(java.lang.String,int,java.lang.String)
androidx.core.app.ComponentActivity: void getLifecycleRegistry$annotations()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ShouldOverrideUrlLoadingCallback: java.lang.Object decodeResult(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColorStateList(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: boolean equals(java.lang.Object)
com.google.android.material.timepicker.TimeModel: TimeModel()
androidx.activity.OnBackPressedDispatcher$Api33Impl: android.window.OnBackInvokedCallback createOnBackInvokedCallback(kotlin.jvm.functions.Function0)
io.grpc.Context$Storage: Context$Storage()
me.carda.awesome_notifications.core.managers.LifeCycleManager: LifeCycleManager()
org.chromium.support_lib_boundary.TracingControllerBoundaryInterface: boolean stop(java.io.OutputStream,java.util.concurrent.Executor)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver: me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver getInstance()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState: int getChangingConfigurations()
io.flutter.embedding.engine.FlutterJNI: void addIsDisplayingFlutterUiListener(io.flutter.embedding.engine.renderer.FlutterUiDisplayListener)
me.carda.awesome_notifications.core.AwesomeNotifications: void detachAsMainInstance(me.carda.awesome_notifications.core.listeners.AwesomeEventListener)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void dispose()
me.carda.awesome_notifications.core.threads.NotificationSender: void send(android.content.Context,me.carda.awesome_notifications.core.builders.NotificationBuilder,me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler)
me.carda.awesome_notifications.core.models.NotificationIntervalModel: me.carda.awesome_notifications.core.models.NotificationIntervalModel fromJson(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onBeginFrame()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: void setUnlessDomain(java.util.List)
com.google.android.gms.internal.measurement.zzln: com.google.android.gms.internal.measurement.zzln[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: int hashCode()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: WebResourceResponseExt(java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.util.Map,byte[])
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListenerChannelDelegate: void dispose()
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage: void dispose()
androidx.appcompat.widget.SearchView: int getInputType()
androidx.core.view.WindowInsetsCompat$Impl: boolean equals(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$1: void onReceiveValue(java.util.Map)
com.google.firebase.installations.remote.TokenResult: TokenResult()
me.carda.awesome_notifications.core.services.BackgroundService: void onHandleWork(android.content.Intent)
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: boolean setLayoutDirection(android.graphics.drawable.Drawable,int)
me.carda.awesome_notifications.core.managers.StatusBarManager: java.lang.String getIndexActiveNotificationChannel(java.lang.String)
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.ForegroundStartMode getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.ForegroundStartMode)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$1: boolean nonNullSuccess(java.lang.Integer)
androidx.appcompat.widget.AppCompatRadioButton: void setAllCaps(boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: int hashCode()
com.google.firebase.firestore.ListenSource: com.google.firebase.firestore.ListenSource valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHintAnimationEnabled(boolean)
me.carda.awesome_notifications.core.managers.PermissionManager: boolean gotoAndroidChannelPage(android.content.Context,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityPaused(android.app.Activity)
androidx.lifecycle.ReportFragment: ReportFragment()
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: void deleteAllCookies(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.chip.Chip: void setCheckedIconResource(int)
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: java.lang.reflect.InvocationHandler getServiceWorkerWebSettings()
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetEnd()
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerSourceAsync(android.net.Uri,android.view.InputEvent)
me.carda.awesome_notifications.core.managers.PermissionManager: boolean isDndOverrideAllowed(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void dispatchPlatformMessage(java.lang.String,java.nio.ByteBuffer,int,int)
com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt: java.lang.String toString()
com.google.android.gms.common.internal.safeparcel.AbstractSafeParcelable: AbstractSafeParcelable()
me.carda.awesome_notifications.core.threads.NotificationScheduler: void cancelSchedulesByChannelKey(android.content.Context,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: boolean onAccessibilityHoverEvent(int,android.view.MotionEvent)
androidx.appcompat.view.menu.ActionMenuItemView: java.lang.CharSequence getAccessibilityClassName()
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: double getTop()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startScaleDownAnimation(android.view.animation.Animation$AnimationListener)
me.carda.awesome_notifications.core.managers.StatusBarManager: java.util.List _getAllActiveIdsWithoutServices()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void loadUrl(com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest)
com.google.firebase.installations.FirebaseInstallationsRegistrar: com.google.firebase.installations.FirebaseInstallationsApi lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.lang.String getUrl()
com.google.android.material.internal.BaselineLayout: int getBaseline()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt: void setWebMessageChannelId(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewStartOffset()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentMode()
androidx.core.view.ViewCompat$Api26Impl: void setImportantForAutofill(android.view.View,int)
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobChannelDelegate: void dispose()
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetRight(android.view.DisplayCutout)
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: boolean isAvailable()
me.carda.awesome_notifications.core.models.NotificationModel: me.carda.awesome_notifications.core.models.NotificationContentModel extractNotificationContent(java.util.Map)
com.google.android.material.chip.Chip: android.graphics.RectF getCloseIconTouchBounds()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintList(android.content.res.ColorStateList)
me.carda.awesome_notifications.core.AwesomeNotificationsExtension: void loadExternalExtensions(android.content.Context)
com.google.gson.stream.JsonWriter: boolean isHtmlSafe()
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: java.lang.String toJson()
com.google.android.material.search.SearchView: void setSearchPrefixText(java.lang.CharSequence)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder setLegacyStreamType(android.media.AudioAttributes$Builder,int)
io.flutter.plugins.webviewflutter.ConsoleMessageLevel: io.flutter.plugins.webviewflutter.ConsoleMessageLevel[] values()
androidx.fragment.app.FragmentActivity: android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.pichillilorenzo.flutter_inappwebview_android.types.Disposable: void dispose()
me.carda.awesome_notifications.core.managers.LifeCycleManager: void updateAppLifeCycle(me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse)
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToLocal(android.view.View,android.graphics.Matrix)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOpNoThrow(android.app.AppOpsManager,java.lang.String,java.lang.String)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void detachFromGLContext()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$4: void defaultBehaviour(java.lang.Object)
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultRegistry getActivityResultRegistry()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$14: void onClick(android.content.DialogInterface,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void access$501(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient,android.webkit.WebView,android.webkit.ClientCertRequest)
androidx.transition.ViewGroupUtils$Api29Impl: void suppressLayout(android.view.ViewGroup,boolean)
com.google.android.material.search.SearchView: float getOverlayElevation()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void injectCSSCode(java.lang.String)
me.carda.awesome_notifications.core.AwesomeNotifications: java.util.List listAllPendingSchedules()
com.google.android.gms.internal.measurement.zzay: zzay()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler[] createWebMessageChannel()
androidx.webkit.WebViewClientCompat: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: java.lang.String getCancelButtonTitle()
io.flutter.embedding.engine.FlutterJNI: void nativeUpdateJavaAssetManager(long,android.content.res.AssetManager,java.lang.String)
androidx.appcompat.widget.AppCompatTextHelper$Api28Impl: android.graphics.Typeface create(android.graphics.Typeface,int,boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityDestroyed(com.google.android.gms.dynamic.IObjectWrapper,long)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getTrimPathOffset()
androidx.core.app.JobIntentService: void onDestroy()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void getContentHeight(android.webkit.ValueCallback)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShrinkMotionSpecResource(int)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.CharSequence getTitle(android.media.MediaDescription)
com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld: com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld fromMap(java.util.Map)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillColor(int)
com.google.gson.ReflectionAccessFilter$FilterResult: com.google.gson.ReflectionAccessFilter$FilterResult valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzhg$zza: zzhg$zza()
io.flutter.embedding.engine.FlutterJNI: void nativeInit(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.TreeSet getSet(int)
me.carda.awesome_notifications.core.managers.CancellationManager: boolean cancelNotificationsByChannelKey(android.content.Context,java.lang.String)
kotlin.jvm.internal.Ref$ObjectRef: Ref$ObjectRef()
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListenerChannelDelegate: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: void setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsEmoji(int)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setAccessibilityDataSensitive(android.view.accessibility.AccessibilityNodeInfo,boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$RenderProcessResponsiveCallback: java.lang.Object decodeResult(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void onWindowVisibilityChanged(int)
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: void setMessage(java.lang.String)
com.google.firebase.firestore.core.Query$LimitType: com.google.firebase.firestore.core.Query$LimitType valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.ICallbackResult: void notImplemented()
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,java.lang.reflect.InvocationHandler)
me.carda.awesome_notifications.core.managers.PermissionManager: void updateChannelModelThroughPermissions(android.content.Context,java.lang.String,java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.types.PrintAttributesExt: com.pichillilorenzo.flutter_inappwebview_android.types.PrintAttributesExt fromPrintAttributes(android.print.PrintAttributes)
com.google.android.material.card.MaterialCardView: void setCheckedIconSize(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void zoomBy(float)
com.google.gson.stream.JsonReader: void beginArray()
androidx.privacysandbox.ads.adservices.internal.AdServicesInfo$Extensions30Impl: int getAdServicesVersion()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$3: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$20: void onPageFinished(android.webkit.WebView,java.lang.String)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidLedDetails(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
androidx.core.view.ViewCompat$Api29Impl: void setContentCaptureSession(android.view.View,androidx.core.view.contentcapture.ContentCaptureSessionCompat)
com.google.firebase.firestore.proto.NoDocument$Builder: NoDocument$Builder()
org.chromium.support_lib_boundary.WebViewCookieManagerBoundaryInterface: java.util.List getCookieInfo(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void onActivityResult(int,int,android.content.Intent)
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate$SyncHandleCallback: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt decodeResult(java.lang.Object)
io.flutter.plugin.platform.SingleViewPresentation: io.flutter.plugin.platform.SingleViewPresentation$PresentationState detachState()
com.google.android.gms.internal.measurement.zzfy$zzd: zzfy$zzd()
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: void removeScheduleById(android.content.Context,java.lang.Integer)
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance fromAndroidImportance(int)
me.carda.awesome_notifications.core.utils.ListUtils: ListUtils()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedClientCertRequestCallback: WebViewChannelDelegate$ReceivedClientCertRequestCallback()
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: java.util.List getComponents()
com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult: void setType(int)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setSummary(me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMinor()
androidx.fragment.app.FragmentActivity: android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet)
com.google.gson.stream.JsonWriter: void close()
androidx.core.app.NotificationManagerCompat$Api26Impl: java.util.List getNotificationChannelGroups(android.app.NotificationManager)
com.google.firebase.platforminfo.GlobalLibraryVersionRegistrar: GlobalLibraryVersionRegistrar()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getCollapseContentDescription()
com.google.firestore.v1.StructuredQuery$FieldFilter$Operator: com.google.firestore.v1.StructuredQuery$FieldFilter$Operator[] values()
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager: void init()
com.google.gson.internal.bind.ArrayTypeAdapter$1: ArrayTypeAdapter$1()
com.google.protobuf.CodedOutputStream: CodedOutputStream()
androidx.core.view.WindowInsetsCompat$Impl30: void copyRootViewBounds(android.view.View)
androidx.fragment.app.FragmentActivity: void supportPostponeEnterTransition()
androidx.appcompat.widget.AppCompatToggleButton: void setFilters(android.text.InputFilter[])
io.flutter.embedding.engine.FlutterJNI: void init(android.content.Context,java.lang.String[],java.lang.String,java.lang.String,java.lang.String,long)
io.flutter.embedding.android.KeyData$Type: io.flutter.embedding.android.KeyData$Type[] values()
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission[] $values()
com.pichillilorenzo.flutter_inappwebview_android.R$dimen: R$dimen()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onLoadStop(java.lang.String)
me.carda.awesome_notifications.core.utils.TimeZoneUtils: me.carda.awesome_notifications.core.utils.TimeZoneUtils getInstance()
com.google.android.material.internal.NavigationMenuItemView: void setMaxLines(int)
com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript: PluginScript(java.lang.String,java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime,com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld,boolean,java.util.Set)
me.carda.awesome_notifications.core.utils.IntegerUtils: java.lang.Boolean isBetween(java.lang.Integer,java.lang.Integer,java.lang.Integer)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void dispose()
me.carda.awesome_notifications.core.managers.EventManager: java.lang.String _getKeyByCalendar(java.util.Calendar)
com.google.protobuf.Timestamp$Builder: Timestamp$Builder()
androidx.browser.customtabs.CustomTabsCallback: android.os.Bundle extraCallbackWithResult(java.lang.String,android.os.Bundle)
me.carda.awesome_notifications.core.models.NotificationScheduleModel: java.util.Calendar getNextValidDate(java.util.Calendar)
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource valueOf(java.lang.String)
androidx.browser.customtabs.CustomTabsServiceConnection: CustomTabsServiceConnection()
androidx.appcompat.widget.AppCompatTextView: AppCompatTextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.appbar.AppBarLayout: void setVisibility(int)
com.google.firebase.firestore.proto.UnknownDocument: UnknownDocument()
me.carda.awesome_notifications.core.managers.StatusBarManager: boolean dismissNotificationsByGroupKey(android.content.Context,java.lang.String)
androidx.appcompat.widget.SearchView: void setSubmitButtonEnabled(boolean)
com.google.android.material.chip.Chip: java.lang.CharSequence getChipText()
com.google.firebase.firestore.core.FieldFilter$Operator: com.google.firebase.firestore.core.FieldFilter$Operator[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void disposeWebMessageChannels()
com.google.android.material.button.MaterialButtonToggleGroup: int getFirstVisibleChildIndex()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setImeVisibility(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView$1: FlutterWebView$1(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView)
com.google.firebase.messaging.FirebaseMessagingRegistrar: java.util.List getComponents()
io.grpc.Status$Code: io.grpc.Status$Code valueOf(java.lang.String)
io.flutter.plugins.firebase.core.GeneratedAndroidFirebaseCore$PigeonFirebaseOptions: GeneratedAndroidFirebaseCore$PigeonFirebaseOptions()
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: ResolutionExt(java.lang.String,java.lang.String,int,int)
com.google.android.material.search.SearchBar: void setOnLoadAnimationFadeInEnabled(boolean)
me.carda.awesome_notifications.core.managers.ScheduleManager: java.util.List listScheduledIds(android.content.Context)
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.net.Uri[] getSelectedFiles(android.content.Intent,int)
io.flutter.embedding.engine.FlutterJNI: void nativeDestroy(long)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: void clearAllAuthCredentials()
com.google.android.gms.internal.measurement.zzgs: zzgs()
androidx.datastore.preferences.PreferencesProto$StringSet: PreferencesProto$StringSet()
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: double getRight()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: boolean checkInputConnectionProxy(android.view.View)
com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase: com.google.firestore.v1.BatchGetDocumentsResponse$ResultCase[] values()
androidx.profileinstaller.ProfileInstallReceiver: ProfileInstallReceiver()
com.google.android.material.textfield.TextInputLayout: void setStartIconMinSize(int)
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMinTextSize()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void pruneImageReaderQueue()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsMenuItem: boolean equals(java.lang.Object)
androidx.cardview.widget.CardView: float getCardElevation()
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: java.lang.Long getProtectionSpaceId()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$18: InAppWebView$18(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,android.webkit.ValueCallback)
androidx.appcompat.widget.AppCompatButton: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatElevation()
androidx.appcompat.view.WindowCallbackWrapper$Api24Impl: void onProvideKeyboardShortcuts(android.view.Window$Callback,java.util.List,android.view.Menu,int)
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D: void setHeight(double)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$SyncShouldInterceptRequestCallback: WebViewChannelDelegate$SyncShouldInterceptRequestCallback()
me.carda.awesome_notifications.core.managers.ActionManager: boolean removeAction(android.content.Context,java.lang.Integer)
android.support.v4.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onReceivedClientCertRequest(com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertChallenge,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedClientCertRequestCallback)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getNavigationContentDescription()
com.dexterous.flutterlocalnotifications.models.MessageDetails: MessageDetails(java.lang.String,java.lang.Long,com.dexterous.flutterlocalnotifications.models.PersonDetails,java.lang.String,java.lang.String)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForeground(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.lang.String getMimeType()
me.carda.awesome_notifications.core.managers.PermissionManager: java.util.List arePermissionsAllowed(android.content.Context,java.lang.String,java.util.List)
kotlinx.coroutines.channels.BufferOverflow: kotlinx.coroutines.channels.BufferOverflow[] values()
com.google.firebase.sessions.EventType: com.google.firebase.sessions.EventType valueOf(java.lang.String)
me.carda.awesome_notifications.core.AwesomeNotifications: java.util.List getAllChannels(android.content.Context)
me.carda.awesome_notifications.core.AwesomeNotifications: boolean setChannel(me.carda.awesome_notifications.core.models.NotificationChannelModel,boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setInstanceIdProvider(com.google.android.gms.internal.measurement.zzdu)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: void onBroadcastNotificationDismissed(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
com.pichillilorenzo.flutter_inappwebview_android.Util: byte[] readAllBytes(java.io.InputStream)
androidx.appcompat.widget.Toolbar: void setSubtitleTextColor(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startScaleUpAnimation(android.view.animation.Animation$AnimationListener)
androidx.core.view.ViewCompat$Api21Impl: void setZ(android.view.View,float)
io.flutter.embedding.engine.FlutterJNI: void onDisplayPlatformView(int,int,int,int,int,int,int,io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack)
androidx.fragment.app.FragmentActivity: void onAttachFragment(androidx.fragment.app.Fragment)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ServiceConnection: void onServiceDisconnected(android.content.ComponentName)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerWebTriggerAsync(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener fromMap(com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface,io.flutter.plugin.common.BinaryMessenger,java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: boolean isHandledByClient()
com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView: void onFlutterViewAttached(android.view.View)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackground(android.graphics.drawable.Drawable)
me.carda.awesome_notifications.core.managers.SharedManager: java.lang.Boolean set(android.content.Context,java.lang.String,java.lang.String,me.carda.awesome_notifications.core.models.AbstractModel)
io.flutter.embedding.engine.FlutterJNI: java.lang.String getObservatoryUri()
org.chromium.support_lib_boundary.ServiceWorkerControllerBoundaryInterface: void setServiceWorkerClient(java.lang.reflect.InvocationHandler)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: long calculateNextNotificationTrigger(long,long)
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings: com.pichillilorenzo.flutter_inappwebview_android.ISettings parse(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthenticationChallenge: HttpAuthenticationChallenge(com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace,int,com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintList(android.view.View,android.content.res.ColorStateList)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onDetachedFromWindow()
com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: boolean restoreDefaultFocus(android.view.View)
me.leolin.shortcutbadger.impl.OPPOHomeBader: OPPOHomeBader()
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannelGroup)
com.google.gson.internal.bind.DateTypeAdapter$1: DateTypeAdapter$1()
me.carda.awesome_notifications.core.managers.LifeCycleManager: void notify(me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void loadFile(java.lang.String)
com.google.android.material.internal.NavigationMenuItemView: void setIconTintList(android.content.res.ColorStateList)
androidx.appcompat.app.AppCompatActivity: void addContentView(android.view.View,android.view.ViewGroup$LayoutParams)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannelGroups(android.app.NotificationManager,java.util.List)
io.flutter.embedding.android.FlutterView: void setDelegate(io.flutter.embedding.android.FlutterViewDelegate)
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: void setVerticalDpi(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver: AwesomeExceptionReceiver(me.carda.awesome_notifications.core.utils.StringUtils)
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getLogoDescription()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: int intCount(android.content.Context,java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getMinEms()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
androidx.core.content.ContextCompat$Api24Impl: boolean isDeviceProtectedStorage(android.content.Context)
me.carda.awesome_notifications.core.managers.StatusBarManager: void showNotificationOnStatusBar(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,android.app.Notification)
com.google.android.material.circularreveal.CircularRevealFrameLayout: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject: VectorDrawableCompat$VObject()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: void setUrlFilter(java.lang.String)
com.google.gson.ToNumberPolicy: com.google.gson.ToNumberPolicy valueOf(java.lang.String)
androidx.core.view.ViewCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.View)
me.carda.awesome_notifications.core.managers.DisplayedManager: java.util.List getDisplayedByKey(android.content.Context,java.lang.Integer)
kotlinx.coroutines.internal.CtorCache: CtorCache()
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver: boolean isEmpty()
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.types.URLAuthenticationChallenge: URLAuthenticationChallenge(com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace)
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.floatingactionbutton.FloatingActionButtonImpl getImpl()
com.google.firebase.concurrent.UiExecutor: com.google.firebase.concurrent.UiExecutor valueOf(java.lang.String)
com.google.firebase.crashlytics.internal.model.StaticSessionData: StaticSessionData()
me.carda.awesome_notifications.core.managers.ChannelManager: android.app.NotificationManager getAndroidNotificationManager(android.content.Context)
me.carda.awesome_notifications.core.listeners.AwesomeEventListener: void onNewAwesomeEvent(java.lang.String,java.util.Map)
com.google.android.material.button.MaterialButton: java.lang.String getA11yClassName()
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] values()
com.google.android.material.chip.Chip: void setCheckedIconEnabled(boolean)
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureState[] values()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: CustomTabActivityHelper()
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$1: void error(java.lang.String,java.lang.String,java.lang.Object)
me.carda.awesome_notifications.DartBackgroundService: void initializeExternalPlugins(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void ensureRunningOnMainThread()
androidx.appcompat.widget.ActionMenuView: android.graphics.drawable.Drawable getOverflowIcon()
androidx.core.app.JobIntentService: void ensureProcessorRunningLocked(boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult: HitTestResult(int,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: int hashCode()
me.carda.awesome_notifications.core.managers.DefaultsManager: java.lang.Long getDismissedCallbackDispatcher(android.content.Context)
me.carda.awesome_notifications.core.externalLibs.CronExpression: void checkIncrementRange(int,int,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: com.google.gson.Gson buildGson()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt: java.util.Map toMap()
androidx.datastore.preferences.protobuf.WireFormat$FieldType: androidx.datastore.preferences.protobuf.WireFormat$FieldType[] values()
com.google.android.material.chip.Chip: void setInternalOnCheckedChangeListener(com.google.android.material.internal.MaterialCheckable$OnCheckedChangeListener)
com.google.android.material.chip.Chip: float getTextEndPadding()
com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse: int hashCode()
com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse: int hashCode()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getMinWidthMajor()
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.textfield.TextInputLayout: void setCounterMaxLength(int)
me.carda.awesome_notifications.core.externalLibs.CronExpression: void setCalendarHour(java.util.Calendar,int)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$3: MyCookieManager$3(com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.builders.NotificationBuilder: boolean notificationActionShouldAutoDismiss(me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
me.carda.awesome_notifications.core.threads.NotificationScheduler: void whenComplete(java.util.Calendar,me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException)
androidx.core.view.WindowInsetsCompat$Impl: void copyRootViewBounds(android.view.View)
com.google.android.material.chip.ChipGroup: void setFlexWrap(int)
androidx.transition.ViewUtilsApi19$Api29Impl: void setTransitionAlpha(android.view.View,float)
androidx.core.app.JobIntentService: boolean isStopped()
com.google.protobuf.UnknownFieldSchema: UnknownFieldSchema()
androidx.constraintlayout.solver.widgets.Guideline: Guideline()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void startForegroundService(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType valueOf(java.lang.String)
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.NotificationImportance getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.NotificationImportance)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getSuggestedMinimumHeight()
com.google.firebase.sessions.SessionEvents: SessionEvents()
androidx.appcompat.widget.ViewStubCompat: int getInflatedId()
io.flutter.plugins.firebase.core.FlutterFirebaseCoreRegistrar: java.util.List getComponents()
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder: byte[] onPostExecute(byte[])
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar: boolean equals(java.lang.Object)
com.google.android.material.circularreveal.cardview.CircularRevealCardView: android.graphics.drawable.Drawable getCircularRevealOverlayDrawable()
io.grpc.ManagedChannel: ManagedChannel()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: void write(androidx.media.AudioAttributesImplApi21,androidx.versionedparcelable.VersionedParcel)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate$ShouldInterceptRequestCallback: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt decodeResult(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$4$1: void onReceiveValue(java.lang.String)
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: ActionReceived(me.carda.awesome_notifications.core.models.NotificationContentModel,android.content.Intent)
kotlinx.coroutines.internal.ThreadSafeHeap: ThreadSafeHeap()
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate()
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getBackgroundTintList()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.util.Map getIntsStartingWith(android.content.Context,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.AwesomeNotifications: boolean captureNotificationActionFromIntent(android.content.Intent,boolean)
androidx.lifecycle.ProcessLifecycleInitializer: ProcessLifecycleInitializer()
androidx.appcompat.widget.DropDownListView: void setListSelectionHidden(boolean)
com.google.android.material.bottomappbar.BottomAppBar: int getLeftInset()
me.carda.awesome_notifications.DartNotificationActionReceiver: DartNotificationActionReceiver()
androidx.cardview.widget.CardView: int getContentPaddingLeft()
androidx.appcompat.widget.ActionBarOverlayLayout: void setShowingForActionMode(boolean)
kotlinx.coroutines.android.HandlerDispatcher: HandlerDispatcher()
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments: AccessibilityViewCommand$CommandArguments()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$DocumentChangeType: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$DocumentChangeType[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.IChannelDelegate: io.flutter.plugin.common.MethodChannel getChannel()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onPageFinished(android.webkit.WebView,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: void setResourceType(java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedHttpAuthRequestCallback: com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse decodeResult(java.lang.Object)
me.carda.awesome_notifications.core.managers.DismissedManager: boolean saveDismissed(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: java.lang.String getCertificatePassword()
androidx.webkit.WebViewRenderProcessClient: void onRenderProcessResponsive(android.webkit.WebView,androidx.webkit.WebViewRenderProcess)
com.google.gson.internal.bind.TypeAdapters$4: TypeAdapters$4()
com.google.android.material.chip.ChipGroup: int getChipSpacingVertical()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionChannelDelegate: void onFindResultReceived(int,int,boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: void setHeaders(java.util.Map)
androidx.fragment.app.FragmentActivity: void lambda$init$2(android.content.Intent)
androidx.appcompat.app.AppCompatDelegateImpl$Api33Impl: android.window.OnBackInvokedCallback registerOnBackPressedCallback(java.lang.Object,androidx.appcompat.app.AppCompatDelegateImpl)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$13: InAppWebView$13(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,int,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void setContextMenu(java.util.Map)
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle valueOf(java.lang.String)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void removeAllString(android.content.Context,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: void setId(java.lang.Long)
com.google.android.material.card.MaterialCardView: void setRippleColorResource(int)
io.flutter.embedding.engine.FlutterJNI: void onDisplayOverlaySurface(int,int,int,int,int)
io.flutter.embedding.android.FlutterTextureView: void setRenderSurface(android.view.Surface)
me.carda.awesome_notifications.core.managers.DismissedManager: boolean commitChanges(android.content.Context)
io.grpc.internal.GzipInflatingBuffer: GzipInflatingBuffer()
com.google.gson.stream.JsonReader: JsonReader(java.io.Reader)
com.google.android.material.button.MaterialButton: void setIconSize(int)
com.google.common.base.Stopwatch: Stopwatch()
com.google.android.material.appbar.MaterialToolbar: void setSubtitleCentered(boolean)
com.google.common.base.Optional: Optional()
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$0(com.google.firebase.components.ComponentContainer)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$1: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse)
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.OnWindowFocusEventJS: OnWindowFocusEventJS()
com.google.android.material.chip.Chip: float getChipCornerRadius()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getAllowFileAccess()
com.google.gson.internal.bind.TypeAdapters$6: TypeAdapters$6()
com.google.android.material.search.SearchView: android.text.Editable getText()
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.dexterous.flutterlocalnotifications.models.IconSource: com.dexterous.flutterlocalnotifications.models.IconSource[] values()
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int)
androidx.appcompat.widget.LinearLayoutCompat: int getBaseline()
androidx.activity.ComponentActivity: void onRequestPermissionsResult(int,java.lang.String[],int[])
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory[] $values()
com.google.gson.internal.bind.TypeAdapters$27: TypeAdapters$27()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateX()
me.carda.awesome_notifications.core.utils.SerializableUtils: me.carda.awesome_notifications.core.utils.SerializableUtils getInstance()
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.CharSequence castToCharSequence(android.text.PrecomputedText)
io.grpc.InternalChannelz$ChannelTrace$Event$Severity: io.grpc.InternalChannelz$ChannelTrace$Event$Severity[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse onLoadResourceWithCustomScheme(com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver: me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver unsubscribeOnNotificationEvents(me.carda.awesome_notifications.core.listeners.AwesomeExceptionListener)
me.carda.awesome_notifications.core.builders.NotificationBuilder: NotificationBuilder(me.carda.awesome_notifications.core.utils.StringUtils,me.carda.awesome_notifications.core.utils.BitmapUtils,me.carda.awesome_notifications.core.managers.PermissionManager)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$4: void onReceiveValue(java.lang.Object)
com.google.firebase.crashlytics.internal.model.StaticSessionData$AppData: StaticSessionData$AppData()
androidx.core.app.RemoteInput$Api26Impl: java.util.Set getAllowedDataTypes(java.lang.Object)
androidx.core.app.ActivityCompat$Api23Impl: boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void didChangeProgress(int)
com.google.android.material.search.SearchView: void setUpHeaderLayout(int)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: boolean equals(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void updateCustomAccessibilityActions(java.nio.ByteBuffer,java.lang.String[])
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: void setValue(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.TrustedWebActivity: TrustedWebActivity()
me.carda.awesome_notifications.core.managers.LifeCycleManager: me.carda.awesome_notifications.core.managers.LifeCycleManager unsubscribe(me.carda.awesome_notifications.core.listeners.AwesomeLifeCycleEventListener)
com.pichillilorenzo.flutter_inappwebview_android.types.CreateWindowAction: boolean isDialog()
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig$ConfigValue: SchedulerConfig$ConfigValue()
me.carda.awesome_notifications.core.threads.NotificationScheduler: NotificationScheduler(android.content.Context,me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle,me.carda.awesome_notifications.core.enumerators.NotificationSource,me.carda.awesome_notifications.core.models.NotificationModel,android.content.Intent,boolean,me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler)
com.pichillilorenzo.flutter_inappwebview_android.R$anim: R$anim()
me.carda.awesome_notifications.core.managers.StatusBarManager: void registerNotificationIdOnPreferences(android.content.SharedPreferences$Editor,java.lang.String,java.util.Map,java.lang.String,java.lang.String)
androidx.activity.ComponentActivity: void removeOnNewIntentListener(androidx.core.util.Consumer)
androidx.appcompat.widget.SearchView: void setMaxWidth(int)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$300(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceDao: com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace find(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebChromeClient getWebChromeClient()
me.carda.awesome_notifications.core.utils.AudioUtils: me.carda.awesome_notifications.core.utils.AudioUtils getInstance()
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.SessionDatastore getComponents$lambda$4(com.google.firebase.components.ComponentContainer)
me.carda.awesome_notifications.core.builders.NotificationBuilder: me.carda.awesome_notifications.core.models.returnedData.ActionReceived receiveNotificationActionFromIntent(android.content.Context,android.content.Intent,me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle)
androidx.browser.customtabs.CustomTabsServiceConnection: void onCustomTabsServiceConnected(android.content.ComponentName,androidx.browser.customtabs.CustomTabsClient)
me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType: DefaultRingtoneType(java.lang.String,int,java.lang.String)
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setCircularRevealScrimColor(int)
com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType: com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType[] values()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getChipIconTint()
com.pichillilorenzo.flutter_inappwebview_android.Util: java.lang.Object invokeMethodIfExists(java.lang.Object,java.lang.String,java.lang.Object[])
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: android.graphics.Matrix getPlatformViewMatrix()
com.pichillilorenzo.flutter_inappwebview_android.Util: java.lang.Object invokeMethodAndWaitResult(io.flutter.plugin.common.MethodChannel,java.lang.String,java.lang.Object,com.pichillilorenzo.flutter_inappwebview_android.types.SyncBaseCallbackResultImpl)
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.Date getNextValidTimeAfter(java.util.Date)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void stopForegroundService(io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.services.ForegroundService: java.util.Map access$000()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: int access$202(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void setInFullscreen(boolean)
me.carda.awesome_notifications.R$styleable: R$styleable()
io.grpc.Metadata: Metadata()
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: int getPort()
androidx.activity.OnBackPressedDispatcher$Api34Impl: android.window.OnBackInvokedCallback createOnBackAnimationCallback(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0)
androidx.core.view.ViewCompat$UnhandledKeyEventManager: ViewCompat$UnhandledKeyEventManager()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsBeforeUnloadCallback: com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse decodeResult(java.lang.Object)
me.carda.awesome_notifications.core.utils.IntegerUtils: java.lang.Integer extractInteger(java.lang.Object,java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void onScrollStopped()
com.google.android.material.checkbox.MaterialCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowContentAccess(boolean)
androidx.core.content.FileProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: android.net.Uri cache(byte[],java.lang.String,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onStopNestedScroll(android.view.View,int)
androidx.fragment.app.FragmentActivity: void validateRequestPermissionsRequestCode(int)
com.google.android.material.textfield.TextInputLayout: void setPrefixText(java.lang.CharSequence)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: boolean bindCustomTabsService(android.app.Activity)
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy: me.carda.awesome_notifications.core.enumerators.NotificationPrivacy valueOf(java.lang.String)
com.google.firestore.admin.v1.Index$IndexField: Index$IndexField()
me.carda.awesome_notifications.core.externalLibs.CronExpression: CronExpression(java.lang.String)
androidx.appcompat.widget.SearchView: void setIconified(boolean)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Log: CrashlyticsReport$Session$Event$Log()
com.google.android.material.textfield.TextInputEditText: TextInputEditText(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$PermissionRequestCallback: java.lang.Object decodeResult(java.lang.Object)
me.carda.awesome_notifications.core.models.NotificationScheduleModel: java.lang.Boolean hasNextValidDate(java.util.Calendar)
me.carda.awesome_notifications.core.models.AbstractModel: java.lang.Integer getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,java.lang.Integer)
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$2: void onReceiveValue(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void registerImageTexture(long,io.flutter.view.TextureRegistry$ImageConsumer)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalAlign(int)
com.google.android.material.textfield.TextInputLayout: void setEndIconContentDescription(java.lang.CharSequence)
androidx.webkit.WebMessagePortCompat: WebMessagePortCompat()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: java.lang.Boolean acceptsVideo(java.lang.String[])
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView: void onFlutterViewDetached()
com.google.firestore.v1.StructuredQuery$Direction: com.google.firestore.v1.StructuredQuery$Direction[] values()
com.google.android.material.search.SearchView$TransitionState: com.google.android.material.search.SearchView$TransitionState[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: int getDrawableResourceId(android.content.Context,java.lang.String)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsentThirdParty(android.os.Bundle,long)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: java.lang.String toString()
com.google.android.material.chip.Chip: Chip(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: java.util.Map getHeaders()
com.google.android.material.search.SearchBar: android.widget.TextView getTextView()
androidx.appcompat.widget.Toolbar: void setNavigationContentDescription(int)
me.carda.awesome_notifications.core.exceptions.ExceptionFactory: ExceptionFactory()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setElevation(float)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2: void defaultBehaviour(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: WebMessageListener(java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface,io.flutter.plugin.common.BinaryMessenger,java.lang.String,java.util.Set)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$4: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse)
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings: ProcessGlobalConfigSettings()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: java.lang.CharSequence getName(android.media.session.PlaybackState$CustomAction)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceDao: long insert(com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace)
io.flutter.embedding.engine.FlutterJNI: boolean nativeFlutterTextUtilsIsVariationSelector(int)
com.google.android.gms.internal.measurement.zzfr$zzb: zzfr$zzb()
androidx.datastore.preferences.protobuf.ProtoSyntax: androidx.datastore.preferences.protobuf.ProtoSyntax[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult: boolean equals(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void show(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.internal.measurement.zzjg: zzjg()
io.grpc.internal.DnsNameResolverProvider: java.util.Collection getProducedSocketAddressTypes()
androidx.core.graphics.drawable.IconCompat$Api28Impl: android.net.Uri getUri(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: boolean equals(java.lang.Object)
me.carda.awesome_notifications.core.managers.DefaultsManager: boolean setDismissedCallbackDispatcher(android.content.Context,java.lang.Long)
androidx.core.view.WindowInsetsCompat$Impl20: boolean equals(java.lang.Object)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodResetBadge(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$12: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: void setStateDescription(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
io.flutter.embedding.android.FlutterView$ZeroSides: io.flutter.embedding.android.FlutterView$ZeroSides[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.SslErrorExt: java.util.Map toMap(android.net.http.SslError)
me.carda.awesome_notifications.core.services.BackgroundService: void initializeExternalPlugins(android.content.Context)
me.carda.awesome_notifications.core.managers.PermissionManager: void shouldShowRationalePage(android.content.Context,java.lang.String,me.carda.awesome_notifications.core.enumerators.NotificationPermission,java.util.List,me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler)
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: void saveSchedule(android.content.Context,java.lang.Integer,java.lang.String,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.exceptions.ExceptionFactory: me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException createNewAwesomeException(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
androidx.appcompat.widget.SearchView: int getPreferredWidth()
io.flutter.embedding.engine.FlutterJNI: void runBundleAndSnapshotFromLibrary(java.lang.String,java.lang.String,java.lang.String,android.content.res.AssetManager,java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void setPlugin(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
me.carda.awesome_notifications.core.models.NotificationButtonModel: java.lang.String toJson()
com.google.android.datatransport.Priority: com.google.android.datatransport.Priority[] values()
androidx.appcompat.widget.Toolbar: int getTitleMarginBottom()
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: JsConfirmResponse(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Integer)
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: void setId(java.lang.Long)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.SessionFirelogPublisher getComponents$lambda$2(com.google.firebase.components.ComponentContainer)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Application$Organization: CrashlyticsReport$Session$Application$Organization()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setMandatorySystemGestureInsets(androidx.core.graphics.Insets)
me.carda.awesome_notifications.core.broadcasters.receivers.DismissedNotificationReceiver: DismissedNotificationReceiver()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodSetBadgeCounter(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceRequest(android.webkit.WebResourceRequest)
androidx.webkit.ServiceWorkerClientCompat: ServiceWorkerClientCompat()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setNotificationPendingIntents(me.carda.awesome_notifications.core.models.NotificationModel,android.app.PendingIntent,android.app.PendingIntent,androidx.core.app.NotificationCompat$Builder)
androidx.activity.ComponentActivity: void addOnConfigurationChangedListener(androidx.core.util.Consumer)
me.carda.awesome_notifications.core.managers.StatusBarManager: void setIndexActiveNotificationChannel(android.content.SharedPreferences$Editor,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$3: void onReceiveValue(java.lang.Long)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.Person buildPerson(android.content.Context,com.dexterous.flutterlocalnotifications.models.PersonDetails)
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController: FindInteractionController(com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface,com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin,java.lang.Object,com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionSettings)
androidx.core.content.ContextCompat$Api21Impl: java.io.File getCodeCacheDir(android.content.Context)
androidx.core.view.WindowInsetsCompat$Impl20: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: java.util.Map toMap()
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: java.lang.String getAsString()
com.google.gson.stream.JsonWriter: void setIndent(java.lang.String)
me.carda.awesome_notifications.core.models.NotificationIntervalModel: java.util.Map toMap()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$2: InAppWebViewChromeClient$2(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsResult)
com.google.android.material.card.MaterialCardView: int getStrokeWidth()
androidx.cardview.widget.CardView: void setRadius(float)
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemWindowInsets(androidx.core.graphics.Insets)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: void setUnlessTopUrl(java.util.List)
me.carda.awesome_notifications.core.managers.PermissionManager: void access$000(me.carda.awesome_notifications.core.managers.PermissionManager,android.content.Context,java.lang.String,java.util.List,me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void ensureTarget()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.Boolean lambda$getBoolean$0(android.database.Cursor,int)
com.google.android.material.chip.Chip: android.text.TextUtils$TruncateAt getEllipsize()
androidx.appcompat.widget.AppCompatImageView: void setImageURI(android.net.Uri)
androidx.core.app.NotificationCompat$CallStyle: NotificationCompat$CallStyle()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceDao: URLProtectionSpaceDao(com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHelper)
com.google.android.material.appbar.HeaderScrollingViewBehavior: HeaderScrollingViewBehavior(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.lang.String toString()
com.google.firebase.firestore.core.OrderBy$Direction: com.google.firebase.firestore.core.OrderBy$Direction[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: java.lang.String getHost()
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionSettings: com.pichillilorenzo.flutter_inappwebview_android.ISettings parse(java.util.Map)
com.google.firestore.v1.Write$OperationCase: com.google.firestore.v1.Write$OperationCase[] values()
com.google.android.material.internal.CheckableImageButton: CheckableImageButton(android.content.Context,android.util.AttributeSet)
me.carda.awesome_notifications.core.managers.PermissionManager: java.util.List shouldShowRationale(android.content.Context,java.lang.String,java.util.List)
com.google.android.gms.measurement.AppMeasurementJobService: AppMeasurementJobService()
androidx.appcompat.view.menu.ActionMenuItemView: void setExpandedFormat(boolean)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeMinTextSize()
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.types.URLAuthenticationChallenge: java.util.Map toMap()
com.google.android.material.chip.Chip: void setHideMotionSpecResource(int)
androidx.core.widget.TextViewCompat$Api28Impl: java.lang.String[] getDigitStrings(android.icu.text.DecimalFormatSymbols)
com.google.android.gms.internal.measurement.zzml: zzml()
me.carda.awesome_notifications.core.logs.Logger: void d(java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath: VectorDrawableCompat$VPath()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: FlutterRenderer$ImageTextureRegistryEntry(io.flutter.embedding.engine.renderer.FlutterRenderer,long)
androidx.appcompat.widget.ScrollingTabContainerView: void setTabSelected(int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundColor(int)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setIconBitmap(android.media.MediaDescription$Builder,android.graphics.Bitmap)
me.carda.awesome_notifications.core.enumerators.NotificationSource: java.lang.String getSafeName()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void findNext(boolean)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void removeNotificationFromCache(android.content.Context,java.lang.Integer)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: CustomTabsActionButton(int,byte[],java.lang.String,boolean)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction: void setSelector(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$1: void onReceiveValue(java.lang.Object)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object deleteRegistrations(androidx.privacysandbox.ads.adservices.measurement.DeletionRequest,kotlin.coroutines.Continuation)
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean,android.content.res.Configuration)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void scheduleNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundMode(int)
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: int hashCode()
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigManager: void dispose()
me.carda.awesome_notifications.core.managers.LostEventsManager: LostEventsManager()
com.google.gson.stream.JsonReader: void endObject()
androidx.activity.ComponentActivity: boolean onCreatePanelMenu(int,android.view.Menu)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: float getStrokeWidth()
com.google.android.material.card.MaterialCardView: int getCheckedIconSize()
com.google.gson.internal.bind.TypeAdapters$19: TypeAdapters$19()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$1: void error(java.lang.String,java.lang.String,java.lang.Object)
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: CredentialDatabase()
me.carda.awesome_notifications.core.models.NotificationModel: java.util.Map toMap()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)
io.flutter.embedding.engine.FlutterJNI: io.flutter.view.FlutterCallbackInformation nativeLookupCallbackInformation(long)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostCreated(android.app.Activity,android.os.Bundle)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setBackgroundResource(int)
com.google.firebase.firestore.local.Persistence: Persistence()
androidx.appcompat.widget.LinearLayoutCompat: int getDividerPadding()
androidx.constraintlayout.helper.widget.Flow: void setMaxElementsWrap(int)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setExtras(android.media.session.PlaybackState$CustomAction$Builder,android.os.Bundle)
com.google.android.material.textfield.TextInputLayout: void setStartIconCheckable(boolean)
androidx.core.app.RemoteActionCompat: RemoteActionCompat()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.util.Map getRealSettings(java.lang.Object)
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender: BroadcastSender()
androidx.appcompat.widget.SearchView: void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter)
androidx.fragment.app.Fragment$OnPreAttachedListener: Fragment$OnPreAttachedListener()
me.carda.awesome_notifications.core.threads.NotificationSender: me.carda.awesome_notifications.core.models.NotificationModel _buildSummaryGroupNotification(me.carda.awesome_notifications.core.models.NotificationModel)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: FirebaseCommonKtxRegistrar()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedServerTrustAuthRequestCallback: com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse decodeResult(java.lang.Object)
me.carda.awesome_notifications.core.managers.LocalizationManager: java.lang.String getLocalization(android.content.Context)
kotlin.jvm.internal.Intrinsics: Intrinsics()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSettings(android.webkit.WebSettings)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtendMotionSpecResource(int)
com.google.android.material.behavior.SwipeDismissBehavior: SwipeDismissBehavior()
io.flutter.embedding.android.RenderMode: io.flutter.embedding.android.RenderMode[] values()
me.carda.awesome_notifications.core.enumerators.ActionType: java.lang.String getSafeName()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$6: InAppWebViewClient$6(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient,android.os.Message,android.os.Message,android.webkit.WebView)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.content.res.ColorStateList getRippleColorStateList()
me.carda.awesome_notifications.core.utils.BooleanUtils: boolean getValue(java.lang.Boolean)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments: AccessibilityViewCommand$MoveHtmlArguments()
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api24Impl: android.app.Notification$MessagingStyle$Message setData(android.app.Notification$MessagingStyle$Message,java.lang.String,android.net.Uri)
com.google.firestore.v1.BatchGetDocumentsRequest: BatchGetDocumentsRequest()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$2: void onReceiveValue(java.lang.Object)
androidx.core.app.RemoteActionCompatParcelizer: androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.util.LinkedHashSet getContentWorlds()
com.google.android.gms.internal.measurement.zzfy$zzf$zza: zzfy$zzf$zza()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort: void setWebMessageCallback(android.webkit.ValueCallback)
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertCookieManager(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: boolean supportShouldUpRecreateTask(android.content.Intent)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void setDesktopMode(boolean)
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptAjaxRequestJS: InterceptAjaxRequestJS()
androidx.core.view.ViewCompat$Api21Impl: boolean dispatchNestedFling(android.view.View,float,float,boolean)
androidx.media.app.NotificationCompat$Api34Impl: android.app.Notification$MediaStyle setRemotePlaybackInfo(android.app.Notification$MediaStyle,java.lang.CharSequence,int,android.app.PendingIntent,java.lang.Boolean)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getErrorIconDrawable()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: java.util.List access$100()
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerChannelDelegate: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void requestExactAlarmsPermission(com.dexterous.flutterlocalnotifications.PermissionRequestListener)
com.google.firebase.crashlytics.internal.common.CrashlyticsReportWithSessionId: CrashlyticsReportWithSessionId()
androidx.core.app.AppOpsManagerCompat$Api29Impl: java.lang.String getOpPackageName(android.content.Context)
com.google.android.material.datepicker.MaterialCalendarGridView: MaterialCalendarGridView(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.core.view.VelocityTrackerCompat$Api34Impl: float getAxisVelocity(android.view.VelocityTracker,int,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$2: void defaultBehaviour(java.lang.Object)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$302(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: java.lang.String getProtocol()
androidx.appcompat.widget.AppCompatTextHelper$Api24Impl: android.os.LocaleList forLanguageTags(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: int getScrollY()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt: boolean equals(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: int hashCode()
io.grpc.internal.DelayedStream: DelayedStream()
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: java.lang.String getMessage()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$10: InAppWebViewChromeClient$10(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsPromptResult)
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: int getWidthMils()
com.google.android.gms.internal.measurement.zzfy$zzn: zzfy$zzn()
androidx.constraintlayout.helper.widget.Flow: void setWrapMode(int)
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: java.lang.Integer getAction()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void enablePluginScriptAtRuntime(java.lang.String,boolean,com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript)
com.google.android.gms.internal.measurement.zzdm: com.google.android.gms.internal.measurement.zzdj asInterface(android.os.IBinder)
me.carda.awesome_notifications.core.managers.DefaultsManager: java.lang.Long getCreatedCallbackDispatcher(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView: void makeInitialLoad(java.util.HashMap)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonDocumentChange: GeneratedAndroidFirebaseFirestore$PigeonDocumentChange()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$11: InAppWebView$11(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
com.google.gson.stream.JsonReader: char readEscapeCharacter()
androidx.appcompat.widget.AppCompatImageView: void setImageLevel(int)
androidx.constraintlayout.widget.Barrier: void setType(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$4$1: void onReceiveValue(java.lang.Object)
androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType: androidx.constraintlayout.solver.widgets.analyzer.WidgetRun$RunType[] values()
androidx.loader.app.LoaderManagerImpl$LoaderViewModel: LoaderManagerImpl$LoaderViewModel()
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings parse(java.util.Map)
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedHeightMajor()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean dispatchNestedPreFling(float,float)
androidx.core.view.WindowInsetsCompat$Impl: void copyWindowDataInto(androidx.core.view.WindowInsetsCompat)
androidx.appcompat.app.AppCompatActivity: boolean onSupportNavigateUp()
io.flutter.embedding.engine.FlutterJNI: void destroyOverlaySurfaces()
io.flutter.view.TextureRegistry$SurfaceTextureEntry: long id()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void isSecureContext(android.webkit.ValueCallback)
com.google.gson.internal.bind.TypeAdapters$5: TypeAdapters$5()
io.flutter.embedding.engine.FlutterJNI: void setPlatformMessageHandler(io.flutter.embedding.engine.dart.PlatformMessageHandler)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$5: InAppWebViewClient$5(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient,android.webkit.SafeBrowsingResponse,android.webkit.WebView,android.webkit.WebResourceRequest,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedServerTrustAuthRequestCallback: java.lang.Object decodeResult(java.lang.Object)
me.carda.awesome_notifications.DartBackgroundExecutor: void runBackgroundThread(java.lang.Long)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setContentDescription(android.view.MenuItem,java.lang.CharSequence)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.Boolean)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.Class access$100(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
androidx.appcompat.app.AppCompatActivity: void invalidateOptionsMenu()
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle createMessagingStyle(java.lang.CharSequence)
androidx.constraintlayout.widget.Placeholder: int getEmptyVisibility()
com.dexterous.flutterlocalnotifications.models.styles.BigTextStyleInformation: BigTextStyleInformation(java.lang.Boolean,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean,java.lang.String,java.lang.Boolean)
com.google.android.material.search.SearchView: com.google.android.material.search.SearchView$TransitionState getCurrentTransitionState()
com.google.protobuf.Int32Value$Builder: Int32Value$Builder()
me.carda.awesome_notifications.core.background.BackgroundExecutor: void runBackgroundExecutor(android.content.Context,android.content.Intent,java.lang.Long,java.lang.Long)
me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour: java.lang.String getSafeName()
androidx.appcompat.widget.AppCompatRadioButton: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
androidx.activity.Api34Impl: android.window.BackEvent createOnBackEvent(float,float,float,int)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsMenuItem: int hashCode()
me.carda.awesome_notifications.core.managers.LifeCycleManager: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle getApplicationLifeCycle()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: int hashCode()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodRemoveChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.textfield.TextInputLayout: android.graphics.Typeface getTypeface()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void scheduleFrame()
com.google.android.material.search.SearchView: void setTransitionState(com.google.android.material.search.SearchView$TransitionState)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void onPause()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonDocumentSnapshot: GeneratedAndroidFirebaseFirestore$PigeonDocumentSnapshot()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setShowWhen(me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
androidx.constraintlayout.solver.ArrayRow: ArrayRow()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: java.lang.String toString()
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle setDeclineButtonColorHint(android.app.Notification$CallStyle,int)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.WindowInsetsCompat$Impl20: void setOverriddenInsets(androidx.core.graphics.Insets[])
kotlinx.coroutines.android.AndroidDispatcherFactory: java.lang.String hintOnError()
me.carda.awesome_notifications.core.AwesomeNotifications: java.util.List arePermissionsAllowed(java.lang.String,java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$4: ProxyManager$4(com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.app.ComponentActivity: void putExtraData(androidx.core.app.ComponentActivity$ExtraData)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void clearHistory()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: boolean pageDown(boolean)
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionChannelDelegate: FindInteractionChannelDelegate(com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController,io.flutter.plugin.common.MethodChannel)
androidx.core.app.NotificationCompat$CallStyle$Api23Impl: android.os.Parcelable castToParcelable(android.graphics.drawable.Icon)
androidx.appcompat.widget.AppCompatTextView: void setLastBaselineToBottomHeight(int)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialContract: URLCredentialContract()
me.carda.awesome_notifications.core.managers.DisplayedManager: java.util.List listDisplayed(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: void setTextEncodingName(java.lang.String)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Event$Application$Execution$Thread: CrashlyticsReport$Session$Event$Application$Execution$Thread()
me.carda.awesome_notifications.core.managers.BadgeManager: me.carda.awesome_notifications.core.managers.BadgeManager getInstance()
androidx.media.AudioAttributesImplBase: AudioAttributesImplBase()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void getActiveNotificationMessagingStyle(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.appcompat.widget.AppCompatSpinner: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
androidx.startup.InitializationProvider: InitializationProvider()
com.google.android.material.textfield.TextInputLayout: void setError(java.lang.CharSequence)
com.google.android.material.chip.Chip: void setChipIcon(android.graphics.drawable.Drawable)
com.google.firebase.analytics.connector.internal.AnalyticsConnectorRegistrar: AnalyticsConnectorRegistrar()
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder setShortcutId(android.app.Notification$Builder,java.lang.String)
androidx.core.view.VelocityTrackerFallback: VelocityTrackerFallback()
com.google.firebase.firestore.remote.WatchChangeAggregator$BloomFilterApplicationStatus: com.google.firebase.firestore.remote.WatchChangeAggregator$BloomFilterApplicationStatus valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: java.lang.String getIconColor()
com.google.firebase.heartbeatinfo.HeartBeatResult: HeartBeatResult()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.TrustedWebActivity: void prepareCustomTabsIntent(androidx.browser.trusted.TrustedWebActivityIntent)
com.google.android.material.internal.FlowLayout: int getLineSpacing()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void clearAllCache()
me.carda.awesome_notifications.core.AwesomeNotifications: void showDnDGlobalOverridingPage(me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler)
io.flutter.embedding.engine.FlutterJNI: void unregisterTexture(long)
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level[] values()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: void setIfDomain(java.util.List)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: ProcessLifecycleOwner$attach$1$onActivityPreCreated$1(androidx.lifecycle.ProcessLifecycleOwner)
androidx.core.view.ViewGroupCompat$Api21Impl: void setTransitionGroup(android.view.ViewGroup,boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D: double getWidth()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: boolean canScrollHorizontally()
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: void start(android.content.Context,me.carda.awesome_notifications.core.builders.NotificationBuilder,me.carda.awesome_notifications.core.services.ForegroundService$ForegroundServiceIntent,me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle,me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$19: void onReceiveValue(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceWindowChanged(android.view.Surface)
me.carda.awesome_notifications.core.utils.ThreadUtils: ThreadUtils()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: void setUniqueId(android.view.accessibility.AccessibilityNodeInfo,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$1: void onReceiveValue(java.lang.Boolean)
com.google.gson.stream.JsonReader: int nextInt()
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: InAppWebViewFlutterPlugin()
com.google.firebase.messaging.FirebaseMessagingService: FirebaseMessagingService()
androidx.appcompat.widget.AbsActionBarView: int getContentHeight()
androidx.core.view.ViewCompat$Api20Impl: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarHideOffset(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$11: void onCancel(android.content.DialogInterface)
androidx.browser.customtabs.CustomTabsIntent$Api34Impl: void setShareIdentityEnabled(android.app.ActivityOptions,boolean)
com.google.firestore.v1.Target$DocumentsTarget$Builder: Target$DocumentsTarget$Builder()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior()
androidx.constraintlayout.solver.widgets.WidgetContainer: WidgetContainer()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onPageFinished(android.webkit.WebView,java.lang.String)
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType getSafeEnum(java.lang.String)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonQuerySnapshot: GeneratedAndroidFirebaseFirestore$PigeonQuerySnapshot()
me.carda.awesome_notifications.core.utils.MapUtils: java.lang.Boolean isNullOrEmptyKey(java.util.Map,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$3: void onReceiveValue(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerChannelDelegate: TracingControllerChannelDelegate(com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerManager,io.flutter.plugin.common.MethodChannel)
com.pichillilorenzo.flutter_inappwebview_android.PlatformUtil: java.lang.String formatDate(long,java.lang.String,java.util.Locale,java.util.TimeZone)
com.google.gson.stream.JsonWriter: void string(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: java.util.Set getAllowedOriginRules()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: int numImageReaders()
androidx.core.app.ActivityCompat$Api21Impl: void startPostponedEnterTransition(android.app.Activity)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: void setRedirect(boolean)
androidx.core.view.ViewCompat$Api21Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setActivity(android.app.Activity)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode[] values()
me.carda.awesome_notifications.core.models.NotificationChannelGroupModel: me.carda.awesome_notifications.core.models.NotificationChannelGroupModel fromJson(java.lang.String)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity()
androidx.activity.ComponentActivity: void removeOnPictureInPictureModeChangedListener(androidx.core.util.Consumer)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$20: InAppWebView$20(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
androidx.window.extensions.core.util.function.Function: java.lang.Object apply(java.lang.Object)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Icon createWithAdaptiveBitmap(android.graphics.Bitmap)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchSemanticsAction(long,int,int,java.nio.ByteBuffer,int)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.util.Map getRowsStartingWith(android.content.Context,java.lang.String,java.lang.String,java.lang.String,me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB$iGetRow)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager: void setServiceWorkerClient(java.lang.Boolean)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI nativeSpawn(long,java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType: com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType fromValue(int)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodDismissNotificationsByChannelKey(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String[] getStreamTypes(android.net.Uri,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$1: boolean onQueryTextChange(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setHelperTextColor(android.content.res.ColorStateList)
com.google.android.material.chip.Chip: void setChipStrokeColorResource(int)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: void setId(int)
me.carda.awesome_notifications.core.models.AbstractModel: void putDataOnSerializedMap(java.lang.String,java.util.Map,java.util.List)
com.google.android.material.appbar.MaterialToolbar: java.lang.Integer getNavigationIconTint()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$2: void defaultBehaviour(java.lang.Object)
com.google.gson.internal.sql.SqlTimeTypeAdapter$1: SqlTimeTypeAdapter$1()
androidx.appcompat.widget.AppCompatCheckBox: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.settings.SessionsSettings getComponents$lambda$3(com.google.firebase.components.ComponentContainer)
com.google.android.material.button.MaterialButton: void setOnPressedChangeListenerInternal(com.google.android.material.button.MaterialButton$OnPressedChangeListener)
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStarted(android.app.Activity)
me.carda.awesome_notifications.core.AwesomeNotifications: int incrementGlobalBadgeCounter()
com.google.android.material.internal.ForegroundLinearLayout: void setForegroundGravity(int)
io.flutter.embedding.engine.FlutterJNI: void nativeLoadDartDeferredLibrary(long,int,java.lang.String[])
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.Class getMainTargetClass(android.content.Context)
androidx.core.view.WindowInsetsCompat$BuilderImpl: WindowInsetsCompat$BuilderImpl()
com.google.android.gms.internal.measurement.zzga: com.google.android.gms.internal.measurement.zzga[] values()
io.flutter.embedding.engine.FlutterJNI: void nativeOnVsync(long,long,long)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setNumericShortcut(android.view.MenuItem,char,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse)
androidx.core.view.ViewCompat$Api29Impl: android.view.contentcapture.ContentCaptureSession getContentCaptureSession(android.view.View)
com.google.android.datatransport.runtime.ProtoEncoderDoNotUse: ProtoEncoderDoNotUse()
me.carda.awesome_notifications.core.AwesomeNotifications: void requestUserPermissions(android.app.Activity,java.lang.String,java.util.List,me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler)
com.google.android.material.checkbox.MaterialCheckBox: java.lang.CharSequence getErrorAccessibilityLabel()
com.google.firestore.v1.TransactionOptions: TransactionOptions()
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType)
com.pichillilorenzo.flutter_inappwebview_android.PlatformUtil: PlatformUtil(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: boolean onKeyDown(int,android.view.KeyEvent)
com.google.android.material.button.MaterialButton: void setA11yClassName(java.lang.String)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.util.Map access$200(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminateVisibility(boolean)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onJsBeforeUnload(java.lang.String,java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsBeforeUnloadCallback)
com.google.android.material.textfield.TextInputLayout: void setErrorAccessibilityLiveRegion(int)
com.google.android.material.theme.MaterialComponentsViewInflater: MaterialComponentsViewInflater()
com.google.firebase.messaging.FirebaseMessaging: com.google.firebase.messaging.FirebaseMessaging getInstance(com.google.firebase.FirebaseApp)
com.google.android.material.card.MaterialCardView: void setCheckedIconGravity(int)
com.google.firestore.v1.Cursor$Builder: Cursor$Builder()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void close()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHandler: void dispose()
com.google.android.material.chip.Chip: void setCheckedIcon(android.graphics.drawable.Drawable)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$Device: CrashlyticsReport$Session$Device()
me.carda.awesome_notifications.core.AwesomeNotifications: boolean onNewActionReceivedWithInterruption(java.lang.String,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
me.carda.awesome_notifications.core.models.NotificationMessageModel: NotificationMessageModel()
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: boolean equals(java.lang.Object)
me.carda.awesome_notifications.core.models.NotificationScheduleModel: me.carda.awesome_notifications.core.models.NotificationScheduleModel fromMap(java.util.Map)
androidx.coordinatorlayout.widget.CoordinatorLayout: int getNestedScrollAxes()
android.support.v4.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
androidx.core.app.ActivityCompat$Api21Impl: void setEnterSharedElementCallback(android.app.Activity,android.app.SharedElementCallback)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getChildDrawingOrder(int,int)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextEnabled(boolean)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$8: void defaultBehaviour(java.lang.Object)
io.flutter.view.AccessibilityViewEmbedder: AccessibilityViewEmbedder(android.view.View,int)
com.google.android.material.textfield.TextInputLayout: void setErrorEnabled(boolean)
androidx.appcompat.view.menu.ActionMenuItemView: void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback)
androidx.appcompat.widget.Toolbar$Api33Impl: void tryRegisterOnBackInvokedCallback(java.lang.Object,java.lang.Object)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: void addNotificationEvent(android.content.Context,java.lang.String,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void setContextMenu(java.util.Map)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.ArrayList loadScheduledNotifications(android.content.Context)
androidx.tracing.TraceApi29Impl: boolean isEnabled()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: android.view.ActionMode rebuildActionMode(android.view.ActionMode,android.view.ActionMode$Callback)
io.flutter.embedding.engine.FlutterJNI: float getScaledFontSize(float,int)
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate: WebViewAssetLoaderExt$PathHandlerExtChannelDelegate(com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExt,io.flutter.plugin.common.MethodChannel)
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: java.util.Map toMap()
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState: StaggeredGridLayoutManager$SavedState()
com.google.android.material.card.MaterialCardView: com.google.android.material.shape.ShapeAppearanceModel getShapeAppearanceModel()
com.google.android.material.chip.Chip: void setTextAppearance(com.google.android.material.resources.TextAppearance)
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface: void _hideContextMenu()
com.google.android.material.textfield.TextInputLayout: int getBaseline()
com.google.android.material.bottomappbar.BottomAppBar$Behavior: BottomAppBar$Behavior(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: void setAction(java.lang.Integer)
com.google.android.material.appbar.AppBarLayout: int getTopInset()
me.carda.awesome_notifications.core.threads.NotificationScheduler: void cancelScheduleById(android.content.Context,java.lang.Integer)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$RenderProcessResponsiveCallback: WebViewChannelDelegate$RenderProcessResponsiveCallback()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportButtonTintList()
androidx.core.app.JobIntentService: android.os.IBinder onBind(android.content.Intent)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onPrintRequest(java.lang.String,java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$PrintRequestCallback)
me.carda.awesome_notifications.core.models.NotificationIntervalModel: java.util.Calendar getNextValidDate(java.util.Calendar)
me.carda.awesome_notifications.core.utils.AudioUtils: java.lang.Boolean isValidAudio(android.content.Context,java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundResource(int)
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate$HandleCallback: java.lang.Object decodeResult(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy: com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy[] values()
io.flutter.embedding.engine.FlutterJNI: java.lang.String getVMServiceUri()
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings: java.util.Map getRealSettings(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsMenuItem: void setId(int)
androidx.constraintlayout.solver.SolverVariable$Type: androidx.constraintlayout.solver.SolverVariable$Type[] values()
com.google.android.material.bottomsheet.BottomSheetBehavior: BottomSheetBehavior(android.content.Context,android.util.AttributeSet)
com.google.android.material.snackbar.SnackbarContentLayout: SnackbarContentLayout(android.content.Context,android.util.AttributeSet)
com.google.firebase.crashlytics.ktx.FirebaseCrashlyticsKtxRegistrar: FirebaseCrashlyticsKtxRegistrar()
org.chromium.support_lib_boundary.WebMessagePayloadBoundaryInterface: byte[] getAsArrayBuffer()
me.carda.awesome_notifications.core.managers.PermissionManager: boolean isSpecifiedPermissionGloballyAllowed(android.content.Context,me.carda.awesome_notifications.core.enumerators.NotificationPermission)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onGeolocationPermissionsShowPrompt(java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$GeolocationPermissionsShowPromptCallback)
androidx.appcompat.widget.ActionBarContainer: ActionBarContainer(android.content.Context,android.util.AttributeSet)
com.google.type.LatLng$Builder: LatLng$Builder()
com.google.firestore.v1.BatchGetDocumentsResponse: BatchGetDocumentsResponse()
com.google.firebase.installations.ktx.FirebaseInstallationsKtxRegistrar: FirebaseInstallationsKtxRegistrar()
androidx.core.app.ActivityCompat$Api21Impl: void finishAfterTransition(android.app.Activity)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setSound(android.app.Notification$Builder,android.net.Uri,java.lang.Object)
me.carda.awesome_notifications.core.managers.LocalizationManager: LocalizationManager()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel createWebMessageChannel(android.webkit.ValueCallback)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$1: InAppWebView$1(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object getMeasurementApiStatus(kotlin.coroutines.Continuation)
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthenticationChallenge: int hashCode()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ListenSource: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ListenSource valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.Time: com.dexterous.flutterlocalnotifications.models.Time from(java.util.Map)
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource[] $values()
androidx.appcompat.view.menu.ListMenuItemView: android.view.LayoutInflater getInflater()
me.carda.awesome_notifications.core.managers.SharedManager: java.lang.String generateSharedKey(java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: void setBottom(double)
me.carda.awesome_notifications.core.managers.StatusBarManager: java.util.Collection getAllActiveNotificationIdsOnStatusBar()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.media.session.PlaybackState build(android.media.session.PlaybackState$Builder)
androidx.browser.customtabs.CustomTabsIntent$Api24Impl: java.lang.String getDefaultLocale()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getRippleColor()
me.carda.awesome_notifications.core.managers.PermissionManager: boolean isCriticalAlertsGloballyAllowed(android.content.Context)
com.google.android.gms.common.api.internal.BasePendingResult: BasePendingResult()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: void setInputConnectionTarget(android.view.View)
com.google.android.gms.common.api.internal.LifecycleCallback: com.google.android.gms.common.api.internal.LifecycleFragment getChimeraLifecycleFragmentImpl(com.google.android.gms.common.api.internal.LifecycleActivity)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: java.lang.CharSequence getContainerTitle(android.view.accessibility.AccessibilityNodeInfo)
androidx.activity.OnBackPressedDispatcher$Api33Impl: void registerOnBackInvokedCallback(java.lang.Object,int,java.lang.Object)
me.carda.awesome_notifications.core.builders.NotificationBuilder: me.carda.awesome_notifications.core.builders.NotificationBuilder setMediaSession(android.support.v4.media.session.MediaSessionCompat)
com.google.firebase.firestore.core.UserData$Source: com.google.firebase.firestore.core.UserData$Source valueOf(java.lang.String)
io.grpc.ConnectivityState: io.grpc.ConnectivityState[] values()
io.flutter.embedding.engine.FlutterJNI: boolean ShouldDisableAHB()
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: int hashCode()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType[] values()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: void onServiceConnected(androidx.browser.customtabs.CustomTabsClient)
androidx.core.app.RemoteInput$Api20Impl: android.os.Bundle getResultsFromIntent(android.content.Intent)
kotlinx.coroutines.android.AndroidExceptionPreHandler: AndroidExceptionPreHandler()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: void setAllowFileAccess(boolean)
io.grpc.okhttp.OkHttpFrameLogger$SettingParams: io.grpc.okhttp.OkHttpFrameLogger$SettingParams[] values()
androidx.appcompat.widget.AppCompatCheckBox: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void disposeWebMessageChannels()
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: MyCookieManager(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
me.carda.awesome_notifications.core.managers.SharedManager: me.carda.awesome_notifications.core.models.AbstractModel get(android.content.Context,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult: int hashCode()
androidx.core.app.NotificationCompatBuilder$Api23Impl: android.app.Notification$Builder setLargeIcon(android.app.Notification$Builder,android.graphics.drawable.Icon)
com.google.android.gms.measurement.AppMeasurement: void beginAdUnitExposure(java.lang.String)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart[] values()
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessWebViewChannelDelegate: HeadlessWebViewChannelDelegate(com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView,io.flutter.plugin.common.MethodChannel)
androidx.core.view.WindowInsetsCompat$Impl29: androidx.core.graphics.Insets getMandatorySystemGestureInsets()
androidx.appcompat.widget.Toolbar: void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener)
androidx.core.view.ViewCompat$Api21Impl: void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
androidx.appcompat.widget.AppCompatSpinner: void setAdapter(android.widget.SpinnerAdapter)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$User: CrashlyticsReport$Session$User()
androidx.appcompat.widget.ListPopupWindow$Api24Impl: int getMaxAvailableHeight(android.widget.PopupWindow,android.view.View,int,boolean)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList)
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments: AccessibilityViewCommand$MoveAtGranularityArguments()
androidx.appcompat.widget.AppCompatTextView: void setAutoSizeTextTypeWithDefaults(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: java.io.File getCapturedFile(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.Util: java.lang.String JSONStringify(java.lang.Object)
androidx.core.view.ViewCompat$Api20Impl: void requestApplyInsets(android.view.View)
io.flutter.plugins.webviewflutter.PigeonApiWebChromeClient$Companion: PigeonApiWebChromeClient$Companion()
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler[] getPorts()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: int access$200(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback)
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: void setUrl(java.lang.String)
androidx.activity.OnBackPressedDispatcher: OnBackPressedDispatcher()
androidx.constraintlayout.widget.ConstraintLayout: void setMinHeight(int)
androidx.cardview.widget.CardView: int getContentPaddingTop()
androidx.core.os.ConfigurationCompat$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt fromMap(java.util.Map)
io.grpc.ClientTransportFilter: ClientTransportFilter()
com.google.gson.internal.bind.TypeAdapters$12: TypeAdapters$12()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder addExtras(android.app.Notification$Action$Builder,android.os.Bundle)
me.carda.awesome_notifications.core.builders.NotificationBuilder: android.content.Intent getLaunchIntent(android.content.Context)
androidx.appcompat.widget.Toolbar: Toolbar(android.content.Context,android.util.AttributeSet)
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentModeEndMargin()
com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType: com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType valueOf(java.lang.String)
com.google.gson.stream.JsonReader: java.lang.String getPreviousPath()
me.carda.awesome_notifications.core.models.returnedData.NotificationReceived: java.util.Map toMap()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.HashMap getMappedNotificationChannel(android.app.NotificationChannel)
me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour: me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour[] $values()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getPlaceholderTextColor()
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager$DummyServiceWorkerClientCompat: ServiceWorkerManager$DummyServiceWorkerClientCompat()
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.lang.String getTextEncodingName()
androidx.core.app.JobIntentService: JobIntentService()
androidx.core.app.NotificationManagerCompat$Api24Impl: int getImportance(android.app.NotificationManager)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.Integer weekDayStandardToISO8601(java.lang.Integer)
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertChallenge: void setKeyTypes(java.lang.String[])
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$6: boolean nonNullSuccess(java.lang.Integer)
androidx.lifecycle.ViewModelStore: ViewModelStore()
com.google.android.material.appbar.MaterialToolbar: MaterialToolbar(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: void setChipStrokeWidthResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void repeatNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.lang.Boolean)
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: boolean canGoForward()
com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime: com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime[] $values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.util.Map extractNotificationResponseMap(android.content.Intent)
com.google.android.gms.measurement.internal.zzje$zza: com.google.android.gms.measurement.internal.zzje$zza[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: void setDefType(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setLayoutParams(android.view.ViewGroup$LayoutParams)
androidx.appcompat.widget.AppCompatButton: void setEmojiCompatEnabled(boolean)
org.chromium.support_lib_boundary.WebMessageBoundaryInterface: java.lang.reflect.InvocationHandler getMessagePayload()
io.flutter.plugins.webviewflutter.PigeonApiPermissionRequest$Companion: PigeonApiPermissionRequest$Companion()
androidx.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.profileinstaller.ProfileInstallerInitializer: ProfileInstallerInitializer()
io.grpc.internal.MessageDeframer$State: io.grpc.internal.MessageDeframer$State valueOf(java.lang.String)
me.carda.awesome_notifications.core.models.NotificationCrontabModel: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
me.carda.awesome_notifications.core.models.AbstractModel: void putSafeEnumOnSerializedMap(java.lang.String,java.util.Map,me.carda.awesome_notifications.core.enumerators.SafeEnum)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate getChannelDelegate()
me.carda.awesome_notifications.core.externalLibs.CronExpression: boolean isSatisfiedBy(java.util.Date)
androidx.appcompat.widget.AppCompatTextView: void setEmojiCompatEnabled(boolean)
kotlinx.coroutines.CoroutineStart: kotlinx.coroutines.CoroutineStart valueOf(java.lang.String)
androidx.datastore.preferences.protobuf.FieldSet: FieldSet()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: boolean onNewIntent(android.content.Intent)
me.carda.awesome_notifications.core.managers.SharedManager: java.util.List getAllObjects(android.content.Context,java.lang.String)
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback: Animatable2Compat$AnimationCallback()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$7: InAppWebViewChromeClient$7(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsResult)
com.google.firebase.firestore.util.Logger$Level: com.google.firebase.firestore.util.Logger$Level valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationStyle: com.dexterous.flutterlocalnotifications.models.NotificationStyle[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.String getNextFireDate(com.dexterous.flutterlocalnotifications.models.NotificationDetails)
io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode: io.flutter.embedding.android.FlutterActivityLaunchConfigs$BackgroundMode[] values()
com.google.android.material.search.SearchBar: float getCompatElevation()
com.google.firebase.firestore.proto.WriteBatch$Builder: WriteBatch$Builder()
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.lang.String toString()
androidx.fragment.app.FragmentActivity: void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle)
me.carda.awesome_notifications.core.enumerators.GroupSort: me.carda.awesome_notifications.core.enumerators.GroupSort valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: int getPlaceholderTextAppearance()
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: java.lang.String getDefaultValue()
com.google.android.material.bottomappbar.BottomAppBar: androidx.appcompat.widget.ActionMenuView getActionMenuView()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: java.lang.String toString()
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: void setCancelButtonTitle(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings parse(java.util.Map)
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusTopStart()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: void setSystemGestureInsets(androidx.core.graphics.Insets)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: void setPort(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: boolean onTouchEvent(android.view.MotionEvent)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager: androidx.webkit.ServiceWorkerClientCompat dummyServiceWorkerClientCompat()
androidx.fragment.app.FragmentActivity: void onDestroy()
androidx.appcompat.widget.AppCompatToggleButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.cardview.widget.CardView: void setMinimumWidth(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void scrollTo(java.lang.Integer,java.lang.Integer,java.lang.Boolean)
me.carda.awesome_notifications.core.managers.PermissionManager: void refreshReturnedPermissions(android.content.Context,java.lang.String,java.util.List,me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler)
io.grpc.DecompressorRegistry: DecompressorRegistry()
com.google.android.gms.measurement.AppMeasurement: java.util.List getConditionalUserProperties(java.lang.String,java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl: void setStableInsets(androidx.core.graphics.Insets)
com.google.android.material.button.MaterialButton: void setBackgroundResource(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotX(float)
me.carda.awesome_notifications.core.models.AbstractModel: java.lang.Long getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,java.lang.Long)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean startNestedScroll(int)
com.google.android.material.chip.Chip: void setCloseIcon(android.graphics.drawable.Drawable)
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.String getPackageName(android.content.Context)
com.google.android.material.textfield.TextInputLayout: android.graphics.drawable.Drawable getEndIconDrawable()
android.support.v4.media.MediaDescriptionCompat$Api23Impl: void setMediaUri(android.media.MediaDescription$Builder,android.net.Uri)
com.google.common.collect.ImmutableMap: ImmutableMap()
com.google.android.material.textfield.TextInputLayout: void setBoxBackgroundColor(int)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: boolean addPluginScript(com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript)
androidx.core.content.FileProvider: android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void cancelNotification(java.lang.Integer,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner$Api23Impl: void setDropDownViewTheme(android.widget.ThemedSpinnerAdapter,android.content.res.Resources$Theme)
kotlinx.coroutines.scheduling.Task: Task()
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler getProfileStore()
com.google.android.material.search.SearchView: void setModalForAccessibility(boolean)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.google.gson.TypeAdapter create(com.google.gson.Gson,com.google.gson.reflect.TypeToken)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar: CustomTabsSecondaryToolbar(com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource,java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.TrustedWebActivitySingleInstance: TrustedWebActivitySingleInstance()
androidx.lifecycle.Lifecycle$Event: androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String)
com.google.android.material.shape.ShapePath$ShadowCompatOperation: ShapePath$ShadowCompatOperation()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView: void onInputConnectionUnlocked()
io.flutter.embedding.engine.FlutterJNI: void dispatchSemanticsAction(int,io.flutter.view.AccessibilityBridge$Action)
me.carda.awesome_notifications.core.managers.BadgeManager: int decrementGlobalBadgeCounter(android.content.Context)
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setThreshold(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: boolean onCheckIsTextEditor()
androidx.appcompat.widget.AppCompatCheckBox: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void onOverScrolled(int,int,boolean,boolean)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.google.android.gms.common.SupportErrorDialogFragment: SupportErrorDialogFragment()
com.google.android.material.checkbox.MaterialCheckBox: void setChecked(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void onFloatingActionGlobalLayout(int,int)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshChannelDelegate: PullToRefreshChannelDelegate(com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout,io.flutter.plugin.common.MethodChannel)
me.carda.awesome_notifications.core.listeners.AwesomeActionEventListener: boolean onNewActionReceivedWithInterruption(java.lang.String,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt fromWebResourceError(android.webkit.WebResourceError)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.Boolean setInboxLayout(android.content.Context,me.carda.awesome_notifications.core.models.NotificationContentModel,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setRippleColor(android.content.res.ColorStateList)
com.google.android.material.card.MaterialCardView: void setCardElevation(float)
androidx.transition.ViewUtilsApi23$Api29Impl: void setTransitionVisibility(android.view.View,int)
com.google.android.gms.internal.measurement.zzib: zzib()
io.grpc.internal.GrpcUtil$Http2Error: io.grpc.internal.GrpcUtil$Http2Error valueOf(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setVerticalGravity(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.util.Map requestImageRef()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void cleanup()
androidx.core.view.ViewCompat$Api29Impl: java.util.List getSystemGestureExclusionRects(android.view.View)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int)
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsBeforeUnloadCallback: WebViewChannelDelegate$JsBeforeUnloadCallback()
androidx.appcompat.widget.TooltipCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.google.android.material.chip.ChipGroup: void setChipSpacingResource(int)
me.carda.awesome_notifications.core.managers.ChannelGroupManager: void setAndroidChannelGroup(android.content.Context,me.carda.awesome_notifications.core.models.NotificationChannelGroupModel)
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$2: MyWebStorage$2(com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.app.AppCompatActivity: android.content.res.Resources getResources()
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout getSafeEnum(java.lang.String)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: int getMaxInlineActionWidth()
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.NotificationSource getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.NotificationSource)
io.flutter.embedding.android.FlutterView: io.flutter.embedding.engine.renderer.FlutterRenderer$ViewportMetrics getViewportMetrics()
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: WebMessageChannel(java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabaseHandler: CredentialDatabaseHandler(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.lang.String getChannelHashKey(android.content.Context,boolean)
com.google.android.datatransport.cct.internal.ClientInfo$ClientType: com.google.android.datatransport.cct.internal.ClientInfo$ClientType valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: void removeUserOnlyScriptsByGroupName(java.lang.String)
me.carda.awesome_notifications.core.AwesomeNotifications: void cancelAllNotifications()
com.google.android.material.appbar.AppBarLayout: int getPendingAction()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$3: void onReceiveValue(java.lang.String)
me.carda.awesome_notifications.AwesomeNotificationsFlutterExtension: void loadExternalExtensions(android.content.Context)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void updateTexImage()
com.google.android.gms.internal.measurement.zzbx: android.os.IBinder asBinder()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setAllowSystemGeneratedContextualActions(android.app.Notification$Builder,boolean)
me.carda.awesome_notifications.core.managers.ScheduleManager: java.util.List listSchedules(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse fromMap(java.util.Map)
com.google.gson.stream.JsonReader$1: JsonReader$1()
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse fromMap(java.util.Map)
androidx.core.view.ViewCompat$Api28Impl: void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat)
com.google.android.gms.dynamite.zzn: zzn()
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeBroadcastReceiver: AwesomeBroadcastReceiver()
me.carda.awesome_notifications.core.models.DefaultsModel: java.lang.String toJson()
androidx.core.app.NotificationCompat$BubbleMetadata$Api29Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.net.Uri getCapturedMediaFile()
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: java.lang.String toString()
io.grpc.okhttp.OkHttpChannelProvider: int priority()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: android.app.Activity getActivity()
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt: void dispose()
androidx.datastore.preferences.PreferencesProto$Value$Builder: PreferencesProto$Value$Builder()
com.pichillilorenzo.flutter_inappwebview_android.R$style: R$style()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setupNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState: kotlinx.coroutines.scheduling.CoroutineScheduler$WorkerState[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy: com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy[] $values()
com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails: com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails from(java.util.Map)
androidx.datastore.preferences.protobuf.IntArrayList: IntArrayList()
me.carda.awesome_notifications.core.models.returnedData.NotificationReceived: java.lang.String toJson()
kotlin.random.Random: Random()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void loadCustomJavaScriptOnPageFinished(android.webkit.WebView)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onReceivedClientCertRequest(android.webkit.WebView,android.webkit.ClientCertRequest)
me.carda.awesome_notifications.core.logs.Logger: java.lang.String getLastLine()
com.google.android.material.appbar.AppBarLayout$ScrollingViewBehavior: AppBarLayout$ScrollingViewBehavior()
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: java.util.Map toMap()
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getIconTint()
androidx.appcompat.widget.MenuPopupWindow$Api23Impl: void setEnterTransition(android.widget.PopupWindow,android.transition.Transition)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetStart()
me.carda.awesome_notifications.core.enumerators.SafeEnum: java.lang.String getSafeName()
com.google.android.material.search.SearchView: int getDefaultNavigationIconResource()
com.google.protobuf.GeneratedMessageLite$MethodToInvoke: com.google.protobuf.GeneratedMessageLite$MethodToInvoke valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.R$color: R$color()
androidx.appcompat.widget.SearchView$Api29Impl: void setInputMethodMode(androidx.appcompat.widget.SearchView$SearchAutoComplete,int)
com.google.gson.stream.JsonReader: java.lang.String getPath(boolean)
androidx.core.app.ComponentActivity: ComponentActivity()
androidx.activity.ComponentActivity: androidx.activity.OnBackPressedDispatcher access$100(androidx.activity.ComponentActivity)
me.carda.awesome_notifications.core.AwesomeNotifications: void notifyAwesomeEvent(java.lang.String,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: void onReattachedToActivityForConfigChanges(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
androidx.appcompat.resources.Compatibility$Api21Impl: int getChangingConfigurations(android.content.res.TypedArray)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void deleteNotificationChannelGroup(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.content.res.ColorStateList getSupportBackgroundTintList()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readProgressInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
io.grpc.ChannelLogger$ChannelLogLevel: io.grpc.ChannelLogger$ChannelLogLevel valueOf(java.lang.String)
com.google.android.material.button.MaterialButton: android.content.res.ColorStateList getBackgroundTintList()
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.models.AbstractModel getClone()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserChannelDelegate: void onBrowserCreated()
com.pichillilorenzo.flutter_inappwebview_android.Util: java.lang.Object getOrDefault(java.util.Map,java.lang.String,java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController: PrintJobController(java.lang.String,android.print.PrintJob,com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings,com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
me.carda.awesome_notifications.core.threads.NotificationScheduler: boolean isScheduleActiveOnAlarmManager(android.content.Context,java.lang.Integer)
com.google.gson.internal.bind.TypeAdapters$1: TypeAdapters$1()
kotlinx.coroutines.CancelHandler: CancelHandler()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: android.database.sqlite.SQLiteDatabase getReadableDatabase(android.content.Context)
androidx.appcompat.widget.AppCompatButton: int getAutoSizeTextType()
androidx.appcompat.widget.AppCompatImageButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
io.flutter.plugins.webviewflutter.PigeonApiCustomViewCallback$Companion: PigeonApiCustomViewCallback$Companion()
androidx.appcompat.widget.AppCompatSpinner: androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup()
androidx.core.content.FileProvider: java.lang.String getTypeAnonymous(android.net.Uri)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void loadCustomJavaScriptOnPageFinished(android.webkit.WebView)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$SyncLoadResourceWithCustomSchemeCallback: WebViewChannelDelegate$SyncLoadResourceWithCustomSchemeCallback()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintList(android.content.res.ColorStateList)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostResumed(android.app.Activity)
com.google.gson.stream.JsonReader: java.lang.String nextQuotedValue(char)
me.carda.awesome_notifications.core.models.DefaultsModel: DefaultsModel(java.lang.String,java.lang.Long,java.lang.Long,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController: void cancel()
androidx.activity.ComponentActivity: android.os.Bundle lambda$new$1()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$1: WebMessagePort$1(com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort,android.webkit.ValueCallback)
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomContentView(android.app.Notification$Builder,android.widget.RemoteViews)
kotlinx.coroutines.ExecutorCoroutineDispatcher: ExecutorCoroutineDispatcher()
androidx.appcompat.widget.AppCompatCheckedTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlocker: void setTrigger(com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: boolean access$102(io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback,boolean)
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setContentDescription(android.app.Notification$BigPictureStyle,java.lang.CharSequence)
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: java.lang.String getCancelButtonTitle()
androidx.recyclerview.widget.RecyclerView: void suppressLayout(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void createBeforeUnloadDialog(java.lang.String,android.webkit.JsResult,java.lang.String,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,android.webkit.WebResourceRequest)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void getSelectedText(android.webkit.ValueCallback)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodShouldShowRationale(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.common.util.concurrent.DirectExecutor: com.google.common.util.concurrent.DirectExecutor[] values()
androidx.appcompat.widget.ActionBarContextView: int getContentHeight()
com.google.firebase.firestore.local.IndexManager$IndexType: com.google.firebase.firestore.local.IndexManager$IndexType valueOf(java.lang.String)
com.google.android.material.chip.Chip: void setMinLines(int)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeBroadcastReceiver: void onReceive(android.content.Context,android.content.Intent)
com.google.android.material.search.SearchView: void setAnimatedNavigationIcon(boolean)
androidx.recyclerview.widget.RecyclerView$ItemDecoration: RecyclerView$ItemDecoration()
com.google.gson.stream.JsonReader: boolean nextBoolean()
com.google.firestore.v1.DocumentTransform: DocumentTransform()
androidx.window.layout.adapter.sidecar.DistinctElementSidecarCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
io.grpc.ClientStreamTracer: ClientStreamTracer()
com.google.android.material.textfield.TextInputLayout: float getBoxCornerRadiusBottomEnd()
androidx.appcompat.widget.AppCompatTextView: void setBackgroundResource(int)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort: void dispose()
androidx.core.widget.TextViewCompat$Api23Impl: int getBreakStrategy(android.widget.TextView)
androidx.appcompat.widget.ViewStubCompat: void setVisibility(int)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean isNestedScrollingEnabled()
com.google.firebase.firestore.core.EventManager$ListenerSetupAction: com.google.firebase.firestore.core.EventManager$ListenerSetupAction valueOf(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getTranslateY()
androidx.appcompat.widget.SearchView: void setQueryRefinementEnabled(boolean)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void lambda$setAllFloatValues$5(android.content.ContentValues,java.lang.Float)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$ApplicationExitInfo: CrashlyticsReport$ApplicationExitInfo()
androidx.appcompat.widget.Toolbar: java.lang.CharSequence getTitle()
com.google.firebase.firestore.FirebaseFirestoreKtxRegistrar: java.util.List getComponents()
me.carda.awesome_notifications.core.utils.AudioUtils: AudioUtils()
androidx.appcompat.app.AppCompatActivity: boolean onMenuItemSelected(int,android.view.MenuItem)
org.chromium.support_lib_boundary.WebMessageListenerBoundaryInterface: void onPostMessage(android.webkit.WebView,java.lang.reflect.InvocationHandler,android.net.Uri,boolean,java.lang.reflect.InvocationHandler)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void evaluateJavascript(java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld,android.webkit.ValueCallback)
com.google.android.material.button.MaterialButton: void setStrokeColorResource(int)
com.google.android.gms.internal.measurement.zzfo$zza$zza: zzfo$zza$zza()
androidx.concurrent.futures.AbstractResolvableFuture: AbstractResolvableFuture()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonSnapshotMetadata: GeneratedAndroidFirebaseFirestore$PigeonSnapshotMetadata()
me.carda.awesome_notifications.core.managers.DefaultsManager: me.carda.awesome_notifications.core.managers.DefaultsManager getInstance(android.content.Context)
kotlinx.coroutines.EventLoopImplBase: EventLoopImplBase()
androidx.core.app.RemoteInput$Api20Impl: void addResultsToIntent(java.lang.Object,android.content.Intent,android.os.Bundle)
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: android.view.ActionMode onWindowStartingActionMode(android.view.Window$Callback,android.view.ActionMode$Callback,int)
me.carda.awesome_notifications.core.threads.NotificationThread: void execute()
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.Class tryResolveClassName(java.lang.String)
io.flutter.embedding.android.TransparencyMode: io.flutter.embedding.android.TransparencyMode valueOf(java.lang.String)
com.google.gson.JsonNull: JsonNull()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: boolean isMultiProcessEnabled()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onItemActionPerform(int,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.managers.ScheduleManager: android.app.AlarmManager getAlarmManager(android.content.Context)
com.google.firebase.firestore.proto.NoDocument: NoDocument()
com.google.android.material.appbar.AppBarLayout$BaseBehavior: AppBarLayout$BaseBehavior(android.content.Context,android.util.AttributeSet)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke: androidx.datastore.preferences.protobuf.GeneratedMessageLite$MethodToInvoke[] values()
com.google.firebase.datatransport.TransportRegistrar: com.google.android.datatransport.TransportFactory lambda$getComponents$2(com.google.firebase.components.ComponentContainer)
androidx.media.app.NotificationCompat$Api15Impl: void setContentDescription(android.widget.RemoteViews,int,java.lang.CharSequence)
com.google.android.material.appbar.MaterialToolbar: void setNavigationIconTint(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void openFileChooser(android.webkit.ValueCallback,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld getContentWorld()
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointRegionalIndicator(int)
me.carda.awesome_notifications.core.models.DefaultsModel: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: com.pichillilorenzo.flutter_inappwebview_android.ISettings parse(java.util.Map)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int)
me.carda.awesome_notifications.core.models.NotificationChannelGroupModel: java.util.Map toMap()
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel$1: void onReceiveValue(java.lang.Object)
me.carda.awesome_notifications.core.managers.DefaultsManager: boolean setDartCallbackDispatcher(android.content.Context,java.lang.Long)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onImage(android.media.ImageReader,android.media.Image)
io.grpc.internal.DnsNameResolver$JdkAddressResolver: io.grpc.internal.DnsNameResolver$JdkAddressResolver valueOf(java.lang.String)
com.google.android.material.chip.Chip: java.lang.CharSequence getAccessibilityClassName()
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$4: void run()
com.pichillilorenzo.flutter_inappwebview_android.webview.ContextMenuSettings: ContextMenuSettings()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10$1: InAppWebView$10$1(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10)
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
me.carda.awesome_notifications.DartBackgroundExecutor: boolean runBackgroundAction(android.content.Context,android.content.Intent)
com.google.android.material.button.MaterialButton: int getInsetBottom()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void resumeTimers()
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender: void sendBroadcastNotificationDismissed(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$3: void onReceiveValue(java.lang.Boolean)
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsMenuItem: void setLabel(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptFetchRequestJS: InterceptFetchRequestJS()
com.google.android.gms.internal.measurement.zzkk: zzkk()
com.google.firebase.crashlytics.internal.model.StaticSessionData$OsData: StaticSessionData$OsData()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: boolean checkInputConnectionProxy(android.view.View)
me.carda.awesome_notifications.core.managers.ChannelManager: java.lang.Boolean removeChannel(android.content.Context,java.lang.String)
io.grpc.TlsChannelCredentials$Feature: io.grpc.TlsChannelCredentials$Feature[] values()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.app.AlarmManager getAlarmManager(android.content.Context)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter beginArray()
androidx.core.view.ViewParentCompat$Api21Impl: void onStopNestedScroll(android.view.ViewParent,android.view.View)
me.carda.awesome_notifications.core.utils.ThreadUtils: boolean isMainThread()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton fromMap(java.util.Map)
androidx.core.widget.EdgeEffectCompat$Api31Impl: float onPullDistance(android.widget.EdgeEffect,float,float)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void dispose()
androidx.appcompat.widget.ActionMenuView: android.view.Menu getMenu()
io.grpc.ClientCall$Listener: ClientCall$Listener()
androidx.core.view.ViewCompat$Api21Impl: boolean isImportantForAccessibility(android.view.View)
com.google.gson.internal.bind.TypeAdapters$10: TypeAdapters$10()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag[] values()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodCreateNotification(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.checkbox.MaterialCheckBox: int getCheckedState()
me.carda.awesome_notifications.core.utils.BitmapUtils: android.graphics.Bitmap getBitmapFromSource(android.content.Context,java.lang.String,boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: MarginsExt(double,double,double,double)
com.google.android.material.transformation.ExpandableBehavior: ExpandableBehavior()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: InAppWebViewClientCompat(com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: void setDescription(java.lang.String)
com.google.firestore.v1.StructuredQuery$CompositeFilter$Builder: StructuredQuery$CompositeFilter$Builder()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialContract$FeedEntry: URLCredentialContract$FeedEntry()
io.flutter.plugins.webviewflutter.PigeonApiWebSettings$Companion: PigeonApiWebSettings$Companion()
me.carda.awesome_notifications.core.AwesomeNotifications: void showNotificationPage(java.lang.String,me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler)
androidx.appcompat.app.AppCompatActivity: boolean onMenuOpened(int,android.view.Menu)
androidx.appcompat.widget.Toolbar: androidx.appcompat.widget.DecorToolbar getWrapper()
io.grpc.okhttp.OkHttpChannelProvider: io.grpc.ManagedChannelBuilder builderForTarget(java.lang.String)
androidx.appcompat.widget.LinearLayoutCompat: void setGravity(int)
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: void setId(int)
com.pichillilorenzo.flutter_inappwebview_android.R$styleable: R$styleable()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getBufferedPosition(android.media.session.PlaybackState)
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: boolean isShowAsAction()
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: void notifyActionEvent(java.lang.String,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
androidx.activity.ComponentActivity: void lambda$new$2(android.content.Context)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingWhitelist(java.util.List,android.webkit.ValueCallback)
com.google.android.datatransport.runtime.scheduling.jobscheduling.SchedulerConfig: SchedulerConfig()
androidx.appcompat.widget.ActionBarOverlayLayout: void setOverlayMode(boolean)
androidx.core.view.ViewCompat$Api26Impl: void setNextClusterForwardId(android.view.View,int)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceDao: long delete(com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: boolean isAvailable(android.app.Activity)
androidx.media.app.NotificationCompat$Api21Impl: void setMediaStyle(android.app.Notification$Builder,android.app.Notification$MediaStyle)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class,java.lang.String)
androidx.transition.ViewUtilsApi21$Api29Impl: void transformMatrixToGlobal(android.view.View,android.graphics.Matrix)
androidx.core.view.ViewCompat$Api21Impl: void setTranslationZ(android.view.View,float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSize(int)
me.carda.awesome_notifications.core.utils.ListUtils: boolean isNullOrEmpty(java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: void onDetachedFromActivity()
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: java.lang.String getPassword()
androidx.datastore.core.SingleProcessDataStore$Message: SingleProcessDataStore$Message()
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData: RecyclerView$RecycledViewPool$ScrapData()
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController: void disposeNoCancel()
me.carda.awesome_notifications.core.managers.ScheduleManager: void cancelScheduleById(android.content.Context,java.lang.Integer)
me.carda.awesome_notifications.core.services.BackgroundService: java.lang.Long getDartCallbackDispatcher(android.content.Context)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsConfirmCallback: com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse decodeResult(java.lang.Object)
me.carda.awesome_notifications.core.enumerators.NotificationSource: me.carda.awesome_notifications.core.enumerators.NotificationSource valueOf(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type: androidx.constraintlayout.solver.widgets.ConstraintAnchor$Type[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserId(java.lang.String,long)
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission[] values()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodGetLocalTimeZone(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.shape.ShapeAppearanceModel: ShapeAppearanceModel()
com.google.android.material.textfield.TextInputLayout: void setStartIconScaleType(android.widget.ImageView$ScaleType)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidth(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$13: void onClick(android.content.DialogInterface,int)
me.leolin.shortcutbadger.impl.DefaultBadger: DefaultBadger()
me.carda.awesome_notifications.core.R: R()
com.google.android.gms.internal.measurement.zzfr$zzc: zzfr$zzc()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onReceivedLoginRequest(java.lang.String,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.models.NotificationModel: me.carda.awesome_notifications.core.models.NotificationModel fromJson(java.lang.String)
me.carda.awesome_notifications.core.AwesomeNotifications: int getGlobalBadgeCounter()
com.google.android.material.textfield.TextInputLayout: void setCounterTextAppearance(int)
androidx.core.view.ViewCompat$Api21Impl: void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: boolean hasWindowFocus()
androidx.window.extensions.core.util.function.Predicate: boolean test(java.lang.Object)
com.google.gson.stream.JsonReader: java.lang.String getPath()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: ImeSyncDeferringInsetsCallback(android.view.View)
com.google.android.material.chip.Chip: void setChipStartPaddingResource(int)
com.google.android.material.textfield.TextInputLayout: void setSuffixText(java.lang.CharSequence)
me.carda.awesome_notifications.core.managers.StatusBarManager: void onNotificationPosted(android.service.notification.StatusBarNotification)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$6: void defaultBehaviour(java.lang.Object)
androidx.appcompat.widget.Toolbar: android.widget.TextView getTitleTextView()
com.google.gson.internal.bind.TypeAdapters$21: TypeAdapters$21()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onLoadStart(java.lang.String)
androidx.constraintlayout.solver.widgets.ConstraintWidget: ConstraintWidget()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: byte[] castObjectToByteArray(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String escapeContentWorldName(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt fromMediaSize(android.print.PrintAttributes$MediaSize)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType fromValue(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeDispatchPointerDataPacket(long,java.nio.ByteBuffer,int)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings: void setLayoutAlgorithm(java.lang.String)
com.google.firestore.v1.StructuredQuery$UnaryFilter$Builder: StructuredQuery$UnaryFilter$Builder()
me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException: AwesomeNotificationsException(java.lang.String,java.lang.String,java.lang.String,java.lang.StackTraceElement[])
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endArray()
io.flutter.embedding.engine.FlutterJNI: void onFirstFrame()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void allowShouldOverrideUrlLoading(android.webkit.WebView,java.lang.String,java.util.Map,boolean)
com.google.android.material.textfield.TextInputLayout: void setEndIconMode(int)
androidx.core.widget.NestedScrollView: int getNestedScrollAxes()
me.carda.awesome_notifications.core.managers.PermissionManager: boolean handlePermissionResult(int,java.lang.String[],int[])
me.carda.awesome_notifications.core.managers.CreatedManager: me.carda.awesome_notifications.core.managers.CreatedManager getInstance()
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl29: boolean isHorizontallyScrollable(android.widget.TextView)
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertChallenge: boolean equals(java.lang.Object)
me.carda.awesome_notifications.core.managers.ActionManager: me.carda.awesome_notifications.core.models.returnedData.ActionReceived getInitialActionReceived()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$1: void defaultBehaviour(java.lang.Object)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleTintList(android.content.res.ColorStateList)
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertChallenge: int hashCode()
com.google.firebase.firestore.core.ActivityScope$StopListenerFragment: ActivityScope$StopListenerFragment()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setDefaultEventParameters(android.os.Bundle)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$3: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelShowGlobalDndPage(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setCategoryFlags(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,android.app.Notification)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin getPlugin()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeTextType()
androidx.activity.ComponentActivity: void addOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
me.carda.awesome_notifications.core.exceptions.ExceptionFactory: void registerNewAwesomeException(java.lang.String,java.lang.String,java.lang.String,java.lang.Exception)
androidx.appcompat.view.menu.ActionMenuItemView: void setTitle(java.lang.CharSequence)
com.google.android.material.internal.ForegroundLinearLayout: ForegroundLinearLayout(android.content.Context,android.util.AttributeSet)
com.google.android.material.textfield.TextInputLayout: void setCounterEnabled(boolean)
androidx.constraintlayout.widget.ConstraintAttribute$AttributeType: androidx.constraintlayout.widget.ConstraintAttribute$AttributeType valueOf(java.lang.String)
com.google.android.gms.measurement.AppMeasurement: int getMaxUserProperties(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$Api21Impl: boolean isPowerSaveMode(android.os.PowerManager)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: boolean hasRequestInitialAccessibilityFocus(android.view.accessibility.AccessibilityNodeInfo)
androidx.datastore.preferences.PreferencesProto$Value$ValueCase: androidx.datastore.preferences.PreferencesProto$Value$ValueCase valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: void setContainerView(android.view.View)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$State)
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.models.SoundSource: com.dexterous.flutterlocalnotifications.models.SoundSource valueOf(java.lang.String)
com.google.android.material.bottomappbar.BottomAppBar: int getRightInset()
com.google.gson.internal.bind.TypeAdapters$9: TypeAdapters$9()
me.carda.awesome_notifications.core.models.NotificationMessageModel: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt fromWebResourceError(androidx.webkit.WebResourceErrorCompat)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readGroupingInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: int countRows(android.content.Context,java.lang.String,java.lang.String)
com.google.firebase.installations.remote.TokenResult$ResponseCode: com.google.firebase.installations.remote.TokenResult$ResponseCode[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController getUserContentController()
androidx.recyclerview.widget.RecyclerView: void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate)
androidx.appcompat.widget.AppCompatRadioButton: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.android.material.radiobutton.MaterialRadioButton: android.content.res.ColorStateList getMaterialThemeColorsTintList()
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: java.lang.String toString()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setEnterpriseAuthenticationAppLinkPolicyEnabled(boolean)
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextAppearance(int)
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[])
com.google.android.gms.internal.measurement.zzjs: zzjs()
com.google.android.material.button.MaterialButton: int getIconGravity()
androidx.media.AudioAttributesImplBaseParcelizer: AudioAttributesImplBaseParcelizer()
io.grpc.internal.JsonUtil: JsonUtil()
androidx.core.widget.TextViewCompat$Api23Impl: android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: androidx.core.app.NotificationCompat$MessagingStyle$Message createMessage(android.content.Context,com.dexterous.flutterlocalnotifications.models.MessageDetails)
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFileProvider: InAppWebViewFileProvider()
com.google.android.material.search.SearchBar: void setNavigationIconDecorative(boolean)
com.google.android.material.chip.Chip: void setChipIconVisible(int)
io.grpc.stub.ClientCalls: ClientCalls()
com.google.android.material.chip.Chip: void setCheckedIconVisible(boolean)
com.google.android.material.chip.Chip: com.google.android.material.animation.MotionSpec getShowMotionSpec()
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionSettings: com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionSettings parse(java.util.Map)
androidx.activity.ComponentActivity: void onTrimMemory(int)
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: BaseTransientBottomBar$SnackbarBaseLayout(android.content.Context,android.util.AttributeSet)
me.carda.awesome_notifications.core.managers.DefaultsManager: boolean setDefaultIcon(android.content.Context,java.lang.String)
com.google.firestore.v1.RunAggregationQueryResponse: RunAggregationQueryResponse()
androidx.core.content.FileProvider: android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: void setData(byte[])
io.flutter.plugins.webviewflutter.PigeonApiCookieManager$Companion: PigeonApiCookieManager$Companion()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10$1: void onReceiveValue(java.lang.String)
me.carda.awesome_notifications.core.managers.StatusBarManager: java.util.List unregisterActiveChannelKey(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$3: void error(java.lang.String,java.lang.String,java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: int hashCode()
com.google.android.material.textfield.TextInputLayout: int getHelperTextCurrentTextColor()
io.flutter.plugins.webviewflutter.WebViewClientProxyApi$WebViewClientCompatImpl: void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap)
com.google.firestore.v1.DocumentTransform$FieldTransform: DocumentTransform$FieldTransform()
com.google.firestore.v1.StructuredQuery$CollectionSelector$Builder: StructuredQuery$CollectionSelector$Builder()
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel$1: WebMessageChannel$1(com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel,android.webkit.ValueCallback,com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel)
io.flutter.plugins.firebase.firestore.FlutterFirebaseFirestoreRegistrar: java.util.List getComponents()
com.google.android.material.chip.Chip: android.content.res.ColorStateList getCheckedIconTint()
androidx.core.app.NotificationCompat$CallStyle$Api21Impl: android.app.Notification$Builder setCategory(android.app.Notification$Builder,java.lang.String)
me.carda.awesome_notifications.core.models.NotificationIntervalModel: me.carda.awesome_notifications.core.models.NotificationIntervalModel fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$8: InAppWebViewChromeClient$8(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsPromptResult,android.webkit.WebView,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCheckMarkTintList(android.content.res.ColorStateList)
me.carda.awesome_notifications.core.enumerators.NotificationPermission: me.carda.awesome_notifications.core.enumerators.NotificationPermission getSafeEnum(java.lang.String)
androidx.core.graphics.PaintCompat$Api23Impl: boolean hasGlyph(android.graphics.Paint,java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setErrorIconOnLongClickListener(android.view.View$OnLongClickListener)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView$1: void run()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setTranslateY(float)
me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour: me.carda.awesome_notifications.core.enumerators.GroupAlertBehaviour[] values()
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager()
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy: boolean equalsValue(int)
me.carda.awesome_notifications.core.AwesomeNotifications: void notifyActionEvent(java.lang.String,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer$PerImage dequeueImage()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setCurrentScreen(com.google.android.gms.dynamic.IObjectWrapper,java.lang.String,java.lang.String,long)
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: void setConfirmButtonTitle(java.lang.String)
androidx.core.app.NotificationManagerCompat$Api26Impl: void createNotificationChannels(android.app.NotificationManager,java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: ChromeCustomTabsActivity()
com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo: CircularRevealWidget$RevealInfo()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.dexterous.flutterlocalnotifications.models.SoundSource: SoundSource(java.lang.String,int)
me.carda.awesome_notifications.core.utils.StringUtils: java.lang.Boolean isNullOrEmpty(java.lang.String)
com.google.firebase.firestore.Filter: Filter()
me.carda.awesome_notifications.core.models.NotificationScheduleModel: java.util.Map toMap()
com.google.android.material.appbar.AppBarLayout: int getTotalScrollRange()
com.google.gson.internal.bind.TypeAdapters$16: TypeAdapters$16()
androidx.lifecycle.SavedStateHandle: SavedStateHandle()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: InputAwareWebView(android.content.Context,android.view.View,java.lang.Boolean)
androidx.appcompat.widget.AppCompatToggleButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.versionedparcelable.ParcelUtils: ParcelUtils()
com.google.android.material.textfield.TextInputLayout: void setEndIconTintMode(android.graphics.PorterDuff$Mode)
androidx.constraintlayout.widget.ConstraintSet$Constraint: ConstraintSet$Constraint()
com.google.android.material.textfield.TextInputEditText: java.lang.CharSequence getHint()
androidx.appcompat.widget.ActionBarOverlayLayout: void setHasNonEmbeddedTabs(boolean)
com.google.android.material.textfield.TextInputLayout: int getEndIconMode()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: io.flutter.view.TextureRegistry$SurfaceProducer$Callback access$200(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
com.google.protobuf.FieldType: com.google.protobuf.FieldType[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onReceivedTouchIconUrl(java.lang.String,boolean)
io.grpc.internal.PickFirstLoadBalancerProvider: io.grpc.NameResolver$ConfigOrError parseLoadBalancingPolicyConfig(java.util.Map)
com.google.android.material.search.SearchBar: void setHint(int)
me.carda.awesome_notifications.core.models.NotificationContentModel: me.carda.awesome_notifications.core.models.NotificationContentModel fromMap(java.util.Map)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action$Builder createBuilder(int,java.lang.CharSequence,android.app.PendingIntent)
com.google.android.material.appbar.AppBarLayout: void setExpanded(boolean)
me.carda.awesome_notifications.core.managers.PermissionManager: me.carda.awesome_notifications.core.managers.PermissionManager getInstance()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$8: boolean nonNullSuccess(java.lang.Object)
com.google.android.material.button.MaterialButton: void setStrokeWidthResource(int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void pendingNotificationRequests(io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.textfield.TextInputLayout: void setStartIconContentDescription(java.lang.CharSequence)
io.grpc.okhttp.OkHttpChannelProvider: OkHttpChannelProvider()
androidx.appcompat.widget.AppCompatEditText: java.lang.CharSequence getText()
com.google.firestore.bundle.BundledQuery$LimitType: com.google.firestore.bundle.BundledQuery$LimitType valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.core.app.AppOpsManagerCompat$Api23Impl: int noteProxyOp(android.app.AppOpsManager,java.lang.String,java.lang.String)
androidx.appcompat.widget.DropDownListView$Api21Impl: void drawableHotspotChanged(android.view.View,float,float)
me.carda.awesome_notifications.core.utils.BitmapUtils: int getDrawableResourceId(android.content.Context,java.lang.String)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: void onBroadcastBackgroundActionNotification(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
com.google.android.material.internal.TouchObserverFrameLayout: void setOnTouchListener(android.view.View$OnTouchListener)
com.google.protobuf.UnsafeUtil: UnsafeUtil()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$1: void defaultBehaviour(java.lang.Object)
androidx.activity.ComponentActivity: androidx.lifecycle.ViewModelProvider$Factory getDefaultViewModelProviderFactory()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedHttpAuthRequestCallback: WebViewChannelDelegate$ReceivedHttpAuthRequestCallback()
com.google.android.material.search.SearchBar: java.lang.CharSequence getText()
androidx.core.app.RemoteInput$Api26Impl: android.app.RemoteInput$Builder setAllowDataType(android.app.RemoteInput$Builder,java.lang.String,boolean)
androidx.core.view.ViewCompat$Api26Impl: boolean isFocusedByDefault(android.view.View)
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: java.lang.String toString()
androidx.core.view.ViewCompat$Api28Impl: void setAutofillId(android.view.View,androidx.core.view.autofill.AutofillIdCompat)
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: void setUserAgent(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: android.view.animation.Animation startAlphaAnimation(int,int)
me.carda.awesome_notifications.core.services.ForegroundService: boolean serviceIsRunning(java.lang.Integer)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setFullScreenIntent(android.content.Context,android.app.PendingIntent,me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent)
me.carda.awesome_notifications.core.managers.BadgeManager: void resetGlobalBadgeCounter(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: java.lang.String getMessage()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: boolean isShouldTint()
me.carda.awesome_notifications.core.services.AutoCancelService: android.os.IBinder onBind(android.content.Intent)
com.google.android.material.internal.FlowLayout: int getItemSpacing()
androidx.appcompat.widget.Toolbar: int getTitleMarginStart()
androidx.transition.ViewUtilsApi19$Api29Impl: float getTransitionAlpha(android.view.View)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior(android.content.Context,android.util.AttributeSet)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setOnlyAlertOnce(me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$5: boolean nonNullSuccess(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void postWebMessage(com.pichillilorenzo.flutter_inappwebview_android.types.WebMessage,android.net.Uri,android.webkit.ValueCallback)
me.carda.awesome_notifications.core.AwesomeNotifications: void createNotification(me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler)
com.google.firebase.messaging.reporting.MessagingClientEvent$Event: com.google.firebase.messaging.reporting.MessagingClientEvent$Event[] values()
androidx.appcompat.widget.AppCompatEditText: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
me.carda.awesome_notifications.core.managers.ChannelManager: void removeAndroidChannel(android.content.Context,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.managers.EventManager: java.lang.String _getKeyByIdAndDate(java.lang.Integer,java.util.Calendar)
androidx.fragment.app.FragmentActivity: boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State)
me.carda.awesome_notifications.core.enumerators.NotificationImportance: me.carda.awesome_notifications.core.enumerators.NotificationImportance valueOf(java.lang.String)
com.google.android.material.floatingactionbutton.FloatingActionButton: android.graphics.PorterDuff$Mode getBackgroundTintMode()
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: void setAction(java.lang.Integer)
io.grpc.okhttp.internal.framed.ErrorCode: io.grpc.okhttp.internal.framed.ErrorCode valueOf(java.lang.String)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setAutoCancel(me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: SQLitePrimitivesDB(android.content.Context,java.lang.String)
com.google.android.gms.internal.measurement.zzfr$zzd$zza: zzfr$zzd$zza()
me.carda.awesome_notifications.core.models.NotificationChannelModel: java.util.Map toMap()
androidx.appcompat.widget.AppCompatEditText: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getRippleColor()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ShouldInterceptRequestCallback: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt decodeResult(java.lang.Object)
com.google.android.gms.internal.measurement.zzfo$zze: zzfo$zze()
androidx.core.app.CoreComponentFactory: CoreComponentFactory()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void access$401(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat,android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)
androidx.media.AudioAttributesCompat: AudioAttributesCompat()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt: int getIndex()
com.google.firebase.firestore.util.AsyncQueue$TimerId: com.google.firebase.firestore.util.AsyncQueue$TimerId valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api30Impl: java.lang.CharSequence getStateDescription(android.view.accessibility.AccessibilityNodeInfo)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate$SyncShouldInterceptRequestCallback: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt decodeResult(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse: PermissionResponse(java.util.List,java.lang.Integer)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void createActionButtons(android.content.Context,android.content.Intent,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
me.carda.awesome_notifications.core.managers.BadgeManager: int getGlobalBadgeCounter(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.types.CreateWindowAction: void setDialog(boolean)
com.google.android.gms.internal.measurement.zzlp: zzlp()
androidx.appcompat.widget.LinearLayoutCompat: void setShowDividers(int)
me.carda.awesome_notifications.core.background.BackgroundExecutor: void setBackgroundExecutorClass(java.lang.Class)
androidx.core.widget.CompoundButtonCompat$Api21Impl: void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostStarted(android.app.Activity)
com.google.android.gms.internal.measurement.zzfy$zzm$zza: zzfy$zzm$zza()
com.google.android.gms.internal.measurement.zzkn: zzkn()
me.carda.awesome_notifications.core.managers.DefaultsManager: java.lang.Long getDartCallbackDispatcher(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: android.app.PendingIntent createPendingIntent(int)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void AttachAwesomeNotificationsPlugin(android.content.Context,io.flutter.plugin.common.MethodChannel)
androidx.appcompat.widget.AppCompatCheckBox: android.graphics.PorterDuff$Mode getSupportButtonTintMode()
com.google.android.material.button.MaterialButton: void setRippleColorResource(int)
android.support.v4.media.session.MediaSessionCompat$QueueItem$Api21Impl: android.media.MediaDescription getDescription(android.media.session.MediaSession$QueueItem)
com.google.firebase.firestore.DocumentChange$Type: com.google.firebase.firestore.DocumentChange$Type[] values()
com.google.gson.JsonArray: JsonArray()
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt fromMargins(android.print.PrintAttributes$Margins)
me.carda.awesome_notifications.core.services.ForegroundService: int onStartCommand(android.content.Intent,int,int)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: boolean getBoolean(android.content.Context,java.lang.String,java.lang.String,boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: InAppBrowserMenuItem(int,java.lang.String,java.lang.Integer,java.lang.Object,java.lang.String,boolean)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate: void didChangeTitle(java.lang.String)
io.flutter.view.AccessibilityBridge$TextDirection: io.flutter.view.AccessibilityBridge$TextDirection valueOf(java.lang.String)
_COROUTINE._BOUNDARY: _BOUNDARY()
com.google.android.material.bottomappbar.BottomAppBar: float getFabCradleRoundedCornerRadius()
androidx.constraintlayout.helper.widget.Flow: void setPaddingTop(int)
com.google.gson.stream.JsonReader: boolean isLiteral(char)
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExt: android.webkit.WebResourceResponse handle(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.Size2D: void setWidth(double)
me.carda.awesome_notifications.core.utils.CronUtils: CronUtils()
androidx.core.view.ViewParentCompat$Api21Impl: void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int)
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager: void clearProxyOverride(io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.models.NotificationContentModel: void processRetroCompatibility(java.util.Map)
me.carda.awesome_notifications.core.managers.StatusBarManager: boolean isFirstActiveOnGroupKey(java.lang.String)
io.flutter.plugins.webviewflutter.WebViewFlutterPlugin: WebViewFlutterPlugin()
kotlin.collections.IntIterator: IntIterator()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate: java.util.List getActivityResultListeners()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void injectCSSFileFromUrl(java.lang.String,java.util.Map)
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: ScheduledNotificationRepeatFrequency(java.lang.String,int)
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.net.Uri getOutputUri(java.lang.String)
me.carda.awesome_notifications.core.models.NotificationContentModel: boolean registerCreatedEvent(me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle,me.carda.awesome_notifications.core.enumerators.NotificationSource)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture getMeasurementApiStatusAsync()
com.google.android.datatransport.cct.CctBackendFactory: com.google.android.datatransport.runtime.backends.TransportBackend create(com.google.android.datatransport.runtime.backends.CreationContext)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: java.lang.String getContentEncoding()
androidx.appcompat.widget.AppCompatTextView: void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.material.checkbox.MaterialCheckBox: void setEnabled(boolean)
androidx.appcompat.app.AppCompatActivity: AppCompatActivity(int)
me.carda.awesome_notifications.core.managers.ChannelManager: me.carda.awesome_notifications.core.managers.ChannelManager getInstance()
com.google.firebase.firestore.remote.TestingHooks$ExistenceFilterBloomFilterInfo: TestingHooks$ExistenceFilterBloomFilterInfo()
com.google.android.material.appbar.AppBarLayout: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate: void handle(java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate$HandleCallback)
com.google.android.material.chip.Chip: void setElevation(float)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$4: InAppWebViewChromeClient$4(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsResult,java.lang.String)
me.carda.awesome_notifications.core.enumerators.NotificationPermission: java.lang.String getSafeName()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.util.Map getBooleansStartingWith(android.content.Context,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: int hashCode()
androidx.appcompat.widget.AbsActionBarView: int getAnimatedVisibility()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$1: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.android.material.search.SearchView: java.lang.CharSequence getHint()
io.flutter.embedding.android.FlutterImageView$SurfaceKind: io.flutter.embedding.android.FlutterImageView$SurfaceKind[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void onCreateContextMenu(android.view.ContextMenu)
androidx.recyclerview.widget.RecyclerView: long getNanoTime()
androidx.core.view.ViewCompat$Api21Impl$1: android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets)
com.google.gson.internal.bind.TypeAdapters$17: TypeAdapters$17()
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readInboxStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onReceivedError(com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt,com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt)
me.carda.awesome_notifications.core.models.AbstractModel: java.util.List getValueOrDefaultListMap(java.util.Map,java.lang.String,java.util.List)
androidx.appcompat.widget.AppCompatRadioButton: void setButtonDrawable(android.graphics.drawable.Drawable)
me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler: void handle(java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativePrefetchDefaultFontManager()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void setContainerTitle(android.view.accessibility.AccessibilityNodeInfo,java.lang.CharSequence)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityCreated(android.app.Activity,android.os.Bundle)
com.google.android.gms.internal.measurement.zzco: com.google.android.gms.internal.measurement.zzco[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void createConfirmDialog(java.lang.String,android.webkit.JsResult,java.lang.String,java.lang.String,java.lang.String)
com.google.firebase.firestore.core.OrderBy$Direction: com.google.firebase.firestore.core.OrderBy$Direction valueOf(java.lang.String)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver subscribeOnActionEvents(me.carda.awesome_notifications.core.listeners.AwesomeActionEventListener)
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExt: WebViewAssetLoaderExt$PathHandlerExt(java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
com.dexterous.flutterlocalnotifications.models.NotificationChannelAction: com.dexterous.flutterlocalnotifications.models.NotificationChannelAction[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebView,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy$1: DisplayListenerProxy$1(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy,java.util.ArrayList,android.hardware.display.DisplayManager)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$5: void defaultBehaviour(java.lang.Object)
androidx.core.view.WindowCompat$Api30Impl: void setDecorFitsSystemWindows(android.view.Window,boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsMenuItem: java.lang.String toString()
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeStableInsets()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionResult: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionResult[] values()
com.google.android.gms.internal.measurement.zzfy$zzc: zzfy$zzc()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void release()
com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse: void setAction(java.lang.Integer)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.view.WindowInsetsCompat consumeStableInsets()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$4: InAppWebViewClientCompat$4(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat,com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,android.webkit.ClientCertRequest,android.webkit.WebView)
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus[] values()
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.firebase.firestore.LoadBundleTaskProgress$TaskState: com.google.firebase.firestore.LoadBundleTaskProgress$TaskState[] values()
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$3: MyWebStorage$3(com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.enumerators.NotificationPrivacy: NotificationPrivacy(java.lang.String,int,java.lang.String)
com.google.android.gms.measurement.internal.zzak: com.google.android.gms.measurement.internal.zzak[] values()
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void initSafeBrowsing(android.content.Context,android.webkit.ValueCallback)
com.google.android.gms.internal.measurement.zzfy$zzo: zzfy$zzo()
com.google.firebase.firestore.remote.Stream$State: com.google.firebase.firestore.remote.Stream$State valueOf(java.lang.String)
com.google.android.material.card.MaterialCardView: void setClickable(boolean)
android.support.v4.media.session.PlaybackStateCompat$Api22Impl: void setExtras(android.media.session.PlaybackState$Builder,android.os.Bundle)
com.google.protobuf.DoubleArrayList: DoubleArrayList()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ServiceConnection: ServiceConnection(com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ServiceConnectionCallback)
me.carda.awesome_notifications.core.managers.LostEventsManager: java.lang.String generateKeyDateToEvent(java.util.Calendar,java.lang.Integer,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void ensureAttachedToNative()
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: double getBottom()
io.flutter.view.AccessibilityBridge$Flag: io.flutter.view.AccessibilityBridge$Flag valueOf(java.lang.String)
com.google.android.gms.internal.measurement.zzfo$zzb: zzfo$zzb()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextColor(android.content.res.ColorStateList)
androidx.lifecycle.ProcessLifecycleOwner$attach$1$onActivityPreCreated$1: void onActivityPostStarted(android.app.Activity)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$2: void error(java.lang.String,java.lang.String,java.lang.Object)
me.carda.awesome_notifications.core.builders.NotificationBuilder: android.app.PendingIntent getPendingActionIntent(android.content.Context,android.content.Intent,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel)
androidx.recyclerview.widget.RecyclerView: java.lang.CharSequence getAccessibilityClassName()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQuery()
com.google.android.material.timepicker.ClockFaceView: ClockFaceView(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: void computeAndSetTextDirection(android.text.StaticLayout$Builder,android.widget.TextView)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$4: void onReceiveValue(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$3: InAppWebView$3(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onProgressChanged(int)
com.google.firebase.sessions.EventType: com.google.firebase.sessions.EventType[] values()
me.carda.awesome_notifications.core.managers.StatusBarManager: java.util.List getAllAndroidActiveNotificationsByGroupKey(android.content.Context,java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: void addChildrenToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,android.view.View,android.view.accessibility.AccessibilityNodeInfo)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannelChannelDelegate: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.managers.StatusBarManager: void unregisterActiveNotification(android.content.Context,int)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundResource(int)
me.carda.awesome_notifications.core.managers.LifeCycleManager: void onStopped()
androidx.core.app.NotificationCompat$BigPictureStyle$Api31Impl: void setBigPicture(android.app.Notification$BigPictureStyle,android.graphics.drawable.Icon)
androidx.appcompat.view.WindowCallbackWrapper$Api23Impl: boolean onSearchRequested(android.view.Window$Callback,android.view.SearchEvent)
me.carda.awesome_notifications.core.AwesomeNotifications: java.util.Collection getAllActiveNotificationIdsOnStatusBar()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager: java.util.Map convertWebViewPackageToMap(android.content.pm.PackageInfo)
androidx.appcompat.widget.LinearLayoutCompat: int getGravity()
com.google.android.material.bottomappbar.BottomAppBar: void setTitle(java.lang.CharSequence)
me.carda.awesome_notifications.DartBackgroundExecutor: io.flutter.embedding.engine.FlutterEngine access$000(me.carda.awesome_notifications.DartBackgroundExecutor)
androidx.fragment.app.FragmentActivity: androidx.fragment.app.FragmentManager getSupportFragmentManager()
com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime: int toValue()
me.carda.awesome_notifications.core.managers.ChannelManager: boolean androidChannelNeedsUpdate(me.carda.awesome_notifications.core.models.NotificationChannelModel,android.app.NotificationChannel)
androidx.recyclerview.widget.GapWorker: GapWorker()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCursorColor()
com.google.android.gms.internal.measurement.zzfy$zza$zza: zzfy$zza$zza()
androidx.appcompat.widget.ButtonBarLayout: void setStacked(boolean)
com.google.android.gms.dynamite.descriptors.com.google.android.gms.measurement.dynamite.ModuleDescriptor: ModuleDescriptor()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setLayoutColor(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setTrimPathStart(float)
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes$Builder createBuilder()
org.chromium.support_lib_boundary.DropDataContentProviderBoundaryInterface: java.lang.String getType(android.net.Uri)
com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt: boolean equals(java.lang.Object)
androidx.appcompat.widget.AppCompatTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.protobuf.IntArrayList: IntArrayList()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeSafariBrowserManager: ChromeSafariBrowserManager(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
com.google.android.material.button.MaterialButton: void setElevation(float)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.fragment.app.FragmentContainerView: void setOnApplyWindowInsetsListener(android.view.View$OnApplyWindowInsetsListener)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPostResumed(android.app.Activity)
androidx.appcompat.widget.AppCompatImageView: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.cardview.widget.CardView: void setMinimumHeight(int)
androidx.appcompat.widget.AppCompatImageView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
io.grpc.SecurityLevel: io.grpc.SecurityLevel[] values()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: AppCompatAutoCompleteTextView(android.content.Context,android.util.AttributeSet)
com.google.android.material.chip.Chip: float getTextStartPadding()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.util.Map toMap()
androidx.core.graphics.drawable.DrawableCompat$Api23Impl: int getLayoutDirection(android.graphics.drawable.Drawable)
com.google.android.material.snackbar.Snackbar$SnackbarLayout: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatToggleButton: android.content.res.ColorStateList getSupportBackgroundTintList()
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender: me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender getInstance()
android.support.v4.media.RatingCompat$Api19Impl: float getPercentRating(android.media.Rating)
me.carda.awesome_notifications.core.managers.PermissionManager: void shouldShowAndroidRequestDialog(android.app.Activity,android.content.Context,java.lang.String,java.util.List,java.util.List,me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler)
com.pichillilorenzo.flutter_inappwebview_android.types.ProxyRuleExt: ProxyRuleExt(java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.services.BackgroundService: BackgroundService()
androidx.recyclerview.widget.LinearLayoutManager: LinearLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setProgress(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.button.MaterialButton: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus: com.google.firebase.firestore.remote.ConnectivityMonitor$NetworkStatus valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: void onServiceDisconnected()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView: void onInputConnectionLocked()
io.flutter.plugins.firebase.core.FlutterFirebasePlugin: com.google.android.gms.tasks.Task didReinitializeFirebaseCore()
androidx.appcompat.view.menu.ListMenuItemView: void setGroupDividerEnabled(boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate$HandleCallback: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt decodeResult(java.lang.Object)
androidx.constraintlayout.helper.widget.Flow: void setVerticalStyle(int)
com.google.android.datatransport.cct.internal.ComplianceData$ProductIdOrigin: com.google.android.datatransport.cct.internal.ComplianceData$ProductIdOrigin[] values()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setActiveQueueItemId(android.media.session.PlaybackState$Builder,long)
com.pichillilorenzo.flutter_inappwebview_android.Util: java.lang.String replaceAll(java.lang.String,java.lang.String,java.lang.String)
org.chromium.support_lib_boundary.VisualStateCallbackBoundaryInterface: void onComplete(long)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$16: void onReceiveValue(java.lang.Object)
org.chromium.support_lib_boundary.WebViewClientBoundaryInterface: void onPageCommitVisible(android.webkit.WebView,java.lang.String)
me.carda.awesome_notifications.core.logs.Logger: java.lang.String getCurrentTime()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setAttributionBehavior(int)
com.google.android.material.chip.Chip: void setChipIconEnabled(boolean)
me.carda.awesome_notifications.core.managers.StatusBarManager: boolean dismissNotificationsByChannelKey(android.content.Context,java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: void readMessagingStyleInformation(com.dexterous.flutterlocalnotifications.models.NotificationDetails,java.util.Map,com.dexterous.flutterlocalnotifications.models.styles.DefaultStyleInformation)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHint()
androidx.collection.SimpleArrayMap: SimpleArrayMap()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView$1: void run()
androidx.core.app.NotificationCompat$CallStyle$Api28Impl: android.app.Notification$Builder addPerson(android.app.Notification$Builder,android.app.Person)
androidx.core.view.ViewCompat$Api28Impl: void setAccessibilityHeading(android.view.View,boolean)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setSize(int)
com.google.android.material.transformation.ExpandableTransformationBehavior: ExpandableTransformationBehavior()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$18: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.appcompat.widget.Toolbar: android.content.Context getPopupContext()
com.google.gson.Gson$3: Gson$3()
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: me.carda.awesome_notifications.core.models.returnedData.ActionReceived fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserManager: void dispose()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: int booleanCount(android.content.Context,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings: java.util.Map getRealSettings(com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController)
com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustChallenge: java.lang.String toString()
com.google.gson.stream.JsonWriter: boolean getSerializeNulls()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$900(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer)
me.carda.awesome_notifications.core.enumerators.NotificationSource: me.carda.awesome_notifications.core.enumerators.NotificationSource[] values()
com.google.android.material.chip.Chip: void setRippleColor(android.content.res.ColorStateList)
androidx.recyclerview.widget.RecyclerView: void setHasFixedSize(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$RenderProcessResponsiveCallback: java.lang.Integer decodeResult(java.lang.Object)
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender: void sendBroadcastSilentAction(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.ActionReceived)
com.google.firebase.firestore.core.Query$LimitType: com.google.firebase.firestore.core.Query$LimitType[] values()
com.google.protobuf.JavaType: com.google.protobuf.JavaType valueOf(java.lang.String)
me.carda.awesome_notifications.core.enumerators.LogLevel: java.lang.String getSafeName()
androidx.core.app.NotificationCompat$Builder$Api21Impl: android.media.AudioAttributes build(android.media.AudioAttributes$Builder)
com.google.android.material.chip.Chip: void setCloseIconVisible(int)
me.carda.awesome_notifications.core.managers.RepositoryManager: void commitAsync(java.lang.String,android.content.SharedPreferences$Editor)
me.carda.awesome_notifications.core.AwesomeNotifications: boolean removeChannel(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingSettings: java.util.Map getRealSettings(androidx.webkit.TracingController)
androidx.appcompat.app.AppCompatActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
me.carda.awesome_notifications.core.managers.ChannelGroupManager: void commitChanges(android.content.Context)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int,android.os.Bundle)
com.google.gson.internal.bind.TypeAdapters$24: TypeAdapters$24()
androidx.core.app.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
com.google.gson.stream.JsonReader: void checkLenient()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler: android.webkit.WebResourceResponse checkUrl(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt,com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$4: WebViewChannelDelegate$4(com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.DisplayCutoutCompat$Api28Impl: java.util.List getBoundingRects(android.view.DisplayCutout)
com.google.firestore.v1.StructuredAggregationQuery$Aggregation: StructuredAggregationQuery$Aggregation()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: void removeHttpAuthCredential(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)
androidx.core.view.ViewCompat$Api26Impl: android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodIncrementBadge(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$2: WebMessagePort$2(com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort,android.webkit.ValueCallback)
com.google.android.material.chip.Chip: void setCheckedIconTintResource(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView: void onInputConnectionLocked()
androidx.appcompat.widget.ActionBarOverlayLayout: void setLogo(int)
com.google.protobuf.ExtensionSchema: ExtensionSchema()
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings: com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings parse(java.util.Map)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getSuffixText()
com.google.android.material.chip.Chip: void setIconStartPadding(float)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$PermissionRequestProgress: com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin$PermissionRequestProgress[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: boolean equals(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$2: void run()
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.NotificationPrivacy getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.NotificationPrivacy)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$14: void onGlobalLayout()
androidx.core.view.DisplayCutoutCompat$Api28Impl: android.view.DisplayCutout createDisplayCutout(android.graphics.Rect,java.util.List)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ListenSource: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ListenSource[] values()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScroll(android.view.View,int,int,int,int,int,int[])
me.carda.awesome_notifications.core.managers.SharedManager: void commitAsync(java.lang.String,android.content.SharedPreferences$Editor)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onFindResultReceived(int,int,boolean)
org.chromium.support_lib_boundary.util.BoundaryInterfaceReflectionUtil: BoundaryInterfaceReflectionUtil()
me.carda.awesome_notifications.core.logs.Logger: void i(java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: void setData(java.lang.Object)
androidx.core.app.NotificationCompatBuilder$Api31Impl: android.app.Notification$Action$Builder setAuthenticationRequired(android.app.Notification$Action$Builder,boolean)
com.google.android.gms.internal.measurement.zzfr$zze: zzfr$zze()
me.carda.awesome_notifications.core.models.NotificationChannelModel: me.carda.awesome_notifications.core.models.NotificationChannelModel fromMap(java.util.Map)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setVibrationPattern(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
androidx.datastore.preferences.protobuf.AbstractMessageLite: AbstractMessageLite()
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$1: boolean nonNullSuccess(java.lang.Object)
androidx.appcompat.view.menu.ListMenuItemView: void setChecked(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView: void onFlutterViewDetached()
io.grpc.LoadBalancerRegistry: LoadBalancerRegistry()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onMessageChannelReady()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InputAwareWebView: void onFocusChanged(boolean,int,android.graphics.Rect)
com.google.android.material.chip.Chip: void setRippleColorResource(int)
me.carda.awesome_notifications.core.managers.DismissedManager: boolean removeAllDismissed(android.content.Context)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void unregisterOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzdp)
me.carda.awesome_notifications.core.models.AbstractModel: void putDataOnSerializedMap(java.lang.String,java.util.Map,me.carda.awesome_notifications.core.models.AbstractModel)
me.carda.awesome_notifications.core.BuildConfig: BuildConfig()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardBackgroundColor()
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: boolean equals(java.lang.Object)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setMediaStyle(androidx.core.app.NotificationCompat$Builder)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.WindowInsetsAnimation$Callback getAnimationCallback()
androidx.core.view.MenuItemCompat$Api26Impl: int getNumericModifiers(android.view.MenuItem)
com.google.android.material.button.MaterialButtonToggleGroup: int getCheckedButtonId()
me.carda.awesome_notifications.core.managers.LostEventsManager: void recoverLostNotificationEvents(android.content.Context,boolean,boolean,boolean,boolean)
com.google.android.material.snackbar.SnackbarContentLayout: void setMaxInlineActionWidth(int)
com.google.android.gms.internal.measurement.zzfy$zze$zza: zzfy$zze$zza()
androidx.appcompat.widget.ActionBarContextView: void setSubtitle(java.lang.CharSequence)
com.google.android.gms.internal.measurement.zzfo$zzd$zzb: com.google.android.gms.internal.measurement.zzfo$zzd$zzb[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: float getPivotX()
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: UserScript(java.lang.String,java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime,com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld,java.util.Set)
com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason: com.google.android.datatransport.runtime.firebase.transport.LogEventDropped$Reason[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onCreateContextMenu(com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeSafariBrowserManager: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
kotlinx.coroutines.android.AndroidDispatcherFactory: AndroidDispatcherFactory()
androidx.appcompat.widget.LinearLayoutCompat: void setBaselineAlignedChildIndex(int)
me.carda.awesome_notifications.core.models.NotificationCrontabModel: NotificationCrontabModel()
me.carda.awesome_notifications.DartBackgroundExecutor: io.flutter.embedding.engine.FlutterEngine access$002(me.carda.awesome_notifications.DartBackgroundExecutor,io.flutter.embedding.engine.FlutterEngine)
androidx.recyclerview.widget.RecyclerView: boolean getPreserveFocusAfterLayout()
me.carda.awesome_notifications.core.models.NotificationContentModel: java.util.List mapToMessages(java.util.List)
androidx.browser.customtabs.CustomTabsCallback: void onNavigationEvent(int,android.os.Bundle)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: android.graphics.Matrix getFinalMatrix()
com.google.android.gms.internal.measurement.zzjm: zzjm()
androidx.appcompat.widget.LinearLayoutCompat: int getBaselineAlignedChildIndex()
me.carda.awesome_notifications.core.enumerators.GroupSort: me.carda.awesome_notifications.core.enumerators.GroupSort[] values()
androidx.datastore.preferences.protobuf.WireFormat$JavaType: androidx.datastore.preferences.protobuf.WireFormat$JavaType valueOf(java.lang.String)
com.google.android.material.chip.Chip: android.graphics.Rect getCloseIconTouchBoundsInt()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onSafeBrowsingHit(java.lang.String,int,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$SafeBrowsingHitCallback)
androidx.core.widget.PopupWindowCompat$Api23Impl: void setOverlapAnchor(android.widget.PopupWindow,boolean)
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: long getActiveQueueItemId(android.media.session.PlaybackState)
androidx.appcompat.widget.Toolbar: int getCurrentContentInsetLeft()
com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript: void setRequiredInAllContentWorlds(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onCallJsHandler(java.lang.String,java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$CallJsHandlerCallback)
com.google.android.gms.internal.measurement.zzfr$zzi: zzfr$zzi()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.ImageReader createImageReader33()
com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType: com.google.firebase.messaging.reporting.MessagingClientEvent$MessageType valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: boolean equals(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt: void setIndex(int)
com.dexterous.flutterlocalnotifications.models.ScheduleMode: boolean useAlarmClock()
com.google.android.datatransport.cct.internal.AndroidClientInfo: AndroidClientInfo()
androidx.webkit.WebViewClientCompat: boolean onWebAuthnIntent(android.webkit.WebView,android.app.PendingIntent,java.lang.reflect.InvocationHandler)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getWebViewRenderer()
io.flutter.view.TextureRegistry$SurfaceProducer: android.view.Surface getSurface()
io.flutter.view.AccessibilityBridge$CustomAccessibilityAction: AccessibilityBridge$CustomAccessibilityAction()
com.google.android.material.card.MaterialCardView: void setRippleColor(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: java.lang.String getTitle()
androidx.transition.TransitionUtils$Api28Impl: android.graphics.Bitmap createBitmap(android.graphics.Picture)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetBottom(android.view.DisplayCutout)
androidx.browser.customtabs.CustomTabsCallback: void onUnminimized(android.os.Bundle)
com.google.android.material.ripple.RippleUtils: RippleUtils()
me.carda.awesome_notifications.core.managers.PermissionManager: boolean isSpecifiedChannelPermissionAllowed(android.content.Context,java.lang.String,me.carda.awesome_notifications.core.enumerators.NotificationPermission)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemRowTitle(java.lang.Object)
me.carda.awesome_notifications.core.utils.BooleanUtils: boolean getValueOrDefault(java.lang.Boolean,java.lang.Boolean)
androidx.appcompat.widget.AppCompatEditText: android.text.Editable getText()
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.Integer getBackgroundColor(me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$10: void run()
androidx.constraintlayout.widget.ConstraintLayout: void setMinWidth(int)
com.google.android.material.card.MaterialCardView: void setMaxCardElevation(float)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelRequestUserPermissions(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.ActionMenuView: void setOverflowReserved(boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.BaseCallbackResultImpl: void success(java.lang.Object)
androidx.profileinstaller.ProfileInstallerInitializer$Choreographer16Impl: void postFrameCallback(java.lang.Runnable)
androidx.core.view.ViewGroupCompat$Api21Impl: int getNestedScrollAxes(android.view.ViewGroup)
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: NotificationPlayState(java.lang.String,int,java.lang.String,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$GeolocationPermissionsShowPromptCallback: java.lang.Object decodeResult(java.lang.Object)
me.carda.awesome_notifications.core.managers.SharedManager: java.lang.Boolean removeAll(android.content.Context)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void setAllLongValues(android.content.Context,java.lang.String,java.util.Map)
com.google.android.material.internal.NavigationMenuItemView: void setChecked(boolean)
androidx.core.view.ViewCompat$Api26Impl: void setFocusedByDefault(android.view.View,boolean)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$2: void onMessageChannelReady(android.os.Bundle)
com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase: com.google.firestore.v1.StructuredQuery$Filter$FilterTypeCase valueOf(java.lang.String)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent(android.view.accessibility.AccessibilityNodeInfo,int)
io.flutter.plugins.webviewflutter.WebViewClientProxyApi$WebViewClientCompatImpl: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void lambda$getPluginConstantsForFirebaseApp$0(com.google.firebase.FirebaseApp,com.google.android.gms.tasks.TaskCompletionSource)
me.carda.awesome_notifications.core.threads.NotificationScheduler: me.carda.awesome_notifications.core.models.NotificationModel scheduleNotification(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,java.util.Calendar)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator()
androidx.window.layout.WindowMetricsCalculatorCompat: WindowMetricsCalculatorCompat()
com.google.gson.internal.bind.TypeAdapters$25: TypeAdapters$25()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void allowShouldOverrideUrlLoading(android.webkit.WebView,java.lang.String,java.util.Map,boolean)
me.carda.awesome_notifications.core.managers.StatusBarManager: void setIndexCollapsedLayout(android.content.SharedPreferences$Editor,java.lang.String,boolean)
com.google.android.material.textfield.TextInputLayout: void setBoxCollapsedPaddingTop(int)
androidx.constraintlayout.widget.Placeholder: void setEmptyVisibility(int)
androidx.core.content.ContextCompat$Api24Impl: java.io.File getDataDir(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$3: boolean nonNullSuccess(java.lang.Object)
androidx.activity.ComponentActivity: void invalidateMenu()
com.google.android.gms.internal.measurement.zzfy$zzl$zza: zzfy$zzl$zza()
com.google.firebase.encoders.proto.Protobuf$IntEncoding: com.google.firebase.encoders.proto.Protobuf$IntEncoding[] values()
com.google.firestore.v1.ExistenceFilter: ExistenceFilter()
com.google.firebase.analytics.FirebaseAnalytics: com.google.android.gms.measurement.internal.zzlb getScionFrontendApiImplementation(android.content.Context,android.os.Bundle)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.lang.String getUrlFilter()
me.carda.awesome_notifications.core.AwesomeNotifications: me.carda.awesome_notifications.core.AwesomeNotifications subscribeOnAwesomeNotificationEvents(me.carda.awesome_notifications.core.listeners.AwesomeEventListener)
me.carda.awesome_notifications.core.utils.MapUtils: com.google.common.base.Optional extractValue(java.util.Map,java.lang.String,java.lang.Class)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWebViewMediaIntegrityApiStatus(int,java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy$1: void onDisplayChanged(int)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlocker: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger getTrigger()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionType: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionType valueOf(java.lang.String)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodGetAllActiveNotificationIdsOnStatusBar(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.gson.internal.bind.TypeAdapters$26: TypeAdapters$26()
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState[] values()
androidx.appcompat.widget.SearchView$Api29Impl: void refreshAutoCompleteResults(android.widget.AutoCompleteTextView)
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: void setPresentationView(android.view.View)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setEventInterceptor(com.google.android.gms.internal.measurement.zzdp)
androidx.appcompat.app.ActionBar$Tab: ActionBar$Tab()
androidx.media.app.NotificationCompat$Api21Impl: android.app.Notification$MediaStyle createMediaStyle()
me.carda.awesome_notifications.core.models.AbstractModel: void putDataOnSerializedMap(java.lang.String,java.util.Map,java.io.Serializable)
androidx.core.view.DisplayCutoutCompat$Api28Impl: int getSafeInsetTop(android.view.DisplayCutout)
com.google.firebase.messaging.threads.ThreadPriority: com.google.firebase.messaging.threads.ThreadPriority[] values()
androidx.core.view.WindowInsetsCompat$Impl: WindowInsetsCompat$Impl(androidx.core.view.WindowInsetsCompat)
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager$1: ProxyManager$1(com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxyManager)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: int hashCode()
me.carda.awesome_notifications.core.models.NotificationMessageModel: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
com.google.android.gms.internal.measurement.zzhc: zzhc()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager: void disposeKeepAlive(java.lang.String)
androidx.cardview.widget.CardView: android.content.res.ColorStateList getCardBackgroundColor()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: void setHasGesture(boolean)
com.google.android.gms.internal.measurement.zzfr$zza$zze: com.google.android.gms.internal.measurement.zzfr$zza$zze[] values()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setScaleX(float)
com.google.android.material.search.SearchBar: int getDefaultNavigationIconResource()
kotlinx.coroutines.internal.LockFreeLinkedListNode: LockFreeLinkedListNode()
com.pichillilorenzo.flutter_inappwebview_android.credential_database.CredentialDatabase: void setHttpAuthCredential(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.String,java.lang.String)
androidx.activity.ComponentActivity: void removeMenuProvider(androidx.core.view.MenuProvider)
com.google.android.gms.internal.measurement.zzfr$zza$zza: zzfr$zza$zza()
io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType: io.flutter.embedding.engine.renderer.FlutterRenderer$DisplayFeatureType valueOf(java.lang.String)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatTextView: int[] getAutoSizeTextAvailableSizes()
com.pichillilorenzo.flutter_inappwebview_android.Util$PrivateKeyAndCertificates: Util$PrivateKeyAndCertificates(java.security.PrivateKey,java.security.cert.X509Certificate[])
me.carda.awesome_notifications.core.managers.LifeCycleManager: me.carda.awesome_notifications.core.managers.LifeCycleManager subscribe(me.carda.awesome_notifications.core.listeners.AwesomeLifeCycleEventListener)
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout[] $values()
com.google.firebase.sessions.FirebaseSessionsRegistrar: java.util.List getComponents()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelShowNotificationPage(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.utils.StringUtils: java.lang.String join(java.util.Iterator,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt: java.lang.String toString()
io.grpc.okhttp.OkHttpFrameLogger$Direction: io.grpc.okhttp.OkHttpFrameLogger$Direction valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onReceivedHttpError(com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt,com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt)
androidx.appcompat.widget.ActionBarOverlayLayout: void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback)
androidx.core.view.WindowInsetsCompat$BuilderImpl30: WindowInsetsCompat$BuilderImpl30(androidx.core.view.WindowInsetsCompat)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$17: InAppWebView$17(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,android.webkit.ValueCallback)
androidx.core.text.HtmlCompat$Api24Impl: java.lang.String toHtml(android.text.Spanned,int)
androidx.core.view.WindowInsetsCompat$BuilderImpl20: androidx.core.view.WindowInsetsCompat build()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.DisplayListenerProxy: DisplayListenerProxy()
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: VectorDrawableCompat$VFullPath()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setNestedScrollingEnabled(boolean)
androidx.appcompat.widget.Toolbar: int getPopupTheme()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: boolean setLong(android.content.Context,java.lang.String,java.lang.String,long)
me.carda.awesome_notifications.core.AwesomeNotifications: void dismissAllNotifications()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void maybeWaitOnFence(android.media.Image)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: com.pichillilorenzo.flutter_inappwebview_android.ISettings parse(java.util.Map)
io.flutter.plugins.firebase.core.FlutterFirebaseCorePlugin: FlutterFirebaseCorePlugin()
me.carda.awesome_notifications.core.managers.SharedManager: android.content.SharedPreferences getSharedInstance(android.content.Context)
com.google.firebase.firestore.remote.TestingHooks$ExistenceFilterMismatchInfo: TestingHooks$ExistenceFilterMismatchInfo()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void removeInt(android.content.Context,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.AwesomeNotifications: boolean cancelNotification(java.lang.Integer)
androidx.appcompat.widget.AppCompatButton: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
org.chromium.support_lib_boundary.ProfileBoundaryInterface: android.webkit.CookieManager getCookieManager()
com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator: com.google.firestore.v1.StructuredQuery$CompositeFilter$Operator valueOf(java.lang.String)
me.carda.awesome_notifications.core.managers.ScheduleManager: boolean isPreciseAlarmGloballyAllowed(android.app.AlarmManager)
com.dexterous.flutterlocalnotifications.models.RepeatInterval: com.dexterous.flutterlocalnotifications.models.RepeatInterval[] $values()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$SyncShouldInterceptRequestCallback: java.lang.Object decodeResult(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: androidx.core.view.WindowInsetsCompat build()
androidx.core.view.WindowInsetsCompat$Impl20: WindowInsetsCompat$Impl20(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20)
androidx.core.app.NotificationCompatBuilder$Api21Impl: android.app.Notification$Builder setColor(android.app.Notification$Builder,int)
me.carda.awesome_notifications.core.exceptions.ExceptionFactory: me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException createNewAwesomeException(java.lang.String,java.lang.String,java.lang.String,java.lang.Exception)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void lambda$setAllIntValues$3(android.content.ContentValues,java.lang.Integer)
me.carda.awesome_notifications.core.models.NotificationIntervalModel: void validate(android.content.Context)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setHideMotionSpecResource(int)
me.carda.awesome_notifications.core.managers.DefaultsManager: boolean setCreatedCallbackDispatcher(android.content.Context,java.lang.Long)
com.google.android.material.chip.Chip: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: void assertOriginRulesValid()
android.support.v4.media.AudioAttributesImplApi21Parcelizer: AudioAttributesImplApi21Parcelizer()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedPreScroll(android.view.View,int,int,int[])
com.pichillilorenzo.flutter_inappwebview_android.Util: boolean objEquals(java.lang.Object,java.lang.Object)
androidx.lifecycle.Lifecycle$State: androidx.lifecycle.Lifecycle$State valueOf(java.lang.String)
androidx.appcompat.app.AppCompatActivity: void onConfigurationChanged(android.content.res.Configuration)
androidx.appcompat.view.menu.ListMenuItemView: void setCheckable(boolean)
androidx.core.view.ViewCompat$Api26Impl: void setTooltipText(android.view.View,java.lang.CharSequence)
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: void setId(java.lang.String)
me.carda.awesome_notifications.core.AwesomeNotifications: void initialize(java.lang.String,java.util.List,java.util.List,java.lang.Long,boolean)
com.google.firebase.firestore.util.AsyncQueue: AsyncQueue()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$2: InAppWebViewClientCompat$2(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat,android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,int,android.webkit.HttpAuthHandler)
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String,int)
com.google.android.material.sidesheet.SideSheetBehavior: SideSheetBehavior()
androidx.appcompat.widget.AppCompatCheckBox: void setFilters(android.text.InputFilter[])
com.google.android.material.textfield.TextInputLayout: int getBoxStrokeColor()
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage$2: void onReceiveValue(java.lang.Long)
com.google.android.datatransport.runtime.backends.BackendRequest: BackendRequest()
androidx.core.view.WindowInsetsCompat$Impl28: WindowInsetsCompat$Impl28(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28)
com.pichillilorenzo.flutter_inappwebview_android.types.CreateWindowAction: int getWindowId()
com.google.android.material.internal.ForegroundLinearLayout: int getForegroundGravity()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: boolean canScrollHorizontally()
com.google.android.material.floatingactionbutton.FloatingActionButton$Behavior: FloatingActionButton$Behavior(android.content.Context,android.util.AttributeSet)
androidx.window.area.reflectionguard.ExtensionWindowAreaPresentationRequirements: android.content.Context getPresentationContext()
me.carda.awesome_notifications.core.models.NotificationCrontabModel: me.carda.awesome_notifications.core.models.NotificationCrontabModel fromMap(java.util.Map)
com.google.android.material.textfield.TextInputLayout: void setCursorErrorColor(android.content.res.ColorStateList)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setBackgroundTintList(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: boolean canGoBack()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void registerOnMeasurementEventListener(com.google.android.gms.internal.measurement.zzdp)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageListener: void dispose()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ServerTimestampBehavior: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$ServerTimestampBehavior valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getSuffixTextView()
com.google.android.material.chip.Chip: void setTextAppearance(int)
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: void removeAllSchedules(android.content.Context)
androidx.appcompat.widget.AppCompatImageView: android.content.res.ColorStateList getSupportBackgroundTintList()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getCollectionItemColumnTitle(java.lang.Object)
com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue: com.google.firestore.v1.DocumentTransform$FieldTransform$ServerValue valueOf(java.lang.String)
me.carda.awesome_notifications.core.managers.CancellationManager: CancellationManager(me.carda.awesome_notifications.core.utils.StringUtils)
com.google.android.material.chip.Chip: void setChipCornerRadiusResource(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$SafeBrowsingHitCallback: WebViewChannelDelegate$SafeBrowsingHitCallback()
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender: void sendBroadcastDefaultAction(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.ActionReceived,boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: java.lang.String toString()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setVibrationPattern(me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
androidx.recyclerview.widget.ViewInfoStore$InfoRecord: ViewInfoStore$InfoRecord()
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: void setProtocol(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$3: void error(java.lang.String,java.lang.String,java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt fromWebResourceRequest(android.webkit.WebResourceRequest)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: boolean onShowFileChooser(android.webkit.WebView,android.webkit.ValueCallback,android.webkit.WebChromeClient$FileChooserParams)
com.google.android.material.checkbox.MaterialCheckBox: android.graphics.drawable.Drawable getButtonIconDrawable()
com.pichillilorenzo.flutter_inappwebview_android.Util: android.graphics.drawable.Drawable drawableFromBytes(android.content.Context,byte[])
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshSettings: java.util.Map getRealSettings(java.lang.Object)
me.carda.awesome_notifications.core.managers.CancellationManager: void cancelAllSchedules(android.content.Context)
androidx.recyclerview.widget.RecyclerView: void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType: io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack$FlutterMutatorType[] values()
io.grpc.MethodDescriptor$MethodType: io.grpc.MethodDescriptor$MethodType valueOf(java.lang.String)
me.carda.awesome_notifications.core.models.NotificationCalendarModel: me.carda.awesome_notifications.core.models.NotificationCalendarModel fromMap(java.util.Map)
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.lang.String getExpressionSetSummary(java.util.ArrayList)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: boolean onRenderProcessGone(android.webkit.WebView,android.webkit.RenderProcessGoneDetail)
android.support.v4.graphics.drawable.IconCompatParcelizer: void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.material.textfield.TextInputLayout: void setSuffixTextColor(android.content.res.ColorStateList)
me.carda.awesome_notifications.core.databases.SqLiteCypher: SqLiteCypher()
com.google.android.material.textfield.TextInputLayout: void setEndIconDrawable(int)
androidx.core.content.FileProvider: java.lang.String[] copyOf(java.lang.String[],int)
com.google.android.material.chip.ChipGroup: void setSingleLine(boolean)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: boolean canGoBack()
com.google.android.material.bottomappbar.BottomAppBar: void setNavigationIconTint(int)
com.pichillilorenzo.flutter_inappwebview_android.Util: java.lang.String getUrlAsset(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin,java.lang.String)
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void reverse(android.animation.AnimatorSet)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: java.util.Map getHeaders()
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: java.lang.String getPassword()
androidx.recyclerview.widget.RecyclerView$LayoutManager: RecyclerView$LayoutManager()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsAlertCallback: java.lang.Object decodeResult(java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: java.lang.String getUniqueId(android.view.accessibility.AccessibilityNodeInfo)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: boolean onActivityResult(int,int,android.content.Intent)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.Object convertServiceWorkerSettings(java.lang.reflect.InvocationHandler)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.DartBackgroundExecutor: DartBackgroundExecutor()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$4: InAppBrowserActivity$4(com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity,com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem)
androidx.core.view.ViewCompat$Api21Impl: android.content.res.ColorStateList getBackgroundTintList(android.view.View)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int,boolean)
com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior: com.google.firebase.crashlytics.internal.settings.SettingsCacheBehavior valueOf(java.lang.String)
me.carda.awesome_notifications.core.managers.CreatedManager: boolean commitChanges(android.content.Context)
androidx.core.content.FileProvider: java.lang.String getType(android.net.Uri)
com.google.gson.stream.JsonWriter: void beforeValue()
me.carda.awesome_notifications.core.enumerators.LogLevel: me.carda.awesome_notifications.core.enumerators.LogLevel valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void nativeSetViewportMetrics(long,float,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int,int[],int[],int[])
androidx.appcompat.widget.AppCompatAutoCompleteTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.pichillilorenzo.flutter_inappwebview_android.types.SyncBaseCallbackResultImpl: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.appcompat.view.menu.ActionMenuItemView: ActionMenuItemView(android.content.Context,android.util.AttributeSet)
io.grpc.ClientCall: ClientCall()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintList(android.content.res.ColorStateList)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void onNestedScrollAccepted(android.view.View,android.view.View,int)
com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustAuthResponse: void setAction(java.lang.Integer)
com.google.android.material.button.MaterialButton: int getInsetTop()
androidx.appcompat.widget.SearchView$SearchAutoComplete: void setSearchView(androidx.appcompat.widget.SearchView)
io.grpc.util.OutlierDetectionLoadBalancerProvider: int getPriority()
androidx.appcompat.widget.AppCompatCheckedTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
androidx.arch.core.internal.SafeIterableMap: SafeIterableMap()
com.google.android.material.circularreveal.cardview.CircularRevealCardView: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
me.carda.awesome_notifications.core.utils.JsonUtils: java.lang.Object fromJson(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo)
com.google.android.material.search.SearchBar: int getMenuResId()
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: void setAllow(boolean)
com.google.android.material.floatingactionbutton.FloatingActionButton: int getSizeDimension()
com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse: void setResources(java.util.List)
com.google.gson.stream.JsonReader: int nextNonWhitespace(boolean)
com.google.protobuf.LazyFieldLite: LazyFieldLite()
me.carda.awesome_notifications.core.models.NotificationButtonModel: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
com.google.android.material.checkbox.MaterialCheckBox: void setErrorShown(boolean)
androidx.appcompat.widget.AppCompatCheckedTextView: android.graphics.PorterDuff$Mode getSupportBackgroundTintMode()
com.dexterous.flutterlocalnotifications.utils.BooleanUtils: BooleanUtils()
androidx.core.view.ViewCompat$Api23Impl: androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View)
androidx.cardview.widget.CardView: void setCardBackgroundColor(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$5: InAppWebViewChromeClient$5(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsResult)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView: android.view.View getView()
com.dexterous.flutterlocalnotifications.models.ScheduleMode: com.dexterous.flutterlocalnotifications.models.ScheduleMode[] $values()
androidx.core.app.NotificationCompat$MessagingStyle$Api24Impl: android.app.Notification$MessagingStyle addMessage(android.app.Notification$MessagingStyle,android.app.Notification$MessagingStyle$Message)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$3: WebViewChannelDelegate$3(com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingSettings: java.util.Map toMap()
androidx.fragment.app.FragmentActivity: void onStart()
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getStableInsets()
io.flutter.embedding.engine.FlutterJNI: boolean isAttached()
androidx.appcompat.app.AppCompatDelegate$Api24Impl: android.os.LocaleList localeListForLanguageTags(java.lang.String)
com.google.android.gms.internal.measurement.zzfy$zzk: zzfy$zzk()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewManager$2: void onReceiveValue(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: JsBeforeUnloadResponse(java.lang.String,java.lang.String,java.lang.String,boolean,java.lang.Integer)
androidx.cardview.widget.CardView: int getContentPaddingBottom()
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: boolean getBlockNetworkLoads()
androidx.activity.ComponentActivity: androidx.lifecycle.viewmodel.CreationExtras getDefaultViewModelCreationExtras()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setLargeIcon(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
com.google.firebase.sessions.SessionLifecycleService: SessionLifecycleService()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void customTabsConnected()
me.carda.awesome_notifications.core.managers.DismissedManager: boolean removeDismissed(android.content.Context,java.lang.Integer,java.util.Calendar)
com.google.android.material.chip.Chip: void setCloseIconPressed(boolean)
org.chromium.support_lib_boundary.IsomorphicObjectBoundaryInterface: java.lang.Object getOrCreatePeer(java.util.concurrent.Callable)
com.google.android.gms.internal.measurement.zzfy$zzj: zzfy$zzj()
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager$1: ServiceWorkerManager$1(com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$CallJsHandlerCallback: WebViewChannelDelegate$CallJsHandlerCallback()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setupAlarm(com.dexterous.flutterlocalnotifications.models.NotificationDetails,android.app.AlarmManager,long,android.app.PendingIntent)
com.google.gson.stream.JsonReader: boolean fillBuffer(int)
io.flutter.embedding.android.FlutterActivity: FlutterActivity()
me.leolin.shortcutbadger.impl.ZTEHomeBadger: ZTEHomeBadger()
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: boolean equals(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld: java.lang.String toString()
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType valueOf(java.lang.String)
me.carda.awesome_notifications.core.managers.CreatedManager: boolean removeCreated(android.content.Context,java.lang.Integer,java.util.Calendar)
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityDelegate(io.flutter.embedding.engine.FlutterJNI$AccessibilityDelegate)
androidx.appcompat.widget.ActionMenuView: ActionMenuView(android.content.Context,android.util.AttributeSet)
com.google.android.material.card.MaterialCardView: void setShapeAppearanceModel(com.google.android.material.shape.ShapeAppearanceModel)
androidx.core.view.ViewCompat$Api30Impl: void setStateDescription(android.view.View,java.lang.CharSequence)
androidx.datastore.preferences.protobuf.JavaType: androidx.datastore.preferences.protobuf.JavaType[] values()
com.google.android.datatransport.runtime.backends.BackendResponse$Status: com.google.android.datatransport.runtime.backends.BackendResponse$Status valueOf(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: boolean hasNestedScrollingParent(int)
androidx.core.graphics.drawable.IconCompat$Api28Impl: int getType(java.lang.Object)
me.carda.awesome_notifications.core.utils.BitmapUtils: android.graphics.Bitmap roundBitmap(android.graphics.Bitmap)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatTextView$SuperCaller getSuperCaller()
kotlin.collections.LongIterator: LongIterator()
androidx.appcompat.app.AppCompatActivity: void onStart()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: void setHeaders(java.util.Map)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay: io.flutter.embedding.engine.systemchannels.PlatformChannel$SystemUiOverlay[] values()
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender: void enqueueSilentBackgroundAction(android.content.Context,java.lang.String,me.carda.awesome_notifications.core.models.returnedData.ActionReceived,android.content.Intent)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onExitFullscreen()
me.carda.awesome_notifications.core.models.NotificationContentModel: void validateRequiredImages(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView: void onFlutterViewAttached(android.view.View)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt: int getType()
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: java.lang.String getSafeName()
com.pichillilorenzo.flutter_inappwebview_android.WebViewFeatureManager: WebViewFeatureManager(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
me.carda.awesome_notifications.core.managers.StatusBarManager: java.util.List getAllAndroidActiveNotificationsByChannelKey(android.content.Context,java.lang.String)
androidx.room.MultiInstanceInvalidationService: MultiInstanceInvalidationService()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt fromMap(java.util.Map)
org.chromium.support_lib_boundary.ServiceWorkerWebSettingsBoundaryInterface: java.util.Set getRequestedWithHeaderOriginAllowList()
androidx.core.widget.NestedScrollView: float getBottomFadingEdgeStrength()
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerManager: void init()
com.google.android.material.chip.Chip: void setChipIconVisible(boolean)
androidx.core.app.RemoteInput$Api29Impl: android.app.RemoteInput$Builder setEditChoicesBeforeSending(android.app.RemoteInput$Builder,int)
com.google.firestore.admin.v1.Index$QueryScope: com.google.firestore.admin.v1.Index$QueryScope valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$1: WebViewChannelDelegate$1(com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.appbar.AppBarLayout: int getUpNestedPreScrollRange()
androidx.activity.ComponentActivity: androidx.lifecycle.Lifecycle getLifecycle()
me.carda.awesome_notifications.core.externalLibs.CronExpression: java.util.TimeZone getTimeZone()
me.carda.awesome_notifications.R$dimen: R$dimen()
com.google.android.material.button.MaterialButton: android.graphics.PorterDuff$Mode getIconTintMode()
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: MediaSizeExt(java.lang.String,java.lang.String,int,int)
me.carda.awesome_notifications.core.managers.StatusBarManager: void onNotificationRemoved(android.service.notification.StatusBarNotification)
com.google.android.material.textfield.TextInputLayout: void setTextInputAccessibilityDelegate(com.google.android.material.textfield.TextInputLayout$AccessibilityDelegate)
androidx.core.view.MenuItemCompat$Api26Impl: java.lang.CharSequence getTooltipText(android.view.MenuItem)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$18: void defaultBehaviour(java.lang.Object)
io.grpc.internal.TransportTracer: TransportTracer()
androidx.datastore.preferences.protobuf.DoubleArrayList: DoubleArrayList()
androidx.appcompat.widget.ActionBarContainer: void setVisibility(int)
androidx.core.view.WindowInsetsCompat$TypeImpl30: int toPlatformType(int)
com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse: boolean equals(java.lang.Object)
androidx.core.app.RemoteActionCompatParcelizer: RemoteActionCompatParcelizer()
com.google.android.gms.measurement.AppMeasurement: java.lang.String getCurrentScreenName()
androidx.browser.customtabs.CustomTabsCallback: void onWarmupCompleted(android.os.Bundle)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void isDataCollectionEnabled(com.google.android.gms.internal.measurement.zzdo)
androidx.activity.ComponentActivity: void removeOnContextAvailableListener(androidx.activity.contextaware.OnContextAvailableListener)
androidx.appcompat.view.menu.ListMenuItemView: void setTitle(java.lang.CharSequence)
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
com.dexterous.flutterlocalnotifications.models.DateTimeComponents: com.dexterous.flutterlocalnotifications.models.DateTimeComponents valueOf(java.lang.String)
androidx.activity.ComponentActivity: void setContentView(android.view.View)
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper$Impl: boolean isHorizontallyScrollable(android.widget.TextView)
com.pichillilorenzo.flutter_inappwebview_android.R$integer: R$integer()
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite[] values()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabledInNative(boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: HttpAuthResponse(java.lang.String,java.lang.String,boolean,java.lang.Integer)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView: void dispose()
androidx.media.AudioAttributesCompatParcelizer: androidx.media.AudioAttributesCompat read(androidx.versionedparcelable.VersionedParcel)
io.flutter.embedding.engine.FlutterJNI: void dispatchPointerDataPacket(java.nio.ByteBuffer,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel$2: WebMessageChannel$2(com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel,com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel,int)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void onTrimMemory(int)
com.google.android.material.button.MaterialButton: void setIconResource(int)
me.carda.awesome_notifications.core.managers.ChannelManager: void setAndroidChannel(android.content.Context,me.carda.awesome_notifications.core.models.NotificationChannelModel,boolean)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelShowAlarmPage(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.DisplayCutoutCompat getDisplayCutout()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonDocumentOption: GeneratedAndroidFirebaseFirestore$PigeonDocumentOption()
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView: void setSize(com.pichillilorenzo.flutter_inappwebview_android.types.Size2D)
com.google.android.material.textfield.TextInputLayout: void setStartIconTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: void setPassword(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$2: void defaultBehaviour(java.lang.Integer)
androidx.core.widget.TextViewCompat$Api24Impl: android.icu.text.DecimalFormatSymbols getInstance(java.util.Locale)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsAlertCallback: com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse decodeResult(java.lang.Object)
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setInsets(int,androidx.core.graphics.Insets)
androidx.core.app.NotificationCompat$CallStyle$Api31Impl: android.app.Notification$CallStyle forIncomingCall(android.app.Person,android.app.PendingIntent,android.app.PendingIntent)
me.carda.awesome_notifications.core.managers.ChannelManager: me.carda.awesome_notifications.core.managers.ChannelManager saveChannel(android.content.Context,me.carda.awesome_notifications.core.models.NotificationChannelModel,java.lang.Boolean,java.lang.Boolean)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getVisibleInsets(android.view.View)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: java.util.Map toMap()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter close(int,int,char)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void setInAppBrowserDelegate(com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate)
androidx.appcompat.app.AppCompatActivity: void onTitleChanged(java.lang.CharSequence,int)
android.support.v4.media.MediaDescriptionCompat$Api23Impl: android.net.Uri getMediaUri(android.media.MediaDescription)
io.flutter.view.AccessibilityBridge$LocaleStringAttribute: AccessibilityBridge$LocaleStringAttribute()
me.carda.awesome_notifications.core.managers.DefaultsManager: boolean setDisplayedCallbackDispatcher(android.content.Context,java.lang.Long)
me.carda.awesome_notifications.core.managers.ActionManager: boolean removeAllActions(android.content.Context)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodClearStoredActions(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: long id()
me.carda.awesome_notifications.R$color: R$color()
me.carda.awesome_notifications.core.threads.NotificationScheduler: void cancelSchedule(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel)
androidx.appcompat.widget.ViewStubCompat: void setLayoutResource(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onConsoleMessage(java.lang.String,int)
me.carda.awesome_notifications.core.logs.Logger: Logger()
me.carda.awesome_notifications.core.managers.SharedManager: java.lang.Boolean remove(android.content.Context,java.lang.String,java.lang.String)
androidx.appcompat.widget.AppCompatTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState[] values()
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase[] values()
androidx.appcompat.widget.ContentFrameLayout: android.util.TypedValue getFixedWidthMajor()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onLoadResourceWithCustomScheme(com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$LoadResourceWithCustomSchemeCallback)
com.pichillilorenzo.flutter_inappwebview_android.PlatformUtil: java.util.Locale getLocaleFromString(java.lang.String)
okio.Buffer: Buffer()
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: java.lang.Integer getAction()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setGrouping(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$12: InAppWebView$12(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,android.view.ActionMode$Callback,android.view.ActionMode,android.view.MenuItem,int,java.lang.String)
kotlinx.coroutines.internal.AtomicOp: AtomicOp()
com.google.firebase.sessions.SessionDatastoreImpl$Companion: SessionDatastoreImpl$Companion()
com.google.firebase.firestore.local.IndexManager$IndexType: com.google.firebase.firestore.local.IndexManager$IndexType[] values()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setCategory(me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
com.google.firestore.v1.DocumentRemove: DocumentRemove()
androidx.fragment.app.FragmentActivity: FragmentActivity()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void setActions(android.media.session.PlaybackState$Builder,long)
androidx.appcompat.widget.ActionMenuView: int getWindowAnimations()
androidx.core.view.WindowInsetsCompat$BuilderImpl20: void setStableInsets(androidx.core.graphics.Insets)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void access$301(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat,android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnFrameConsumedListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnFrameConsumedListener)
androidx.appcompat.app.AppCompatActivity: void setSupportActionBar(androidx.appcompat.widget.Toolbar)
io.flutter.plugins.webviewflutter.WebViewProxyApi$WebViewPlatformView: void setWebChromeClient(android.webkit.WebChromeClient)
androidx.constraintlayout.helper.widget.Flow: Flow(android.content.Context,android.util.AttributeSet)
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.graphics.drawable.Icon toIcon(androidx.core.graphics.drawable.IconCompat,android.content.Context)
io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode: io.flutter.embedding.engine.systemchannels.PlatformViewsChannel$PlatformViewCreationRequest$RequestedDisplayMode valueOf(java.lang.String)
androidx.appcompat.widget.AppCompatCheckBox: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void reloadButtonClicked(android.view.MenuItem)
androidx.core.view.ViewCompat$Api30Impl: int getImportantForContentCapture(android.view.View)
androidx.fragment.app.FragmentActivity: void lambda$init$3(android.content.Context)
androidx.core.graphics.drawable.IconCompat$Api26Impl: android.graphics.drawable.Drawable createAdaptiveIconDrawable(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable)
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Action$Builder setContextual(android.app.Notification$Action$Builder,boolean)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState: int getChangingConfigurations()
me.carda.awesome_notifications.core.managers.ChannelGroupManager: void cancelChannelGroup(android.content.Context,java.lang.String)
io.flutter.embedding.engine.FlutterJNI: void addEngineLifecycleListener(io.flutter.embedding.engine.FlutterEngine$EngineLifecycleListener)
io.flutter.plugin.platform.PlatformViewWrapper: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
me.carda.awesome_notifications.core.managers.ScheduleManager: java.util.List listScheduledIdsFromGroup(android.content.Context,java.lang.String)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: com.dexterous.flutterlocalnotifications.models.PersonDetails readPersonDetails(java.util.Map)
io.flutter.plugins.firebase.crashlytics.FlutterFirebaseCrashlyticsPlugin: FlutterFirebaseCrashlyticsPlugin()
io.grpc.okhttp.Utils: Utils()
androidx.core.view.ViewCompat$Api31Impl: androidx.core.view.ContentInfoCompat performReceiveContent(android.view.View,androidx.core.view.ContentInfoCompat)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: boolean isLoading()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: int getInt(android.content.Context,java.lang.String,java.lang.String,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.ContextMenuSettings: java.util.Map toMap()
com.google.firestore.v1.RunAggregationQueryRequest$Builder: RunAggregationQueryRequest$Builder()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void setProgressBackgroundColorSchemeResource(int)
me.carda.awesome_notifications.core.models.returnedData.NotificationReceived: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
com.google.firebase.firestore.model.ObjectValue: ObjectValue()
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: boolean isHandledByClient()
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.NotificationPermission getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.NotificationPermission)
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: java.lang.String toJson()
me.carda.awesome_notifications.core.managers.RepositoryManager: me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB convertOldSharedPreferencesIntoSqLite(android.content.Context,android.content.SharedPreferences)
com.google.android.gms.internal.measurement.zzaf: zzaf()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onReceivedHttpAuthRequest(com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthenticationChallenge,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$ReceivedHttpAuthRequestCallback)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$9: InAppWebView$9(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,java.lang.String,boolean,com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript)
androidx.appcompat.widget.Toolbar: android.view.MenuInflater getMenuInflater()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior: ExtendedFloatingActionButton$ExtendedFloatingActionButtonBehavior()
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: int getId()
me.carda.awesome_notifications.core.AwesomeNotifications: void stopForegroundService(java.lang.Integer)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager()
me.carda.awesome_notifications.core.managers.CreatedManager: CreatedManager()
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$16: void defaultBehaviour(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.List getLoadType()
me.carda.awesome_notifications.core.threads.NotificationSender: NotificationSender(android.content.Context,me.carda.awesome_notifications.core.utils.StringUtils,me.carda.awesome_notifications.core.builders.NotificationBuilder,me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle,me.carda.awesome_notifications.core.enumerators.NotificationSource,me.carda.awesome_notifications.core.models.NotificationModel,android.content.Intent,me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler)
io.flutter.embedding.engine.FlutterJNI: void attachToNative()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onReceivedLoginRequest(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: java.lang.Object getData()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setCompatElevationResource(int)
me.carda.awesome_notifications.core.models.NotificationModel: me.carda.awesome_notifications.core.models.NotificationModel fromMap(java.util.Map)
io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness: io.flutter.embedding.engine.systemchannels.PlatformChannel$Brightness[] values()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback: android.view.View$OnApplyWindowInsetsListener getInsetsListener()
androidx.appcompat.widget.Toolbar: int getContentInsetEndWithActions()
kotlinx.coroutines.MainCoroutineDispatcher: MainCoroutineDispatcher()
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$2: JavaScriptBridgeInterface$2$2(com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2)
kotlinx.coroutines.flow.StateFlowSlot: StateFlowSlot()
androidx.appcompat.app.AppCompatDelegate$Api33Impl: void localeManagerSetApplicationLocales(java.lang.Object,android.os.LocaleList)
com.google.android.material.chip.ChipGroup: void setChipSpacingHorizontalResource(int)
com.pichillilorenzo.flutter_inappwebview_android.types.SslCertificateExt: SslCertificateExt(java.security.cert.X509Certificate)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void clearSslPreferences()
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setStackedBackground(android.graphics.drawable.Drawable)
com.google.android.material.card.MaterialCardView: void setDragged(boolean)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void lambda$setAllStringValues$4(android.content.ContentValues,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerChannelDelegate: ServiceWorkerChannelDelegate(com.pichillilorenzo.flutter_inappwebview_android.service_worker.ServiceWorkerManager,io.flutter.plugin.common.MethodChannel)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void getSelectedText(android.webkit.ValueCallback)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$5: void defaultBehaviour(java.lang.Object)
com.google.firebase.sessions.FirebaseSessionsRegistrar: com.google.firebase.sessions.SessionLifecycleServiceBinder getComponents$lambda$5(com.google.firebase.components.ComponentContainer)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.card.MaterialCardView: int getCheckedIconGravity()
androidx.core.widget.NestedScrollView: NestedScrollView(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.types.URLAuthenticationChallenge: boolean equals(java.lang.Object)
me.carda.awesome_notifications.core.enumerators.NotificationCategory: me.carda.awesome_notifications.core.enumerators.NotificationCategory getSafeEnum(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterOverlaySurface createOverlaySurface()
me.carda.awesome_notifications.core.externalLibs.CronExpression: int skipWhiteSpace(int,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: boolean isRetain()
me.carda.awesome_notifications.core.externalLibs.CronExpression: int getMonthNumber(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks$1: NoHistoryCustomTabsActivityCallbacks$1(com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.NoHistoryCustomTabsActivityCallbacks)
me.leolin.shortcutbadger.impl.AsusHomeBadger: AsusHomeBadger()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$4: void error(java.lang.String,java.lang.String,java.lang.Object)
com.google.android.material.textfield.TextInputLayout: java.lang.CharSequence getHelperText()
com.google.android.material.internal.NavigationMenuItemView: androidx.appcompat.view.menu.MenuItemImpl getItemData()
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatHoveredFocusedTranslationZ()
androidx.constraintlayout.widget.ConstraintLayout: void setOnConstraintsChanged(androidx.constraintlayout.widget.ConstraintsChangedListener)
androidx.appcompat.widget.AppCompatTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
me.carda.awesome_notifications.core.utils.MapUtils: java.util.Map deepMerge(java.util.Map,java.util.Map)
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase valueOf(java.lang.String)
io.flutter.embedding.android.FlutterSurfaceView: io.flutter.embedding.engine.renderer.FlutterRenderer getAttachedRenderer()
io.flutter.view.TextureRegistry$SurfaceProducer: int getHeight()
com.google.firebase.firestore.model.FieldIndex$IndexOffset: FieldIndex$IndexOffset()
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: GeolocationPermissionShowPromptResponse(java.lang.String,boolean,boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.ResolutionExt: java.lang.String getLabel()
io.flutter.embedding.android.FlutterImageView: android.media.ImageReader getImageReader()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String generatePluginScriptsCodeAt(com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime)
com.google.android.material.card.MaterialCardView: void setProgress(float)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter nullValue()
me.carda.awesome_notifications.core.enumerators.NotificationSource: NotificationSource(java.lang.String,int,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: java.lang.String getContentType()
me.carda.awesome_notifications.core.AwesomeNotifications: void setChannelGroups(android.content.Context,java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: void setAction(java.lang.Integer)
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: java.util.Map getSchedulesByChannelKey(android.content.Context,java.lang.String)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void access$401(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient,android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)
androidx.core.content.res.ResourcesCompat$Api23Impl: int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme)
com.google.android.gms.internal.measurement.zzjp: com.google.android.gms.internal.measurement.zzjp[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String generateWrappedCodeForDocumentEnd()
io.flutter.view.TextureRegistry$SurfaceProducer: void setSize(int,int)
io.flutter.embedding.engine.FlutterJNI: void onSurfaceChanged(int,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$4: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$1: boolean onQueryTextSubmit(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: InAppWebView(android.content.Context,android.util.AttributeSet)
androidx.datastore.preferences.PreferencesProto$StringSet$Builder: PreferencesProto$StringSet$Builder()
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: void whenComplete(me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException)
androidx.core.widget.PopupWindowCompat$Api23Impl: boolean getOverlapAnchor(android.widget.PopupWindow)
androidx.fragment.app.FragmentActivity: void onResume()
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: boolean equals(java.lang.Object)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: VectorDrawableCompat$VGroup()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: java.lang.String toString()
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback,int)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType[] values()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onPostMessage(java.lang.String)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory registerSubtype(java.lang.Class)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void onActivityStopped(com.google.android.gms.dynamic.IObjectWrapper,long)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.lang.String getString(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
com.google.common.collect.ImmutableSet: ImmutableSet()
me.carda.awesome_notifications.core.utils.BooleanUtils: BooleanUtils()
androidx.coordinatorlayout.widget.CoordinatorLayout: void setVisibility(int)
io.grpc.NameResolver: NameResolver()
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager$2: void onReceiveValue(java.lang.Boolean)
com.google.firestore.v1.Precondition$ConditionTypeCase: com.google.firestore.v1.Precondition$ConditionTypeCase valueOf(java.lang.String)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList getDefault()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePort$1: void onReceiveValue(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void sendOnCreateContextMenuEvent()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: int getContentHeight()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void backToSafety(boolean)
org.chromium.support_lib_boundary.WebMessagePortBoundaryInterface: void close()
androidx.appcompat.widget.Toolbar: void setCollapseContentDescription(int)
com.google.android.material.search.SearchBar: void setElevation(float)
com.google.android.material.button.MaterialButton: void setRippleColor(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: void setIconColor(java.lang.String)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodInitialize(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.webkit.WebViewClientCompat: void onReceivedError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceError)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeWidthFocused(int)
com.google.android.material.button.MaterialButton: void setTextAlignment(int)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float)
com.google.android.material.appbar.AppBarLayout: void setStatusBarForegroundResource(int)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: java.util.Map getRealSettings(com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity)
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings: java.util.Map toMap()
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: void setUsername(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings: androidx.webkit.ProcessGlobalConfig toProcessGlobalConfig(android.content.Context)
me.carda.awesome_notifications.core.enumerators.NotificationPlayState: me.carda.awesome_notifications.core.enumerators.NotificationPlayState fromMap(java.lang.Object)
me.carda.awesome_notifications.core.managers.LifeCycleManager: me.carda.awesome_notifications.core.managers.LifeCycleManager getInstance()
io.grpc.internal.SerializeReentrantCallsDirectExecutor: SerializeReentrantCallsDirectExecutor()
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void dispatchNestedScroll(int,int,int,int,int[],int,int[])
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: boolean equalsValue(java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setDefaultLocales(androidx.core.os.LocaleListCompat)
io.flutter.plugins.firebase.crashlytics.FlutterFirebaseAppRegistrar: FlutterFirebaseAppRegistrar()
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: java.lang.Integer getAction()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler: android.webkit.WebResourceResponse checkUrl(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt,java.lang.String)
me.carda.awesome_notifications.core.managers.StatusBarManager: void removeIndexCollapsedLayout(android.content.SharedPreferences$Editor,java.lang.String)
com.google.android.material.card.MaterialCardView: void setRadius(float)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar: com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource getLayout()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$2: boolean onClose()
com.google.android.material.internal.NavigationMenuView: int getWindowAnimations()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerAction: void setType(com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerActionType)
androidx.appcompat.widget.Toolbar: void setNavigationIcon(int)
com.google.android.material.bottomappbar.BottomAppBar: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
me.carda.awesome_notifications.core.models.AbstractModel: java.lang.String getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getNestedScrollAxes()
androidx.fragment.app.FragmentActivity: void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[])
me.carda.awesome_notifications.core.managers.ScheduleManager: void cancelSchedulesByGroupKey(android.content.Context,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld: com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld world(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void didStartNavigation(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void setSettings(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewSettings,java.util.HashMap)
me.carda.awesome_notifications.core.models.NotificationContentModel: void validateBigPicture(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: ThreadedInputConnectionProxyAdapterView(android.view.View,android.view.View,android.os.Handler)
kotlin.coroutines.intrinsics.CoroutineSingletons: kotlin.coroutines.intrinsics.CoroutineSingletons valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: void setInjectionTime(com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime)
androidx.appcompat.widget.AppCompatSpinner: void setBackgroundResource(int)
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: int hashCode()
com.google.android.material.search.SearchBar: float getStrokeWidth()
com.google.android.gms.internal.measurement.zzmz: com.google.android.gms.internal.measurement.zzmz[] values()
me.leolin.shortcutbadger.impl.HuaweiHomeBadger: HuaweiHomeBadger()
com.google.firestore.v1.CommitRequest$Builder: CommitRequest$Builder()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: EmptyActivityLifecycleCallbacks()
com.google.android.gms.internal.measurement.zzfy$zzl$zzb: com.google.android.gms.internal.measurement.zzfy$zzl$zzb[] values()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCornerSize(float)
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout valueOf(java.lang.String)
me.carda.awesome_notifications.core.managers.ScheduleManager: void migrateSharedScheduleDatabase(android.content.Context,me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB,java.util.List)
androidx.webkit.WebResourceErrorCompat: WebResourceErrorCompat()
com.google.firebase.firestore.proto.MaybeDocument: MaybeDocument()
androidx.appcompat.widget.SearchView: java.lang.CharSequence getQueryHint()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: java.util.Map getAllIntValues(android.content.Context,java.lang.String)
androidx.core.app.SharedElementCallback: SharedElementCallback()
io.flutter.embedding.engine.FlutterJNI: FlutterJNI()
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: java.lang.String getGroupName()
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: int hashCode()
androidx.appcompat.view.menu.ActionMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.appcompat.app.AppCompatActivity: androidx.appcompat.app.AppCompatDelegate getDelegate()
androidx.core.app.NotificationCompat$Style$Api24Impl: void setChronometerCountDown(android.widget.RemoteViews,int,boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt: WebViewAssetLoaderExt(androidx.webkit.WebViewAssetLoader,java.util.List)
io.flutter.embedding.engine.FlutterJNI: void nativeImageHeaderCallback(long,int,int)
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onWindowLayoutChanged(android.os.IBinder,androidx.window.sidecar.SidecarWindowLayoutInfo)
androidx.activity.ComponentActivity: java.lang.Object getLastCustomNonConfigurationInstance()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateQuery: GeneratedAndroidFirebaseFirestore$AggregateQuery()
com.google.firebase.firestore.core.ActivityScope$StopListenerSupportFragment: ActivityScope$StopListenerSupportFragment()
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerChannelDelegate: void dispose()
me.carda.awesome_notifications.core.managers.CancellationManager: boolean cancelSchedule(android.content.Context,java.lang.Integer)
androidx.appcompat.widget.SearchView: int getSuggestionRowLayout()
androidx.core.app.NotificationCompatBuilder$Api24Impl: android.app.Notification$Builder setCustomHeadsUpContentView(android.app.Notification$Builder,android.widget.RemoteViews)
me.carda.awesome_notifications.core.utils.BitmapUtils: BitmapUtils()
androidx.core.widget.TextViewCompat$Api23Impl: int getHyphenationFrequency(android.widget.TextView)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: android.graphics.Bitmap getBitmapFromSource(android.content.Context,java.lang.Object,com.dexterous.flutterlocalnotifications.models.BitmapSource)
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsetsForType(int,boolean)
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Builder: StructuredAggregationQuery$Aggregation$Builder()
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: boolean isHandledByClient()
androidx.appcompat.widget.AppCompatTextView: int getAutoSizeMaxTextSize()
androidx.core.view.ViewParentCompat$Api21Impl: boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean)
io.flutter.embedding.engine.FlutterJNI: void nativeRegisterTexture(long,long,java.lang.ref.WeakReference)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void callAsyncJavaScript(java.lang.String,java.util.Map,com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld,android.webkit.ValueCallback)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)
com.google.android.gms.internal.measurement.zzjc: zzjc()
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarVisibility(boolean)
me.carda.awesome_notifications.core.listeners.AwesomeNotificationEventListener: void onNewNotificationReceived(java.lang.String,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
kotlinx.coroutines.CoroutineDispatcher: CoroutineDispatcher()
me.carda.awesome_notifications.core.managers.ActionManager: java.util.List listActions(android.content.Context)
androidx.appcompat.widget.AppCompatEditText: void setBackgroundResource(int)
me.carda.awesome_notifications.core.AwesomeNotifications: java.util.List shouldShowRationale(java.lang.String,java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError)
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setDropDownBackgroundTint(int)
androidx.core.app.ComponentActivity: boolean shouldDumpInternalState(java.lang.String[])
androidx.versionedparcelable.CustomVersionedParcelable: CustomVersionedParcelable()
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: URLProtectionSpace(java.lang.String,java.lang.String,java.lang.String,int,android.net.http.SslCertificate,android.net.http.SslError)
androidx.core.view.ViewParentCompat$Api21Impl: boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int)
com.google.android.material.card.MaterialCardView: void setCheckedIcon(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: java.lang.String toString()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity: void didFailNavigation(java.lang.String,int,java.lang.String)
com.google.android.material.internal.VisibilityAwareImageButton: void setVisibility(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: void setPivotY(float)
com.google.firebase.components.ComponentDiscoveryService: ComponentDiscoveryService()
com.google.android.material.button.MaterialButtonToggleGroup: void setEnabled(boolean)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String generateCodeForDocumentStart()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$1: InAppWebViewRenderProcessClient$1(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient,androidx.webkit.WebViewRenderProcess)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setSound(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: java.lang.String getMethod()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void removeString(android.content.Context,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.Boolean setBigTextStyle(android.content.Context,me.carda.awesome_notifications.core.models.NotificationContentModel,androidx.core.app.NotificationCompat$Builder)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$PrintRequestCallback: java.lang.Object decodeResult(java.lang.Object)
com.dexterous.flutterlocalnotifications.models.styles.StyleInformation: StyleInformation()
com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType: PreferredContentModeOptionType(java.lang.String,int,int)
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.InterceptAjaxRequestJS: com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript createInterceptOnlyAsyncAjaxRequestsPluginScript(boolean)
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.Long getActionHandle()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: android.view.View getRootView()
com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse: java.lang.Integer getAction()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt: int hashCode()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootWindowInsets(androidx.core.view.WindowInsetsCompat)
com.google.firebase.firestore.auth.CredentialsProvider: CredentialsProvider()
me.carda.awesome_notifications.DartRefreshSchedulesReceiver: void initializeExternalPlugins(android.content.Context)
io.grpc.internal.ManagedChannelImpl$ResolutionState: io.grpc.internal.ManagedChannelImpl$ResolutionState valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: void setTitle(java.lang.CharSequence)
androidx.appcompat.app.AppCompatActivity: void onPostResume()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void initForTests(java.util.Map)
com.google.android.material.textfield.TextInputLayout: void setHintTextAppearance(int)
com.pichillilorenzo.flutter_inappwebview_android.types.URLAuthenticationChallenge: int hashCode()
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: void setAllowedOriginRules(java.util.Set)
androidx.core.content.FileProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)
androidx.core.content.FileProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])
com.google.gson.FieldNamingPolicy: com.google.gson.FieldNamingPolicy[] values()
com.google.android.gms.internal.measurement.zzjw: zzjw()
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void addRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: boolean isLoading()
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: void setConnectionCallback(com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper$ConnectionCallback)
com.google.firestore.v1.StructuredQuery$Order$Builder: StructuredQuery$Order$Builder()
com.google.android.material.bottomappbar.BottomAppBar: int getFabAlignmentAnimationDuration()
me.carda.awesome_notifications.core.utils.JsonUtils: org.json.JSONObject mapToJson(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: java.lang.String printCurrentPage(com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobSettings)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonTintList(android.content.res.ColorStateList)
androidx.room.IMultiInstanceInvalidationService$Stub: IMultiInstanceInvalidationService$Stub()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: void addUserOnlyScripts(java.util.List)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getUserProperties(java.lang.String,java.lang.String,boolean,com.google.android.gms.internal.measurement.zzdo)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: void pushTransform(float[])
io.flutter.embedding.engine.FlutterJNI: void nativeSurfaceWindowChanged(long,android.view.Surface)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setSupportImageTintMode(android.graphics.PorterDuff$Mode)
androidx.recyclerview.widget.RecyclerView: void setScrollingTouchSlop(int)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: void setHeaders(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.types.PrintAttributesExt: java.util.Map toMap()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.gms.internal.measurement.zzcm: zzcm()
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: boolean equals(java.lang.Object)
me.carda.awesome_notifications.core.threads.NotificationScheduler: java.util.Calendar onPostExecute(java.util.Calendar)
me.carda.awesome_notifications.core.enumerators.NotificationImportance: java.lang.String getSafeName()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.List getIfTopUrl()
androidx.core.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.google.android.gms.internal.measurement.zzbv: com.google.android.gms.internal.measurement.zzbv[] values()
com.google.firebase.ktx.FirebaseCommonLegacyRegistrar: FirebaseCommonLegacyRegistrar()
io.flutter.embedding.engine.FlutterJNI: void setAccessibilityFeatures(int)
com.google.gson.stream.JsonWriter: void replaceTop(int)
androidx.appcompat.view.menu.ListMenuItemView: void setIcon(android.graphics.drawable.Drawable)
androidx.core.os.BundleApi21ImplKt: void putSizeF(android.os.Bundle,java.lang.String,android.util.SizeF)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setChronometer(me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.textfield.TextInputLayout: void setDefaultHintTextColor(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: boolean isHandledByClient()
io.flutter.embedding.engine.FlutterJNI: void nativeMarkTextureFrameAvailable(long,long)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$LoadResourceWithCustomSchemeCallback: com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse decodeResult(java.lang.Object)
com.google.android.gms.internal.measurement.zzfy$zzg: zzfy$zzg()
androidx.appcompat.widget.Toolbar: void setCollapseIcon(int)
me.carda.awesome_notifications.DartBackgroundExecutor: boolean isDone()
com.google.firebase.installations.local.PersistedInstallationEntry: PersistedInstallationEntry()
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: byte[] getBody()
com.google.android.material.chip.ChipGroup: void setSelectionRequired(boolean)
com.google.firebase.firestore.proto.Target$TargetTypeCase: com.google.firebase.firestore.proto.Target$TargetTypeCase[] values()
io.grpc.okhttp.NegotiationType: io.grpc.okhttp.NegotiationType valueOf(java.lang.String)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodCancelNotificationsByChannelKey(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse: com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$11: InAppWebViewChromeClient$11(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsPromptResult)
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: me.carda.awesome_notifications.core.models.NotificationLocalizationModel fromJson(java.lang.String)
androidx.core.view.WindowInsetsCompat$Impl21: boolean isConsumed()
com.pichillilorenzo.flutter_inappwebview_android.types.ServerTrustChallenge: ServerTrustChallenge(com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: void setGroupName(java.lang.String)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodCancelSchedulesByChannelKey(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.Toolbar: void setTitleTextColor(android.content.res.ColorStateList)
com.dexterous.flutterlocalnotifications.models.IconSource: IconSource(java.lang.String,int)
com.google.firebase.crashlytics.internal.metadata.RolloutAssignment: RolloutAssignment()
io.flutter.embedding.engine.FlutterJNI: void onSurfaceCreated(android.view.Surface)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$3: void onCancel(android.content.DialogInterface)
me.carda.awesome_notifications.core.models.NotificationChannelGroupModel: void validate(android.content.Context)
io.flutter.embedding.engine.FlutterJNI: void setPlatformViewsController(io.flutter.plugin.platform.PlatformViewsController)
androidx.datastore.preferences.protobuf.GeneratedMessageLite$ExtendableMessage: GeneratedMessageLite$ExtendableMessage()
androidx.datastore.preferences.protobuf.ExtensionSchema: ExtensionSchema()
com.google.android.material.button.MaterialButton: void setIconTintResource(int)
androidx.dynamicanimation.animation.AnimationHandler: AnimationHandler()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType: com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTriggerResourceType[] $values()
androidx.fragment.app.FragmentActivity: void onStateNotSaved()
androidx.activity.ComponentActivity: void removeOnMultiWindowModeChangedListener(androidx.core.util.Consumer)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.TrustedWebActivity: void launchUrl(java.lang.String,java.util.Map,java.lang.String,java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$7: WebViewChannelDelegate$7(com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate,io.flutter.plugin.common.MethodChannel$Result)
me.carda.awesome_notifications.core.enumerators.MediaSource: me.carda.awesome_notifications.core.enumerators.MediaSource valueOf(java.lang.String)
com.google.android.gms.tasks.TaskCompletionSource: TaskCompletionSource()
me.carda.awesome_notifications.core.managers.LostEventsManager: java.util.Map recoverNotificationsDismissed(android.content.Context)
com.google.android.material.textfield.TextInputLayout: void setMinWidthResource(int)
kotlinx.coroutines.internal.LockFreeLinkedListHead: LockFreeLinkedListHead()
me.carda.awesome_notifications.core.models.returnedData.NotificationReceived: me.carda.awesome_notifications.core.models.NotificationContentModel fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface$2$2: void error(java.lang.String,java.lang.String,java.lang.Object)
me.carda.awesome_notifications.core.enumerators.LogLevel: me.carda.awesome_notifications.core.enumerators.LogLevel[] $values()
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PersistenceCacheIndexManagerRequest: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PersistenceCacheIndexManagerRequest[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: void setHighlightedResultIndex(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsBeforeUnloadCallback: java.lang.Object decodeResult(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.ThreadedInputConnectionProxyAdapterView: void setLocked(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$8: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setConsent(android.os.Bundle,long)
com.pichillilorenzo.flutter_inappwebview_android.webview.ContextMenuSettings: com.pichillilorenzo.flutter_inappwebview_android.webview.ContextMenuSettings parse(java.util.Map)
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack: FlutterMutatorsStack()
io.flutter.view.TextureRegistry$SurfaceTextureEntry$-CC: void $default$setOnTrimMemoryListener(io.flutter.view.TextureRegistry$SurfaceTextureEntry,io.flutter.view.TextureRegistry$OnTrimMemoryListener)
org.chromium.support_lib_boundary.WebViewProviderFactoryBoundaryInterface: java.lang.reflect.InvocationHandler createWebView(android.webkit.WebView)
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: void setMessage(java.lang.String)
me.carda.awesome_notifications.core.managers.CreatedManager: java.util.List listCreated(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt: com.pichillilorenzo.flutter_inappwebview_android.types.MediaSizeExt fromMap(java.util.Map)
androidx.core.os.UserManagerCompat$Api24Impl: boolean isUserUnlocked(android.content.Context)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver: me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeExceptionReceiver subscribeOnNotificationEvents(me.carda.awesome_notifications.core.listeners.AwesomeExceptionListener)
com.google.gson.Gson$FutureTypeAdapter: Gson$FutureTypeAdapter()
androidx.constraintlayout.helper.widget.Flow: void setVerticalAlign(int)
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.String getGroupKey(me.carda.awesome_notifications.core.models.NotificationContentModel,me.carda.awesome_notifications.core.models.NotificationChannelModel)
org.chromium.support_lib_boundary.ServiceWorkerClientBoundaryInterface: android.webkit.WebResourceResponse shouldInterceptRequest(android.webkit.WebResourceRequest)
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: int hashCode()
androidx.core.view.ViewConfigurationCompat$Api26Impl: float getScaledVerticalScrollFactor(android.view.ViewConfiguration)
com.pichillilorenzo.flutter_inappwebview_android.Util: float getPixelDensity(android.content.Context)
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: int toAndroidServiceType()
com.google.gson.stream.JsonReader: int doPeek()
com.google.android.material.button.MaterialButton: void setIconGravity(int)
me.carda.awesome_notifications.core.enumerators.NotificationLayout: java.lang.String getSafeName()
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingSettings: TracingSettings()
com.google.firebase.sessions.LogEnvironment: com.google.firebase.sessions.LogEnvironment valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: java.lang.Long getId()
androidx.appcompat.widget.AppCompatImageButton: void setSupportImageTintList(android.content.res.ColorStateList)
com.google.android.material.textfield.TextInputLayout: void setPasswordVisibilityToggleDrawable(int)
me.carda.awesome_notifications.core.externalLibs.CronExpression: int checkNext(int,java.lang.String,int,int)
me.carda.awesome_notifications.DartBackgroundExecutor: void finishDartBackgroundExecution()
com.google.android.material.internal.NavigationMenuItemView: void setCheckable(boolean)
androidx.datastore.preferences.core.MutablePreferences: MutablePreferences()
com.google.android.gms.common.internal.zzk: zzk()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void clearCookies()
me.carda.awesome_notifications.core.utils.CompareUtils: boolean assertEqualMaps(java.lang.Object,java.lang.Object)
androidx.core.content.ContextCompat$Api23Impl: java.lang.Object getSystemService(android.content.Context,java.lang.Class)
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView: void onWebViewCreated()
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder: void whenComplete(byte[],me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException)
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: boolean isPermanentPersistence()
com.pichillilorenzo.flutter_inappwebview_android.types.ICallbackResult: boolean nonNullSuccess(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: void setReasonPhrase(java.lang.String)
androidx.core.view.ViewConfigurationCompat$Api28Impl: boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration)
androidx.core.app.JobIntentService: int onStartCommand(android.content.Intent,int,int)
com.google.firestore.admin.v1.Index$IndexField$ValueModeCase: com.google.firestore.admin.v1.Index$IndexField$ValueModeCase valueOf(java.lang.String)
com.google.firebase.firestore.ListenSource: com.google.firebase.firestore.ListenSource[] values()
io.flutter.plugins.webviewflutter.PigeonApiWebViewClient$Companion: PigeonApiWebViewClient$Companion()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.List getUnlessTopUrl()
com.google.android.datatransport.cct.internal.LogRequest: LogRequest()
io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState: io.flutter.embedding.engine.systemchannels.LifecycleChannel$AppLifecycleState[] values()
me.leolin.shortcutbadger.impl.EverythingMeHomeBadger: EverythingMeHomeBadger()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedSchedule(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void startPickerIntent(android.webkit.ValueCallback,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabActivityHelper: void openCustomTab(android.app.Activity,android.content.Intent,android.net.Uri,java.util.Map,android.net.Uri,int)
com.google.android.material.card.MaterialCardView: int getContentPaddingRight()
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: void setHandledByClient(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$2: InAppWebViewRenderProcessClient$2(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient,androidx.webkit.WebViewRenderProcess)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceErrorExt: WebResourceErrorExt(int,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript: java.lang.String getSource()
androidx.appcompat.widget.ViewStubCompat: android.view.LayoutInflater getLayoutInflater()
androidx.core.view.ViewCompat$Api21Impl: boolean startNestedScroll(android.view.View,int)
com.pichillilorenzo.flutter_inappwebview_android.types.ICallbackResult: java.lang.Object decodeResult(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void launchUrlWithSession(androidx.browser.customtabs.CustomTabsSession,java.lang.String,java.util.Map,java.lang.String,java.util.List)
androidx.appcompat.widget.AppCompatSpinner: android.content.res.ColorStateList getSupportBackgroundTintList()
com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior: com.google.firebase.firestore.DocumentSnapshot$ServerTimestampBehavior[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.web_message.WebMessageChannel: void initJsInstance(com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface,android.webkit.ValueCallback)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonTransactionCommand: GeneratedAndroidFirebaseFirestore$PigeonTransactionCommand()
me.carda.awesome_notifications.core.managers.ChannelManager: android.app.NotificationChannel getAndroidChannel(android.content.Context,java.lang.String,java.lang.String)
com.google.android.datatransport.Event: Event()
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebViewManager: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void setUserContentController(com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController)
com.dexterous.flutterlocalnotifications.models.NotificationStyle: com.dexterous.flutterlocalnotifications.models.NotificationStyle valueOf(java.lang.String)
com.google.protobuf.WireFormat$FieldType: com.google.protobuf.WireFormat$FieldType valueOf(java.lang.String)
me.carda.awesome_notifications.core.models.NotificationScheduleModel: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
androidx.appcompat.widget.ActionMenuView: void setPopupTheme(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$1: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void release()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getSpeculativeLoadingStatus()
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface: JavaScriptBridgeInterface(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView)
com.google.android.material.chip.Chip: void setMaxWidth(int)
androidx.activity.ComponentActivity: androidx.savedstate.SavedStateRegistry getSavedStateRegistry()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.media.session.PlaybackState$CustomAction$Builder createCustomActionBuilder(java.lang.String,java.lang.CharSequence,int)
me.carda.awesome_notifications.R$layout: R$layout()
com.google.android.material.textfield.TextInputLayout: void setPrefixTextColor(android.content.res.ColorStateList)
com.google.gson.stream.JsonReader: void nextNull()
com.google.protobuf.NullValue: com.google.protobuf.NullValue valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: void setCertificatePath(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime: com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime valueOf(java.lang.String)
com.google.android.material.textfield.TextInputLayout: android.widget.ImageView$ScaleType getEndIconScaleType()
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessagePortCompatExt: java.util.Map toMap()
com.google.android.material.shape.CutCornerTreatment: CutCornerTreatment()
org.chromium.support_lib_boundary.ProfileBoundaryInterface: void clearPrefetch(java.lang.String,android.webkit.ValueCallback)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodCancelNotificationsByGroupKey(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.appbar.MaterialToolbar: android.widget.ImageView$ScaleType getLogoScaleType()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: long getMinDurationBetweenContentChangeMillis(android.view.accessibility.AccessibilityNodeInfo)
com.google.protobuf.ByteString$LeafByteString: ByteString$LeafByteString()
me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB: me.carda.awesome_notifications.core.databases.SQLiteSchedulesDB getInstance(android.content.Context)
androidx.recyclerview.widget.RecyclerView: int getMaxFlingVelocity()
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: URLRequest(java.lang.String,java.lang.String,byte[],java.util.Map)
io.flutter.embedding.android.FlutterView: void setVisibility(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$4: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport$Session$OperatingSystem: CrashlyticsReport$Session$OperatingSystem()
com.google.android.material.textfield.TextInputLayout: void setBoxCornerFamily(int)
me.carda.awesome_notifications.core.utils.CronUtils: java.util.Calendar applyToleranceDate(java.util.Calendar)
io.flutter.embedding.engine.FlutterJNI: boolean isCodePointEmojiModifier(int)
com.pichillilorenzo.flutter_inappwebview_android.Util: boolean isClass(java.lang.String)
androidx.core.content.res.FontResourcesParserCompat$Api21Impl: int getType(android.content.res.TypedArray,int)
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: me.carda.awesome_notifications.core.models.NotificationContentModel fromJson(java.lang.String)
androidx.core.app.NotificationCompat$MessagingStyle$Api26Impl: android.app.Notification$MessagingStyle addHistoricMessage(android.app.Notification$MessagingStyle,android.app.Notification$MessagingStyle$Message)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory of(java.lang.Class)
androidx.datastore.preferences.protobuf.ByteString: ByteString()
me.carda.awesome_notifications.core.managers.CancellationManager: void cancelAllNotifications(android.content.Context)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: android.util.DisplayMetrics getRearDisplayMetrics()
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate: void dispose()
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.enumerators.MediaSource getValueOrDefault(java.util.Map,java.lang.String,java.lang.Class,me.carda.awesome_notifications.core.enumerators.MediaSource)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$GeolocationPermissionsShowPromptCallback: WebViewChannelDelegate$GeolocationPermissionsShowPromptCallback()
com.google.android.datatransport.runtime.scheduling.persistence.EventStoreConfig: EventStoreConfig()
androidx.core.app.AlarmManagerCompat$Api21Impl: void setAlarmClock(android.app.AlarmManager,java.lang.Object,android.app.PendingIntent)
com.google.android.material.checkbox.MaterialCheckBox: void setButtonIconTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate$HandleCallback: WebViewAssetLoaderExt$PathHandlerExtChannelDelegate$HandleCallback()
me.carda.awesome_notifications.core.managers.ChannelManager: void commitChanges(android.content.Context)
androidx.core.widget.EdgeEffectCompat$Api21Impl: void onPull(android.widget.EdgeEffect,float,float)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void prepareAndAddUserScripts()
org.chromium.support_lib_boundary.SafeBrowsingResponseBoundaryInterface: void proceed(boolean)
kotlinx.coroutines.android.AndroidExceptionPreHandler: void handleException(kotlin.coroutines.CoroutineContext,java.lang.Throwable)
me.carda.awesome_notifications.core.exceptions.ExceptionFactory: me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException createNewAwesomeException(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Exception)
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: boolean equals(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.PlatformUtil: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.AppCompatRadioButton: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void access$701(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat,android.webkit.WebView,android.os.Message,android.os.Message)
androidx.window.area.reflectionguard.WindowAreaComponentApi2Requirements: void removeRearDisplayStatusListener(androidx.window.extensions.core.util.function.Consumer)
me.carda.awesome_notifications.core.models.NotificationCrontabModel: me.carda.awesome_notifications.core.models.NotificationScheduleModel fromMap(java.util.Map)
androidx.core.view.ViewCompat$Api21Impl$1: ViewCompat$Api21Impl$1(android.view.View,androidx.core.view.OnApplyWindowInsetsListener)
me.carda.awesome_notifications.core.AwesomeNotifications: java.util.Calendar getNextValidDate(me.carda.awesome_notifications.core.models.NotificationScheduleModel,java.util.Calendar)
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: java.lang.String toString()
me.carda.awesome_notifications.core.models.NotificationLocalizationModel: void validate(android.content.Context)
me.carda.awesome_notifications.core.broadcasters.receivers.DismissedNotificationReceiver: void onReceiveBroadcastEvent(android.content.Context,android.content.Intent)
org.chromium.support_lib_boundary.StaticsBoundaryInterface: void setSafeBrowsingAllowlist(java.util.Set,android.webkit.ValueCallback)
androidx.appcompat.app.AppCompatActivity: void onStop()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: android.os.Looper getWebViewLooper()
me.carda.awesome_notifications.core.builders.NotificationBuilder: void ensureCriticalAlert(android.content.Context)
com.dexterous.flutterlocalnotifications.models.BitmapSource: com.dexterous.flutterlocalnotifications.models.BitmapSource[] $values()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: boolean access$302(io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer,boolean)
com.google.android.material.textfield.MaterialAutoCompleteTextView: int getSimpleItemSelectedColor()
com.google.android.material.floatingactionbutton.FloatingActionButton: com.google.android.material.animation.MotionSpec getHideMotionSpec()
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest getRequest()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsPromptCallback: WebViewChannelDelegate$JsPromptCallback()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: void onReceivedTouchIconUrl(android.webkit.WebView,java.lang.String,boolean)
com.google.android.material.chip.Chip: void setSingleLine(boolean)
androidx.appcompat.widget.AppCompatImageView: void setImageDrawable(android.graphics.drawable.Drawable)
com.google.android.datatransport.cct.internal.ComplianceData$ProductIdOrigin: com.google.android.datatransport.cct.internal.ComplianceData$ProductIdOrigin valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse: com.pichillilorenzo.flutter_inappwebview_android.types.ClientCertResponse fromMap(java.util.Map)
com.google.firebase.database.collection.LLRBNode$Color: com.google.firebase.database.collection.LLRBNode$Color valueOf(java.lang.String)
me.carda.awesome_notifications.core.managers.LocalizationManager: boolean setLocalization(android.content.Context,java.lang.String)
me.carda.awesome_notifications.core.models.NotificationCalendarModel: void validate(android.content.Context)
com.google.android.material.card.MaterialCardView: void setStrokeColor(int)
com.pichillilorenzo.flutter_inappwebview_android.types.AndroidResource: java.lang.String getDefPackage()
com.pichillilorenzo.flutter_inappwebview_android.types.PrintJobInfoExt: PrintJobInfoExt()
com.google.firebase.firestore.model.MutableDocument$DocumentType: com.google.firebase.firestore.model.MutableDocument$DocumentType valueOf(java.lang.String)
androidx.appcompat.widget.ActionBarContainer: void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView)
com.google.protobuf.WireFormat$JavaType: com.google.protobuf.WireFormat$JavaType[] values()
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshChannelDelegate: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
org.chromium.support_lib_boundary.ScriptHandlerBoundaryInterface: void remove()
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController: com.pichillilorenzo.flutter_inappwebview_android.types.PrintJobInfoExt getInfo()
me.carda.awesome_notifications.core.managers.ChannelManager: boolean androidChannelNeedsForceUpdate(me.carda.awesome_notifications.core.models.NotificationChannelModel,android.app.NotificationChannel)
me.carda.awesome_notifications.core.enumerators.ForegroundServiceType: me.carda.awesome_notifications.core.enumerators.ForegroundServiceType[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.IChannelDelegate: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver: ScheduledNotificationReceiver()
com.pichillilorenzo.flutter_inappwebview_android.types.HitTestResult: int getType()
androidx.fragment.app.FragmentActivity: FragmentActivity(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: java.lang.Boolean acceptsVideo(java.lang.String)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: void onBroadcastNotificationCreated(android.content.Context,me.carda.awesome_notifications.core.models.returnedData.NotificationReceived)
com.pichillilorenzo.flutter_inappwebview_android.process_global_config.ProcessGlobalConfigSettings: com.pichillilorenzo.flutter_inappwebview_android.ISettings parse(java.util.Map)
com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService: JobInfoSchedulerService()
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: void setRight(double)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
androidx.appcompat.widget.ActionBarOverlayLayout: void setWindowCallback(android.view.Window$Callback)
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.Boolean setMediaPlayerLayout(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,androidx.core.app.NotificationCompat$Builder,android.content.Intent,me.carda.awesome_notifications.core.models.NotificationChannelModel)
org.chromium.support_lib_boundary.PrefetchOperationResultBoundaryInterface: int getStatusCode()
me.carda.awesome_notifications.core.threads.NotificationForegroundSender: java.lang.Object onPostExecute(java.lang.Object)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityStopped(android.app.Activity)
androidx.recyclerview.widget.RecyclerView: void setClipToPadding(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$17: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.GeolocationPermissionShowPromptResponse)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodStopForeground(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.gms.measurement.AppMeasurement: java.lang.String getGmpAppId()
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.lang.String getUserAgent()
com.google.android.material.bottomappbar.BottomAppBar: void setFabCradleRoundedCornerRadius(float)
com.dexterous.flutterlocalnotifications.models.ScheduleMode: com.dexterous.flutterlocalnotifications.models.ScheduleMode[] values()
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView: HeadlessInAppWebView(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin,java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.FlutterWebView)
com.google.android.gms.common.GooglePlayServicesMissingManifestValueException: GooglePlayServicesMissingManifestValueException()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebResourceError(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.plugin_scripts_js.PrintJS: PrintJS()
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onContextMenuActionItemClicked(int,java.lang.String)
me.carda.awesome_notifications.DartBackgroundExecutor: void addSilentIntent(android.content.Intent)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void getZoomScale(android.webkit.ValueCallback)
androidx.activity.ComponentActivity: boolean onPreparePanel(int,android.view.View,android.view.Menu)
com.google.android.material.button.MaterialButton: void setCheckable(boolean)
com.google.android.gms.internal.measurement.zzfo$zza: zzfo$zza()
com.pichillilorenzo.flutter_inappwebview_android.webview.ContextMenuSettings: com.pichillilorenzo.flutter_inappwebview_android.ISettings parse(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$8: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.JsPromptResponse)
com.google.firestore.v1.CommitRequest: CommitRequest()
com.google.firebase.sessions.settings.SessionsSettings$Companion: SessionsSettings$Companion()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$3: InAppBrowserActivity$3(com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity)
com.google.android.material.search.SearchBar: void setNavigationIcon(android.graphics.drawable.Drawable)
me.carda.awesome_notifications.core.utils.StringUtils: java.lang.String digestString(java.lang.String)
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertSafeBrowsingResponse(java.lang.Object)
me.carda.awesome_notifications.core.utils.BitmapUtils: java.lang.Boolean isValidBitmap(android.content.Context,java.lang.String)
me.carda.awesome_notifications.core.managers.CancellationManager: boolean cancelNotificationsByGroupKey(android.content.Context,java.lang.String)
com.google.firestore.v1.ArrayValue$Builder: ArrayValue$Builder()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: boolean equals(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean isValidDrawableResource(android.content.Context,java.lang.String,io.flutter.plugin.common.MethodChannel$Result,java.lang.String)
androidx.activity.ComponentActivity: ComponentActivity(int)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB getInstance(android.content.Context)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: int getProgressViewEndOffset()
com.google.common.base.Platform: Platform()
com.pichillilorenzo.flutter_inappwebview_android.types.BaseCallbackResultImpl: void notImplemented()
com.google.android.material.search.SearchBar: void setNavigationOnClickListener(android.view.View$OnClickListener)
me.carda.awesome_notifications.core.AwesomeNotifications: void setGlobalBadgeCounter(java.lang.Integer)
com.google.android.material.drawable.DrawableUtils$OutlineCompatL: void setConvexPath(android.graphics.Outline,android.graphics.Path)
com.google.android.material.checkbox.MaterialCheckBox: void setCenterIfNoTextEnabled(boolean)
androidx.appcompat.widget.AppCompatCheckBox: void setButtonDrawable(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface: com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView access$000(com.pichillilorenzo.flutter_inappwebview_android.webview.JavaScriptBridgeInterface)
me.carda.awesome_notifications.core.enumerators.NotificationLayout: me.carda.awesome_notifications.core.enumerators.NotificationLayout[] values()
com.google.firebase.firestore.index.IndexEntry: IndexEntry()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void loadCustomJavaScriptOnPageStarted(android.webkit.WebView)
io.flutter.embedding.engine.FlutterJNI: void cleanupMessageData(long)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: android.webkit.WebViewClient createWebViewClient(com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate)
com.google.protobuf.Int32Value: Int32Value()
io.grpc.okhttp.internal.TlsVersion: io.grpc.okhttp.internal.TlsVersion valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void onCreate(android.os.Bundle)
io.flutter.embedding.engine.FlutterJNI: boolean nativeShouldDisableAHB()
me.carda.awesome_notifications.core.utils.MediaUtils: MediaUtils()
com.google.android.material.chip.Chip: void setChipText(java.lang.CharSequence)
me.carda.awesome_notifications.core.managers.DefaultsManager: void saveDefault(android.content.Context,me.carda.awesome_notifications.core.models.DefaultsModel)
androidx.activity.ComponentActivity: void initializeViewTreeOwners()
io.flutter.plugin.platform.PlatformViewFactory: PlatformViewFactory(io.flutter.plugin.common.MessageCodec)
com.google.firebase.crashlytics.internal.model.StaticSessionData$DeviceData: StaticSessionData$DeviceData()
androidx.core.app.NotificationCompatBuilder$Api29Impl: android.app.Notification$Builder setBubbleMetadata(android.app.Notification$Builder,android.app.Notification$BubbleMetadata)
androidx.activity.ComponentActivity: void addMenuProvider(androidx.core.view.MenuProvider,androidx.lifecycle.LifecycleOwner)
androidx.datastore.preferences.PreferencesProto$PreferenceMap$Builder: PreferencesProto$PreferenceMap$Builder()
me.carda.awesome_notifications.core.managers.EventManager: EventManager()
androidx.datastore.preferences.core.Preferences: Preferences()
com.pichillilorenzo.flutter_inappwebview_android.R$bool: R$bool()
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter endObject()
com.google.gson.internal.bind.TypeAdapters$3: TypeAdapters$3()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$3: InAppWebViewClient$3(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient,android.webkit.SslErrorHandler,android.webkit.WebView,android.net.http.SslError)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: SwipeRefreshLayout(android.content.Context)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setLockedNotification(me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setShowMotionSpecResource(int)
me.carda.awesome_notifications.core.utils.TimeZoneUtils: java.util.TimeZone getValidTimeZone(java.lang.String)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: float getFloat(android.content.Context,java.lang.String,java.lang.String,float)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setLayout(android.content.Context,android.content.Intent,me.carda.awesome_notifications.core.models.NotificationModel,me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLProtectionSpaceDao: java.util.List getAll()
com.dexterous.flutterlocalnotifications.utils.StringUtils: java.lang.Boolean isNullOrEmpty(java.lang.String)
me.carda.awesome_notifications.core.managers.ScheduleManager: void cancelSchedulesByChannelKey(android.content.Context,java.lang.String)
com.google.gson.stream.MalformedJsonException: MalformedJsonException(java.lang.String,java.lang.Throwable)
io.grpc.internal.GzipInflatingBuffer$State: io.grpc.internal.GzipInflatingBuffer$State valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: boolean needsCameraPermission()
com.google.android.material.floatingactionbutton.FloatingActionButton: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
androidx.constraintlayout.widget.Barrier: void setDpMargin(int)
com.google.android.material.datepicker.OnSelectionChangedListener: OnSelectionChangedListener()
com.google.android.material.snackbar.SnackbarContentLayout: android.widget.Button getActionView()
com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime: com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime[] values()
androidx.core.app.JobIntentService: boolean onStopCurrentWork()
androidx.media.AudioAttributesImplApi26Parcelizer: AudioAttributesImplApi26Parcelizer()
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder: BitmapResourceDecoder(android.content.Context,java.lang.String,me.carda.awesome_notifications.core.completion_handlers.BitmapCompletionHandler)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onOverScrolled(int,int,boolean,boolean)
me.carda.awesome_notifications.core.broadcasters.senders.BroadcastSender: boolean isWithoutListenersAvailable()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setExtras(android.media.MediaDescription$Builder,android.os.Bundle)
androidx.core.content.ContextCompat$Api24Impl: android.content.Context createDeviceProtectedStorageContext(android.content.Context)
com.google.android.material.chip.Chip: void setChipIconTint(android.content.res.ColorStateList)
com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase: com.google.firebase.firestore.proto.MaybeDocument$DocumentTypeCase[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewRenderProcessClient$2: boolean nonNullSuccess(java.lang.Object)
androidx.activity.ComponentActivity: void setContentView(android.view.View,android.view.ViewGroup$LayoutParams)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: void setCookie(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.lang.Integer,java.lang.Boolean,java.lang.Boolean,java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
com.google.android.material.internal.FlowLayout: void setItemSpacing(int)
me.carda.awesome_notifications.core.managers.ChannelManager: void removeOldAndroidChannelStandards(android.content.Context,java.lang.String,java.lang.String)
androidx.appcompat.app.AppCompatDelegateImpl$Api24Impl: void setLocales(android.content.res.Configuration,androidx.core.os.LocaleListCompat)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onCloseWindow()
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder setGroupSummary(android.app.Notification$Builder,boolean)
com.google.android.material.appbar.AppBarLayout: void setLiftOnScrollTargetView(android.view.View)
com.google.android.gms.internal.measurement.zzgd$zza: zzgd$zza()
me.carda.awesome_notifications.core.models.AbstractModel: java.util.Map toMap()
androidx.activity.ComponentActivity: void setContentView(int)
com.google.firebase.StartupTime: StartupTime()
com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView$-CC: void $default$onInputConnectionUnlocked(com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsAlertCallback: WebViewChannelDelegate$JsAlertCallback()
me.carda.awesome_notifications.core.models.AbstractModel: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture: com.google.firebase.crashlytics.internal.common.CommonUtils$Architecture valueOf(java.lang.String)
com.google.firestore.v1.ListenResponse$ResponseTypeCase: com.google.firestore.v1.ListenResponse$ResponseTypeCase[] values()
androidx.appcompat.app.AlertController$RecycleListView: AlertController$RecycleListView(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobController: void restart()
androidx.appcompat.widget.ActionMenuView: void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener)
com.google.android.material.bottomappbar.BottomAppBar: com.google.android.material.bottomappbar.BottomAppBarTopEdgeTreatment getTopEdgeTreatment()
com.google.android.material.textfield.TextInputLayout: void setCounterOverflowTextAppearance(int)
com.google.android.material.button.MaterialButton: int getStrokeWidth()
androidx.appcompat.widget.AppCompatImageButton: void setBackgroundResource(int)
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt: com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt fromMap(java.util.Map,com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin,android.content.Context)
androidx.core.view.ViewCompat$Api21Impl: java.lang.String getTransitionName(android.view.View)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void getZoomScale(android.webkit.ValueCallback)
android.support.v4.media.MediaDescriptionCompat$Api21Impl: void setSubtitle(android.media.MediaDescription$Builder,java.lang.CharSequence)
me.carda.awesome_notifications.core.managers.ChannelManager: java.util.List listChannels(android.content.Context)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Action build(android.app.Notification$Action$Builder)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$3: void onFocusChange(android.view.View,boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void pauseTimers()
com.google.android.material.textfield.TextInputLayout: void setPlaceholderTextColor(android.content.res.ColorStateList)
androidx.core.view.MenuItemCompat$Api26Impl: android.view.MenuItem setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode)
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api34Impl: void getBoundsInWindow(android.view.accessibility.AccessibilityNodeInfo,android.graphics.Rect)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void zonedScheduleNextNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
me.carda.awesome_notifications.core.utils.CalendarUtils: me.carda.awesome_notifications.core.utils.CalendarUtils getInstance()
me.carda.awesome_notifications.core.managers.DefaultsManager: java.lang.String getDefaultIcon(android.content.Context)
me.carda.awesome_notifications.AwesomeNotificationsFlutterExtension: AwesomeNotificationsFlutterExtension()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate getInAppBrowserDelegate()
com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin: void onAttachedToEngine(android.content.Context,io.flutter.plugin.common.BinaryMessenger,android.app.Activity,io.flutter.plugin.platform.PlatformViewRegistry,io.flutter.embedding.android.FlutterView)
androidx.core.view.WindowInsetsCompat$Impl28: boolean equals(java.lang.Object)
com.google.gson.TypeAdapter: TypeAdapter()
me.carda.awesome_notifications.core.utils.StringUtils: StringUtils()
androidx.lifecycle.LifecycleDispatcher$DispatcherActivityCallback: void onActivityCreated(android.app.Activity,android.os.Bundle)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setWillSuppressErrorPage(boolean)
androidx.transition.ObjectAnimatorUtils$Api21Impl: android.animation.ObjectAnimator ofObject(java.lang.Object,android.util.Property,android.graphics.Path)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onRenderProcessUnresponsive(java.lang.String,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$RenderProcessUnresponsiveCallback)
com.pichillilorenzo.flutter_inappwebview_android.types.JsAlertResponse: java.lang.String getMessage()
androidx.lifecycle.EmptyActivityLifecycleCallbacks: void onActivityStopped(android.app.Activity)
com.google.android.material.button.MaterialButton: void setInsetBottom(int)
io.flutter.view.AccessibilityBridge$Action: io.flutter.view.AccessibilityBridge$Action[] values()
io.flutter.plugins.webviewflutter.WebViewProxyApi$WebViewPlatformView: void setWebViewClient(android.webkit.WebViewClient)
androidx.core.content.res.ResourcesCompat$ThemeCompat$Api29Impl: void rebase(android.content.res.Resources$Theme)
androidx.appcompat.widget.DropDownListView: void setSelector(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity$2: void onNavigationEvent(int,android.os.Bundle)
me.carda.awesome_notifications.core.completion_handlers.ActivityCompletionHandler: void handle()
io.flutter.embedding.engine.FlutterJNI: android.graphics.Bitmap decodeImage(java.nio.ByteBuffer,long)
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int)
com.google.android.material.button.MaterialButton: void setIconTintMode(android.graphics.PorterDuff$Mode)
me.carda.awesome_notifications.core.AwesomeNotifications: void attachAsMainInstance(me.carda.awesome_notifications.core.listeners.AwesomeEventListener)
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: java.util.Map toMap()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: boolean hasInvalidRawSoundResource(io.flutter.plugin.common.MethodChannel$Result,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.pichillilorenzo.flutter_inappwebview_android.types.PrintAttributesExt: PrintAttributesExt()
androidx.core.view.WindowInsetsCompat$Impl20: void setRootViewData(androidx.core.graphics.Insets)
me.carda.awesome_notifications.core.externalLibs.CronExpression: void readObject(java.io.ObjectInputStream)
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy: int rawValue()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$1: void defaultBehaviour(com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.CustomTabsHelper: void addKeepAliveExtra(android.content.Context,android.content.Intent)
com.google.android.material.card.MaterialCardView: android.content.res.ColorStateList getCardForegroundColor()
io.grpc.InternalConfigSelector: InternalConfigSelector()
androidx.appcompat.app.AppCompatActivity: void setTheme(int)
me.carda.awesome_notifications.core.services.ForegroundService: android.os.IBinder onBind(android.content.Intent)
com.google.firebase.ktx.FirebaseCommonKtxRegistrar: java.util.List getComponents()
androidx.core.app.ActivityCompat$Api23Impl: void requestPermissions(android.app.Activity,java.lang.String[],int)
androidx.constraintlayout.widget.ConstraintLayout: void setConstraintSet(androidx.constraintlayout.widget.ConstraintSet)
me.carda.awesome_notifications.core.enumerators.ActionType: me.carda.awesome_notifications.core.enumerators.ActionType getSafeEnum(java.lang.String)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: boolean setString(android.content.Context,java.lang.String,java.lang.String,java.lang.String)
androidx.constraintlayout.helper.widget.Flow: void setPaddingLeft(int)
androidx.core.app.RemoteActionCompatParcelizer: void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel)
com.google.android.gms.internal.measurement.zzfr$zza: zzfr$zza()
me.carda.awesome_notifications.core.managers.StatusBarManager: void removeAllIndexes(android.content.SharedPreferences$Editor,java.lang.String)
com.google.gson.stream.JsonWriter: void setHtmlSafe(boolean)
androidx.appcompat.widget.SearchView: void setInputType(int)
io.grpc.util.OutlierDetectionLoadBalancerProvider: java.lang.String getPolicyName()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: void setCallback(io.flutter.view.TextureRegistry$SurfaceProducer$Callback)
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.Integer weekDayISO8601ToStandard(java.lang.Integer)
androidx.appcompat.widget.AppCompatButton: void setAllCaps(boolean)
io.flutter.view.AccessibilityViewEmbedder: boolean performAction(int,int,android.os.Bundle)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: java.util.Map getCustomSettings()
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionController: void clearMatches()
com.google.android.material.button.MaterialButtonToggleGroup: void setSelectionRequired(boolean)
androidx.appcompat.widget.AlertDialogLayout: AlertDialogLayout(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onClosed()
com.google.android.material.floatingactionbutton.FloatingActionButton: void setExpandedComponentIdHint(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void callAsyncJavaScript(java.lang.String,java.util.Map,com.pichillilorenzo.flutter_inappwebview_android.types.ContentWorld,android.webkit.ValueCallback)
com.google.android.material.chip.ChipGroup: void setChipSpacingVertical(int)
androidx.window.layout.adapter.sidecar.SidecarCompat$TranslatingCallback: void onDeviceStateChanged(androidx.window.sidecar.SidecarDeviceState)
me.carda.awesome_notifications.core.enumerators.SafeEnum$-CC: boolean charMatches(java.lang.String,int,int,char)
io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness: io.flutter.embedding.engine.systemchannels.SettingsChannel$PlatformBrightness valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsChannelDelegate: void onOpened()
me.carda.awesome_notifications.core.enumerators.NotificationImportance: int toAndroidImportance(me.carda.awesome_notifications.core.enumerators.NotificationImportance)
androidx.core.view.WindowInsetsCompat$Impl: androidx.core.graphics.Insets getTappableElementInsets()
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: java.lang.Integer getOrder()
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.media.Image acquireLatestImage()
io.flutter.embedding.android.FlutterImageView: android.view.Surface getSurface()
com.google.firebase.crashlytics.internal.concurrency.CrashlyticsWorkers$Companion: CrashlyticsWorkers$Companion()
org.chromium.support_lib_boundary.WebkitToCompatConverterBoundaryInterface: java.lang.reflect.InvocationHandler convertWebMessagePort(java.lang.Object)
com.google.android.gms.stats.zzc: zzc()
androidx.appcompat.widget.AppCompatCheckedTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.google.firestore.bundle.BundledQuery$LimitType: com.google.firestore.bundle.BundledQuery$LimitType[] values()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void setUserProperty(java.lang.String,java.lang.String,com.google.android.gms.dynamic.IObjectWrapper,boolean,long)
com.google.android.gms.internal.measurement.zzbw: zzbw()
androidx.activity.ComponentActivity: androidx.activity.result.ActivityResultLauncher registerForActivityResult(androidx.activity.result.contract.ActivityResultContract,androidx.activity.result.ActivityResultRegistry,androidx.activity.result.ActivityResultCallback)
androidx.browser.customtabs.CustomTabsServiceConnection: void onServiceConnected(android.content.ComponentName,android.os.IBinder)
androidx.browser.customtabs.CustomTabsCallback: void onRelationshipValidationResult(int,android.net.Uri,boolean,android.os.Bundle)
androidx.activity.ComponentActivity: void startActivityForResult(android.content.Intent,int)
androidx.appcompat.app.AppCompatActivity: void supportNavigateUpTo(android.content.Intent)
com.google.android.material.carousel.CarouselLayoutManager: CarouselLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
me.carda.awesome_notifications.core.utils.BitmapUtils: me.carda.awesome_notifications.core.utils.BitmapUtils getInstance()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: java.lang.Boolean canCreateNotificationChannel(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationChannelDetails)
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerView$Adapter getAdapter()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void applyInsetTypes()
com.google.android.gms.internal.measurement.zzmj: zzmj()
me.carda.awesome_notifications.core.AwesomeNotifications: me.carda.awesome_notifications.core.AwesomeNotifications unsubscribeOnAwesomeNotificationEvents(me.carda.awesome_notifications.core.listeners.AwesomeEventListener)
kotlinx.coroutines.scheduling.SchedulerTimeSource: SchedulerTimeSource()
androidx.core.view.WindowInsetsCompat$BuilderImpl29: androidx.core.view.WindowInsetsCompat build()
com.google.android.material.floatingactionbutton.FloatingActionButton: int getCustomSize()
com.google.android.gms.internal.measurement.zzfy$zzf: zzfy$zzf()
androidx.constraintlayout.widget.ConstraintLayout: int getMaxWidth()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void onUnhandledKeyEvent(android.webkit.WebView,android.view.KeyEvent)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: boolean equals(java.lang.Object)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: boolean shouldUpdate()
com.google.firestore.admin.v1.Index$IndexField$Order: com.google.firestore.admin.v1.Index$IndexField$Order valueOf(java.lang.String)
androidx.appcompat.widget.Toolbar: android.widget.TextView getSubtitleTextView()
com.pichillilorenzo.flutter_inappwebview_android.types.JsBeforeUnloadResponse: boolean equals(java.lang.Object)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void showNotification(android.content.Context,com.dexterous.flutterlocalnotifications.models.NotificationDetails)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsSettings: java.util.Map getRealSettings(com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity)
androidx.appcompat.widget.ActionBarOverlayLayout: java.lang.CharSequence getTitle()
androidx.core.graphics.drawable.IconCompat$Api23Impl: android.net.Uri getUri(java.lang.Object)
me.carda.awesome_notifications.core.AwesomeNotifications: me.carda.awesome_notifications.core.AwesomeNotifications unsubscribeOnNotificationEvents(me.carda.awesome_notifications.core.listeners.AwesomeNotificationEventListener)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonFirebaseSettings: GeneratedAndroidFirebaseFirestore$PigeonFirebaseSettings()
androidx.appcompat.widget.Toolbar: int getTitleMarginTop()
com.google.android.gms.internal.measurement.zzfy$zzd$zza: zzfy$zzd$zza()
androidx.appcompat.widget.SearchView: void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener)
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPaused(android.app.Activity)
io.flutter.embedding.android.FlutterView: void setWindowInfoListenerDisplayFeatures(androidx.window.layout.WindowLayoutInfo)
com.google.android.material.card.MaterialCardView: void setOnCheckedChangeListener(com.google.android.material.card.MaterialCardView$OnCheckedChangeListener)
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle getSafeEnum(java.lang.String)
io.flutter.view.AccessibilityViewEmbedder: boolean requestSendAccessibilityEvent(android.view.View,android.view.View,android.view.accessibility.AccessibilityEvent)
com.google.android.material.transformation.FabTransformationScrimBehavior: FabTransformationScrimBehavior(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.AppCompatTextView: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setBoxStrokeColor(int)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup: java.lang.String getGroupName()
androidx.constraintlayout.helper.widget.Flow: void setPaddingBottom(int)
kotlinx.coroutines.android.AndroidDispatcherFactory: int getLoadPriority()
com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential: void setPassword(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: void setData(byte[])
me.carda.awesome_notifications.core.AwesomeNotifications: boolean dismissNotificationsByChannelKey(java.lang.String)
androidx.privacysandbox.ads.adservices.java.measurement.MeasurementManagerFutures$Api33Ext5JavaImpl: com.google.common.util.concurrent.ListenableFuture registerWebSourceAsync(androidx.privacysandbox.ads.adservices.measurement.WebSourceRegistrationRequest)
me.carda.awesome_notifications.core.managers.CreatedManager: java.util.List getCreatedByKey(android.content.Context,java.lang.Integer)
me.carda.awesome_notifications.core.decoders.BitmapResourceDecoder: java.lang.Object doInBackground()
io.grpc.internal.ProxyDetectorImpl: ProxyDetectorImpl()
com.google.android.material.bottomappbar.BottomAppBar: void setFabAnchorMode(int)
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getCounterOverflowTextColor()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$LoadResourceWithCustomSchemeCallback: WebViewChannelDelegate$LoadResourceWithCustomSchemeCallback()
com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse: com.pichillilorenzo.flutter_inappwebview_android.types.CustomSchemeResponse fromMap(java.util.Map)
com.google.android.gms.internal.common.zzc: zzc()
com.google.android.material.chip.Chip: void setBackgroundTintMode(android.graphics.PorterDuff$Mode)
androidx.core.view.ViewCompat$Api23Impl: void setScrollIndicators(android.view.View,int,int)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.KeepAliveService: android.os.IBinder onBind(android.content.Intent)
me.leolin.shortcutbadger.impl.ApexHomeBadger: ApexHomeBadger()
com.pichillilorenzo.flutter_inappwebview_android.types.InAppBrowserMenuItem: void setShowAsAction(boolean)
androidx.coordinatorlayout.widget.CoordinatorLayout: java.util.List getDependencySortedChildren()
androidx.recyclerview.widget.RecyclerView: androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate()
androidx.core.view.ViewGroupCompat$Api21Impl: boolean isTransitionGroup(android.view.ViewGroup)
me.carda.awesome_notifications.core.models.NotificationMessageModel: NotificationMessageModel(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: InAppWebViewClient(com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserDelegate)
androidx.constraintlayout.widget.ConstraintHelper: void setReferencedIds(int[])
com.google.android.material.chip.Chip: void setIconEndPadding(float)
com.pichillilorenzo.flutter_inappwebview_android.types.UserScript$1: UserScript$1(com.pichillilorenzo.flutter_inappwebview_android.types.UserScript)
me.carda.awesome_notifications.core.models.NotificationCrontabModel: void validate(android.content.Context)
com.google.firebase.firestore.core.ViewSnapshot$SyncState: com.google.firebase.firestore.core.ViewSnapshot$SyncState valueOf(java.lang.String)
androidx.coordinatorlayout.widget.CoordinatorLayout: void setStatusBarBackground(android.graphics.drawable.Drawable)
androidx.appcompat.widget.AppCompatTextView: android.view.ActionMode$Callback getCustomSelectionActionModeCallback()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: float getZoomScale()
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: java.lang.reflect.InvocationHandler getProfile()
androidx.core.widget.NestedScrollView: void setFillViewport(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$6: boolean onLongClick(android.view.View)
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebView: com.pichillilorenzo.flutter_inappwebview_android.types.Size2D getSize()
io.flutter.embedding.engine.FlutterJNI: void updateSemantics(java.nio.ByteBuffer,java.lang.String[],java.nio.ByteBuffer[])
me.carda.awesome_notifications.core.managers.PermissionManager: boolean handleActivityResult(int,int,android.content.Intent)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat: void onReceivedHttpAuthRequest(android.webkit.WebView,android.webkit.HttpAuthHandler,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: android.net.http.SslCertificate getSslCertificate()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient$1: void error(java.lang.String,java.lang.String,java.lang.Object)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void lambda$setAllBooleanValues$6(android.content.ContentValues,java.lang.Boolean)
me.carda.awesome_notifications.core.threads.NotificationSender: me.carda.awesome_notifications.core.models.returnedData.NotificationReceived doInBackground()
me.carda.awesome_notifications.core.externalLibs.CronExpression: int getNumericValue(java.lang.String,int)
com.dexterous.flutterlocalnotifications.models.NotificationChannelGroupDetails: NotificationChannelGroupDetails()
androidx.appcompat.widget.LinearLayoutCompat: int getVirtualChildCount()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: android.content.Context getContext()
com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency: com.dexterous.flutterlocalnotifications.models.ScheduledNotificationRepeatFrequency[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: MarginsExt()
com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState: com.google.firebase.concurrent.SequentialExecutor$WorkerRunningState valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory: java.lang.String access$000(com.dexterous.flutterlocalnotifications.RuntimeTypeAdapterFactory)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: android.webkit.WebViewClient getWebViewClient()
com.pichillilorenzo.flutter_inappwebview_android.types.WebViewAssetLoaderExt$PathHandlerExtChannelDelegate$SyncHandleCallback: java.lang.Object decodeResult(java.lang.Object)
androidx.core.app.NotificationCompat$BubbleMetadata$Api30Impl: android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$2: void onReceiveValue(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.types.URLProtectionSpace: URLProtectionSpace(java.lang.Long,java.lang.String,java.lang.String,java.lang.String,int)
androidx.fragment.app.FragmentActivity: android.os.Bundle lambda$init$0()
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$Api33Impl: androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat buildCollectionItemInfoCompat(boolean,int,int,int,int,boolean,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$3: InAppWebViewChromeClient$3(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.JsResult)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$Source: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$Source[] values()
com.google.firebase.firestore.model.FieldIndex$Segment$Kind: com.google.firebase.firestore.model.FieldIndex$Segment$Kind valueOf(java.lang.String)
com.google.firestore.admin.v1.Index$IndexField$ArrayConfig: com.google.firestore.admin.v1.Index$IndexField$ArrayConfig[] values()
androidx.appcompat.widget.AppCompatRadioButton: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
com.pichillilorenzo.flutter_inappwebview_android.types.SyncBaseCallbackResultImpl: void success(java.lang.Object)
androidx.appcompat.app.AppCompatActivity: void setSupportProgressBarIndeterminate(boolean)
me.carda.awesome_notifications.core.broadcasters.receivers.NotificationActionReceiver: void receiveActionIntent(android.content.Context,android.content.Intent)
androidx.appcompat.widget.AppCompatTextHelper$Api26Impl: boolean setFontVariationSettings(android.widget.TextView,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: void access$601(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient,android.webkit.WebView,android.webkit.WebResourceRequest,int,android.webkit.SafeBrowsingResponse)
me.carda.awesome_notifications.core.managers.PermissionManager: boolean gotoAndroidAppNotificationPage(android.content.Context)
io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type: io.flutter.plugin.editing.TextInputPlugin$InputTarget$Type[] values()
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.lang.String escapeCode(java.lang.String)
com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType: com.google.android.datatransport.cct.internal.NetworkConnectionInfo$NetworkType valueOf(java.lang.String)
com.google.android.material.search.SearchView: androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior getBehavior()
com.google.android.gms.measurement.internal.zzjg: com.google.android.gms.measurement.internal.zzjg[] values()
me.carda.awesome_notifications.core.externalLibs.CronExpression: int storeExpressionVals(int,java.lang.String,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onJsAlert(java.lang.String,java.lang.String,java.lang.Boolean,com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$JsAlertCallback)
androidx.webkit.WebViewClientCompat: void onReceivedHttpError(android.webkit.WebView,android.webkit.WebResourceRequest,android.webkit.WebResourceResponse)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: int getId()
androidx.appcompat.widget.AppCompatRadioButton: void setSupportButtonTintMode(android.graphics.PorterDuff$Mode)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getChipDrawable()
me.carda.awesome_notifications.core.managers.RepositoryManager: java.util.List getAllObjectsStartingWith(android.content.Context,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: java.util.Map toMap()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$12: boolean nonNullSuccess(java.lang.Object)
io.flutter.embedding.engine.FlutterJNI: void invokePlatformMessageEmptyResponseCallback(int)
com.google.android.material.chip.Chip: void setBackgroundTintList(android.content.res.ColorStateList)
com.google.firebase.crashlytics.internal.model.CrashlyticsReport: CrashlyticsReport()
me.carda.awesome_notifications.core.models.returnedData.ActionReceived: void registerDismissedEvent(me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle)
me.leolin.shortcutbadger.impl.SamsungHomeBadger: SamsungHomeBadger()
com.google.firebase.firestore.model.FieldIndex$IndexState: FieldIndex$IndexState()
okio.Timeout: Timeout()
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: void getTransformMatrix(float[])
androidx.recyclerview.widget.GridLayoutManager: GridLayoutManager(android.content.Context,android.util.AttributeSet,int,int)
androidx.core.app.JobIntentService: void processorFinished()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerHandler$1: void run()
com.google.android.material.textfield.MaterialAutoCompleteTextView: void setSimpleItems(java.lang.String[])
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$6: WebViewChannelDelegate$6(com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate,io.flutter.plugin.common.MethodChannel$Result)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setProfile(java.lang.String)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setBackgroundResource(int)
me.carda.awesome_notifications.core.utils.CalendarUtils: java.util.Calendar getCurrentCalendar()
androidx.lifecycle.ProcessLifecycleOwner$Api29Impl: void registerActivityLifecycleCallbacks(android.app.Activity,android.app.Application$ActivityLifecycleCallbacks)
androidx.core.widget.TextViewCompat$Api23Impl: void setBreakStrategy(android.widget.TextView,int)
io.flutter.plugin.platform.PlatformViewFactory: io.flutter.plugin.platform.PlatformView create(android.content.Context,int,java.lang.Object)
androidx.window.core.VerificationMode: androidx.window.core.VerificationMode[] values()
androidx.appcompat.widget.ActionBarOverlayLayout: void setIcon(android.graphics.drawable.Drawable)
me.carda.awesome_notifications.core.AwesomeNotifications: boolean cancelSchedulesByGroupKey(java.lang.String)
com.google.android.material.search.SearchView: void setAutoShowKeyboard(boolean)
me.carda.awesome_notifications.core.AwesomeNotifications: boolean setLocalization(java.lang.String)
me.carda.awesome_notifications.core.managers.PermissionManager: void showDnDGlobalOverridingPage(android.content.Context,me.carda.awesome_notifications.core.completion_handlers.PermissionCompletionHandler)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void getCachedAppInstanceId(com.google.android.gms.internal.measurement.zzdo)
org.chromium.support_lib_boundary.WebViewProviderBoundaryInterface: void setAudioMuted(boolean)
com.pichillilorenzo.flutter_inappwebview_android.MyWebStorage: void getUsageForOrigin(java.lang.String,io.flutter.plugin.common.MethodChannel$Result)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerSource(android.net.Uri,android.view.InputEvent,kotlin.coroutines.Continuation)
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingControllerManager: void dispose()
com.pichillilorenzo.flutter_inappwebview_android.types.BaseCallbackResultImpl: BaseCallbackResultImpl()
androidx.fragment.app.DefaultSpecialEffectsController$Api26Impl: void setCurrentPlayTime(android.animation.AnimatorSet,long)
com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt: com.pichillilorenzo.flutter_inappwebview_android.types.WebMessageCompatExt fromMap(java.util.Map)
me.carda.awesome_notifications.core.models.NotificationButtonModel: java.util.Map toMap()
androidx.constraintlayout.widget.ConstraintLayout: void setMaxWidth(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$CreateWindowCallback: java.lang.Object decodeResult(java.lang.Object)
com.google.android.material.chip.ChipGroup: void setDividerDrawableVertical(android.graphics.drawable.Drawable)
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.List getIfDomain()
androidx.appcompat.widget.AppCompatEditText: void setKeyListener(android.text.method.KeyListener)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageTextureRegistryEntry: void pushImage(android.media.Image)
io.flutter.plugins.firebase.messaging.FlutterFirebaseAppRegistrar: java.util.List getComponents()
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void removeFloat(android.content.Context,java.lang.String,java.lang.String)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: int getDisabledActionModeMenuItems()
androidx.core.widget.NestedScrollView: int getMaxScrollAmount()
me.carda.awesome_notifications.core.models.NotificationModel: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void setLights(com.dexterous.flutterlocalnotifications.models.NotificationDetails,androidx.core.app.NotificationCompat$Builder)
me.carda.awesome_notifications.core.threads.NotificationThread: void whenComplete(java.lang.Object,me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController$4: UserContentController$4(com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController)
androidx.appcompat.widget.AppCompatTextView: android.view.textclassifier.TextClassifier getTextClassifier()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setRequestedWithHeaderOriginAllowList(java.util.Set)
androidx.activity.ComponentActivity: void addOnNewIntentListener(androidx.core.util.Consumer)
io.flutter.plugins.webviewflutter.PigeonApiDownloadListener$Companion: PigeonApiDownloadListener$Companion()
me.carda.awesome_notifications.core.managers.DismissedManager: me.carda.awesome_notifications.core.models.returnedData.NotificationReceived getDismissedByIdAndDate(android.content.Context,java.lang.Integer,java.util.Calendar)
com.pichillilorenzo.flutter_inappwebview_android.types.BaseCallbackResultImpl: boolean nullSuccess()
com.google.android.material.button.MaterialButton: void setInternalBackground(android.graphics.drawable.Drawable)
com.google.android.material.button.MaterialButtonToggleGroup: MaterialButtonToggleGroup(android.content.Context,android.util.AttributeSet)
me.carda.awesome_notifications.DartRefreshSchedulesReceiver: DartRefreshSchedulesReceiver()
io.flutter.view.AccessibilityViewEmbedder: android.view.accessibility.AccessibilityNodeInfo convertToFlutterNode(android.view.accessibility.AccessibilityNodeInfo,int,android.view.View)
com.pichillilorenzo.flutter_inappwebview_android.types.PermissionResponse: java.util.List getResources()
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: boolean isForMainFrame()
androidx.fragment.app.FragmentActivity: void onResumeFragments()
me.carda.awesome_notifications.core.models.AbstractModel: java.util.List getValueOrDefaultCalendarList(java.util.Map,java.lang.String,java.util.List)
com.google.android.material.button.MaterialButton: int getCornerRadius()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$RenderProcessUnresponsiveCallback: WebViewChannelDelegate$RenderProcessUnresponsiveCallback()
me.carda.awesome_notifications.core.AwesomeNotifications: me.carda.awesome_notifications.core.models.returnedData.ActionReceived getInitialNotificationAction(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView$14: InAppWebView$14(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView,int,int)
me.carda.awesome_notifications.core.threads.NotificationSender: java.lang.Object onPostExecute(java.lang.Object)
com.google.firestore.v1.StructuredQuery$Projection: StructuredQuery$Projection()
androidx.constraintlayout.widget.Barrier: int getMargin()
com.google.android.gms.measurement.AppMeasurement: java.util.Map getUserProperties(java.lang.String,java.lang.String,boolean)
me.carda.awesome_notifications.core.managers.CreatedManager: boolean removeAllCreated(android.content.Context)
com.google.android.material.floatingactionbutton.FloatingActionButton: void setEnsureMinTouchTargetSize(boolean)
com.google.android.datatransport.runtime.scheduling.persistence.PersistedEvent: PersistedEvent()
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForTextView(android.view.DragEvent,android.widget.TextView,android.app.Activity)
com.pichillilorenzo.flutter_inappwebview_android.headless_in_app_webview.HeadlessInAppWebViewManager: HeadlessInAppWebViewManager(com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin)
com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse: com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse fromMap(java.util.Map)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void startProgressAlphaStartAnimation()
me.carda.awesome_notifications.core.managers.RepositoryManager: java.util.List getAllObjects(android.content.Context,java.lang.String)
androidx.fragment.app.FragmentManager: FragmentManager()
me.carda.awesome_notifications.core.exceptions.ExceptionFactory: void registerAwesomeException(java.lang.String,me.carda.awesome_notifications.core.exceptions.AwesomeNotificationsException)
androidx.core.view.WindowInsetsCompat$Impl21: androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets()
com.google.android.material.card.MaterialCardView: void setCardForegroundColor(android.content.res.ColorStateList)
me.carda.awesome_notifications.core.models.NotificationChannelGroupModel: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
androidx.appcompat.widget.AppCompatTextView: int getFirstBaselineToTopHeight()
me.carda.awesome_notifications.core.AwesomeNotifications: java.lang.String getLocalTimeZone()
com.google.firebase.firestore.core.DocumentViewChange$Type: com.google.firebase.firestore.core.DocumentViewChange$Type[] values()
com.google.android.material.textfield.TextInputLayout: android.widget.TextView getPrefixTextView()
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: void onReceive(android.content.Context,android.content.Intent)
androidx.browser.customtabs.CustomTabsCallback: void onMinimized(android.os.Bundle)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeSafariBrowserManager: void dispose()
androidx.constraintlayout.widget.ConstraintLayout: void setOptimizationLevel(int)
com.google.android.material.card.MaterialCardView: android.graphics.RectF getBoundsAsRectF()
androidx.recyclerview.widget.RecyclerView: void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer: void setRootAlpha(int)
me.carda.awesome_notifications.core.managers.CancellationManager: boolean cancelSchedulesByGroupKey(android.content.Context,java.lang.String)
me.carda.awesome_notifications.core.managers.StatusBarManager: void dismissAllNotifications(android.content.Context)
androidx.appcompat.widget.AppCompatReceiveContentHelper$OnDropApi24Impl: boolean onDropForView(android.view.DragEvent,android.view.View,android.app.Activity)
com.google.android.material.chip.Chip: void setGravity(int)
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationAction: void setHasGesture(boolean)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void updateSecondaryToolbar(com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsSecondaryToolbar)
com.pichillilorenzo.flutter_inappwebview_android.print_job.PrintJobManager: void dispose()
androidx.core.app.NotificationCompat$MessagingStyle$Message$Api28Impl: android.os.Parcelable castToParcelable(android.app.Person)
com.google.gson.internal.bind.TypeAdapters$23: TypeAdapters$23()
com.google.android.material.button.MaterialButtonToggleGroup: void setupButtonChild(com.google.android.material.button.MaterialButton)
com.pichillilorenzo.flutter_inappwebview_android.credential_database.URLCredentialDao: long update(com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential)
me.carda.awesome_notifications.core.models.NotificationButtonModel: me.carda.awesome_notifications.core.models.NotificationButtonModel fromJson(java.lang.String)
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath: void setFillAlpha(float)
com.google.android.gms.internal.measurement.zzs: com.google.android.gms.internal.measurement.zzs[] values()
com.google.android.material.floatingactionbutton.FloatingActionButton$BaseBehavior: FloatingActionButton$BaseBehavior(android.content.Context,android.util.AttributeSet)
me.carda.awesome_notifications.core.utils.AudioUtils: java.lang.Boolean isValidAudioResource(android.content.Context,java.lang.String)
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void onAttachedToActivity(io.flutter.embedding.engine.plugins.activity.ActivityPluginBinding)
com.google.android.material.chip.Chip: void setShowMotionSpec(com.google.android.material.animation.MotionSpec)
com.google.firebase.crashlytics.internal.common.InstallIdProvider$InstallIds: InstallIdProvider$InstallIds()
com.google.android.material.search.SearchBar: void setStrokeWidth(float)
androidx.appcompat.widget.LinearLayoutCompat: LinearLayoutCompat(android.content.Context,android.util.AttributeSet)
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void goBackOrForward(int)
com.google.android.gms.internal.measurement.zzjt: zzjt()
com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime: UserScriptInjectionTime(java.lang.String,int,int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: android.content.Intent getVideoIntent()
com.google.firestore.v1.Target: Target()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: boolean pageUp(boolean)
io.flutter.embedding.android.KeyData$DeviceType: io.flutter.embedding.android.KeyData$DeviceType valueOf(java.lang.String)
com.dexterous.flutterlocalnotifications.ActionBroadcastReceiver: ActionBroadcastReceiver()
androidx.core.view.WindowInsetsCompat$Impl: boolean isRound()
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthenticationChallenge: void setProposedCredential(com.pichillilorenzo.flutter_inappwebview_android.types.URLCredential)
io.grpc.util.SecretRoundRobinLoadBalancerProvider$Provider: SecretRoundRobinLoadBalancerProvider$Provider()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onRequestFocus()
androidx.constraintlayout.widget.ConstraintHelper: void setIds(java.lang.String)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setChannelKey(android.content.Context,me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
androidx.window.area.reflectionguard.WindowAreaComponentApi3Requirements: void endRearDisplayPresentationSession()
me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle: me.carda.awesome_notifications.core.enumerators.NotificationLifeCycle[] $values()
me.carda.awesome_notifications.core.managers.LostEventsManager: java.util.Map recoverNotificationDisplayed(android.content.Context)
io.grpc.okhttp.internal.Platform$TlsExtensionType: io.grpc.okhttp.internal.Platform$TlsExtensionType[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClient: boolean shouldOverrideUrlLoading(android.webkit.WebView,android.webkit.WebResourceRequest)
io.grpc.TlsChannelCredentials$Feature: io.grpc.TlsChannelCredentials$Feature valueOf(java.lang.String)
androidx.core.content.FileProvider: androidx.core.content.FileProvider$PathStrategy getLocalPathStrategy()
me.carda.awesome_notifications.core.enumerators.NotificationPermission: NotificationPermission(java.lang.String,int,java.lang.String)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PersistenceCacheIndexManagerRequest: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PersistenceCacheIndexManagerRequest valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterEngineGroupCache: FlutterEngineGroupCache()
androidx.core.view.WindowInsetsCompat$BuilderImpl: void setStableInsets(androidx.core.graphics.Insets)
me.carda.awesome_notifications.core.managers.DefaultsManager: boolean setSilentCallbackDispatcher(android.content.Context,java.lang.Long)
com.google.android.material.search.SearchView: com.google.android.material.motion.MaterialMainContainerBackHelper getBackHelper()
com.pichillilorenzo.flutter_inappwebview_android.types.PluginScript: int hashCode()
me.carda.awesome_notifications.AwesomeNotificationsPlugin: void channelMethodGetUtcTimeZone(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
io.grpc.okhttp.internal.CipherSuite: io.grpc.okhttp.internal.CipherSuite valueOf(java.lang.String)
io.flutter.embedding.engine.FlutterJNI: long performNativeAttach(io.flutter.embedding.engine.FlutterJNI)
me.carda.awesome_notifications.core.builders.NotificationBuilder: void setLights(me.carda.awesome_notifications.core.models.NotificationChannelModel,androidx.core.app.NotificationCompat$Builder)
androidx.appcompat.widget.AppCompatSpinner: void setSupportBackgroundTintList(android.content.res.ColorStateList)
com.google.firestore.v1.DocumentMask$Builder: DocumentMask$Builder()
androidx.appcompat.widget.AppCompatImageButton: void setImageBitmap(android.graphics.Bitmap)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$4: boolean nonNullSuccess(com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse)
io.flutter.embedding.engine.renderer.FlutterRenderer$ImageReaderSurfaceProducer: android.view.Surface getSurface()
com.google.android.material.bottomappbar.BottomAppBar: float getFabTranslationY()
com.google.android.material.button.MaterialButton: void setIconPadding(int)
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: void setSuggestedFilename(java.lang.String)
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setAnimateShowBeforeLayout(boolean)
com.google.android.material.card.MaterialCardView: void setCardBackgroundColor(android.content.res.ColorStateList)
androidx.datastore.preferences.protobuf.UnsafeUtil: UnsafeUtil()
androidx.core.view.WindowInsetsCompat$Impl20: androidx.core.graphics.Insets getInsets(int)
com.google.android.material.bottomappbar.BottomAppBar: void setHideOnScroll(boolean)
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setSafeBrowsingEnabled(boolean)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void performAction(android.os.Bundle,com.google.android.gms.internal.measurement.zzdo,long)
com.google.firebase.firestore.local.MemoryDocumentOverlayCache: MemoryDocumentOverlayCache()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: void setMethod(java.lang.String)
com.google.gson.stream.JsonReader: void consumeNonExecutePrefix()
com.pichillilorenzo.flutter_inappwebview_android.WebViewFeatureManager: void dispose()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void stopLoading()
androidx.datastore.preferences.protobuf.GeneratedMessageLite: GeneratedMessageLite()
me.carda.awesome_notifications.core.managers.PermissionManager: boolean startVerifiedActivity(android.content.Context,android.content.Intent)
androidx.appcompat.widget.AppCompatImageButton: AppCompatImageButton(android.content.Context,android.util.AttributeSet)
androidx.appcompat.widget.FitWindowsLinearLayout: FitWindowsLinearLayout(android.content.Context,android.util.AttributeSet)
io.flutter.embedding.engine.FlutterJNI: void loadLibrary(android.content.Context)
com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter open(int,char)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$8: void error(java.lang.String,java.lang.String,java.lang.Object)
androidx.appcompat.app.AppCompatActivity: boolean supportRequestWindowFeature(int)
androidx.appcompat.widget.LinearLayoutCompat: android.graphics.drawable.Drawable getDividerDrawable()
me.carda.awesome_notifications.core.models.NotificationChannelModel: boolean isChannelEnabled()
androidx.core.view.WindowInsetsCompat$Impl: void setOverriddenInsets(androidx.core.graphics.Insets[])
com.google.common.collect.BaseImmutableMultimap: BaseImmutableMultimap()
org.chromium.support_lib_boundary.WebSettingsBoundaryInterface: void setForceDark(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$3: InAppWebViewClientCompat$3(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat,android.webkit.SslErrorHandler,android.webkit.WebView,android.net.http.SslError)
com.google.firestore.v1.StructuredAggregationQuery$Aggregation$Avg$Builder: StructuredAggregationQuery$Aggregation$Avg$Builder()
org.chromium.support_lib_boundary.ProfileBoundaryInterface: android.webkit.ServiceWorkerController getServiceWorkerController()
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void checkCanScheduleExactAlarms(android.app.AlarmManager)
com.google.android.material.chip.Chip: void setMaxLines(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void setIncognito(boolean)
com.google.android.material.chip.Chip: void setOnCloseIconClickListener(android.view.View$OnClickListener)
me.carda.awesome_notifications.core.models.NotificationCalendarModel: java.lang.String toJson()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceRequestExt: boolean isHasGesture()
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: void setContentLength(long)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat$5: InAppWebViewClientCompat$5(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewClientCompat,androidx.webkit.SafeBrowsingResponseCompat,android.webkit.WebView,android.webkit.WebResourceRequest,int)
com.google.android.material.chip.Chip: void setCloseIconEnabled(boolean)
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionSettings: java.util.Map getRealSettings(java.lang.Object)
com.google.android.material.chip.ChipGroup: void setShowDividerHorizontal(int)
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate$PrintRequestCallback: java.lang.Boolean decodeResult(java.lang.Object)
com.google.android.datatransport.cct.internal.ComplianceData: ComplianceData()
me.carda.awesome_notifications.core.utils.JsonUtils: java.lang.String toJson(java.lang.Object)
me.carda.awesome_notifications.core.models.NotificationButtonModel: me.carda.awesome_notifications.core.models.AbstractModel fromMap(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: void dispose()
com.google.firebase.firestore.ktx.FirebaseFirestoreKtxRegistrar: java.util.List getComponents()
com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType: com.pichillilorenzo.flutter_inappwebview_android.types.PreferredContentModeOptionType[] $values()
com.google.android.gms.measurement.AppMeasurement: com.google.android.gms.measurement.AppMeasurement getInstance(android.content.Context)
io.flutter.embedding.engine.plugins.lifecycle.HiddenLifecycleReference: androidx.lifecycle.Lifecycle getLifecycle()
me.carda.awesome_notifications.core.models.NotificationMessageModel: java.util.Map toMap()
io.flutter.embedding.engine.FlutterJNI: void setSemanticsEnabled(boolean)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: android.view.ActionMode startActionMode(android.view.ActionMode$Callback)
com.google.android.material.search.SearchBar: int getStrokeColor()
androidx.core.text.ICUCompat$Api24Impl: android.icu.util.ULocale forLocale(java.util.Locale)
androidx.appcompat.widget.AppCompatCheckedTextView: android.content.res.ColorStateList getSupportCompoundDrawablesTintList()
androidx.core.view.ViewConfigurationCompat$Api34Impl: int getScaledMaximumFlingVelocity(android.view.ViewConfiguration,int,int,int)
me.carda.awesome_notifications.core.exceptions.ExceptionFactory: void registerNewAwesomeException(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
me.carda.awesome_notifications.core.databases.SQLitePrimitivesDB: void removeBoolean(android.content.Context,java.lang.String,java.lang.String)
androidx.datastore.preferences.protobuf.UnknownFieldSchema: UnknownFieldSchema()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: void addCustomAction(android.media.session.PlaybackState$Builder,android.media.session.PlaybackState$CustomAction)
io.flutter.embedding.engine.renderer.SurfaceTextureWrapper: SurfaceTextureWrapper(android.graphics.SurfaceTexture)
androidx.appcompat.widget.AppCompatCheckBox: void setAllCaps(boolean)
com.pichillilorenzo.flutter_inappwebview_android.Util: com.pichillilorenzo.flutter_inappwebview_android.types.Size2D getFullscreenSize(android.content.Context)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshChannelDelegate: void onRefresh()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlocker: int hashCode()
androidx.media.AudioAttributesImplApi26Parcelizer: androidx.media.AudioAttributesImplApi26 read(androidx.versionedparcelable.VersionedParcel)
androidx.appcompat.widget.ActionBarOverlayLayout: int getNestedScrollAxes()
me.carda.awesome_notifications.core.managers.LifeCycleManager: void onResumed()
com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton: void setExtended(boolean)
androidx.appcompat.widget.AppCompatSpinner: int getDropDownVerticalOffset()
com.pichillilorenzo.flutter_inappwebview_android.R$animator: R$animator()
me.carda.awesome_notifications.core.enumerators.LogLevel: me.carda.awesome_notifications.core.enumerators.LogLevel[] values()
com.google.firestore.v1.DocumentTransform$FieldTransform$Builder: DocumentTransform$FieldTransform$Builder()
androidx.core.graphics.drawable.DrawableCompat$Api21Impl: void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList)
me.carda.awesome_notifications.core.utils.CronUtils: java.util.Calendar getNextCalendar(java.util.Calendar,java.lang.String,java.util.TimeZone)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$7: void onCancel(android.content.DialogInterface)
com.dexterous.flutterlocalnotifications.models.NotificationDetails: NotificationDetails()
com.pichillilorenzo.flutter_inappwebview_android.types.SafeBrowsingResponse: SafeBrowsingResponse(boolean,java.lang.Integer)
io.flutter.plugins.webviewflutter.PigeonApiGeolocationPermissionsCallback$Companion: PigeonApiGeolocationPermissionsCallback$Companion()
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void logEvent(java.lang.String,java.lang.String,android.os.Bundle,boolean,boolean,long)
com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView$-CC: void $default$onFlutterViewAttached(com.pichillilorenzo.flutter_inappwebview_android.webview.PlatformWebView,android.view.View)
androidx.appcompat.widget.AppCompatRadioButton: void setBackgroundDrawable(android.graphics.drawable.Drawable)
com.google.android.material.textfield.TextInputLayout: void setEndIconMinSize(int)
androidx.constraintlayout.helper.widget.Flow: void setHorizontalStyle(int)
com.google.android.material.chip.Chip: android.graphics.drawable.Drawable getCheckedIcon()
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionSettings: java.util.Map toMap()
com.google.android.material.circularreveal.CircularRevealFrameLayout: void setRevealInfo(com.google.android.material.circularreveal.CircularRevealWidget$RevealInfo)
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView: void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode)
com.pichillilorenzo.flutter_inappwebview_android.types.FindSession: int hashCode()
androidx.core.widget.NestedScrollView: float getVerticalScrollFactorCompat()
com.google.android.material.textfield.TextInputLayout: android.content.res.ColorStateList getDefaultHintTextColor()
org.chromium.support_lib_boundary.ProfileBoundaryInterface: void cancelPrefetch(java.lang.String)
com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver: ScheduledNotificationBootReceiver()
com.google.android.material.snackbar.BaseTransientBottomBar$SnackbarBaseLayout: void setBackgroundTintList(android.content.res.ColorStateList)
org.chromium.support_lib_boundary.FeatureFlagHolderBoundaryInterface: java.lang.String[] getSupportedFeatures()
com.google.android.material.chip.Chip: void setChipIconResource(int)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: java.lang.String getCookieExpirationDate(java.lang.Long)
me.carda.awesome_notifications.core.managers.PermissionManager: java.lang.String getManifestPermissionCode(me.carda.awesome_notifications.core.enumerators.NotificationPermission)
androidx.core.widget.ImageViewCompat$Api21Impl: void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.types.CustomTabsActionButton: void setIcon(byte[])
com.google.android.gms.common.api.PendingResult: PendingResult()
me.carda.awesome_notifications.core.builders.NotificationBuilder: java.lang.String getAppName(android.content.Context)
com.google.android.material.chip.Chip: void setCloseIconTint(android.content.res.ColorStateList)
com.pichillilorenzo.flutter_inappwebview_android.types.HttpAuthResponse: java.lang.String getUsername()
com.pichillilorenzo.flutter_inappwebview_android.content_blocker.ContentBlockerTrigger: java.util.List getUnlessDomain()
android.support.v4.media.MediaDescriptionCompat$Api21Impl: java.lang.String getMediaId(android.media.MediaDescription)
com.google.android.material.search.SearchBar: android.view.View getCenterView()
androidx.cardview.widget.CardView: void setUseCompatPadding(boolean)
com.google.firestore.admin.v1.Index$IndexField$ArrayConfig: com.google.firestore.admin.v1.Index$IndexField$ArrayConfig valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebView: com.pichillilorenzo.flutter_inappwebview_android.InAppWebViewFlutterPlugin getPlugin()
android.support.v4.media.session.PlaybackStateCompat$Api21Impl: android.media.session.PlaybackState$CustomAction build(android.media.session.PlaybackState$CustomAction$Builder)
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onEnd(android.view.WindowInsetsAnimation)
com.google.android.material.floatingactionbutton.FloatingActionButton: boolean getUseCompatPadding()
io.flutter.plugin.editing.ImeSyncDeferringInsetsCallback$AnimationCallback: void onPrepare(android.view.WindowInsetsAnimation)
com.pichillilorenzo.flutter_inappwebview_android.types.DownloadStartRequest: int hashCode()
io.flutter.view.AccessibilityBridge$StringAttributeType: io.flutter.view.AccessibilityBridge$StringAttributeType[] values()
com.pichillilorenzo.flutter_inappwebview_android.webview.ContextMenuSettings: java.util.Map getRealSettings(java.lang.Object)
me.carda.awesome_notifications.core.broadcasters.receivers.AwesomeEventsReceiver: AwesomeEventsReceiver(me.carda.awesome_notifications.core.utils.StringUtils)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: void generateEventId(com.google.android.gms.internal.measurement.zzdo)
androidx.core.os.LocaleListCompat$Api24Impl: android.os.LocaleList createLocaleList(java.util.Locale[])
androidx.activity.ComponentActivity: void reportFullyDrawn()
androidx.transition.Transition: Transition()
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient: java.lang.Boolean isArrayEmpty(java.lang.String[])
androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior: CoordinatorLayout$Behavior(android.content.Context,android.util.AttributeSet)
androidx.lifecycle.ProcessLifecycleOwner$attach$1: void onActivityCreated(android.app.Activity,android.os.Bundle)
androidx.core.view.WindowInsetsCompat$Impl: void setRootViewData(androidx.core.graphics.Insets)
com.google.android.material.floatingactionbutton.FloatingActionButton: float getCompatPressedTranslationZ()
androidx.core.app.NotificationManagerCompat$Api26Impl: void deleteNotificationChannel(android.app.NotificationManager,java.lang.String)
me.carda.awesome_notifications.core.services.ForegroundService: void stop(java.lang.Integer)
androidx.appcompat.widget.AppCompatTextView: androidx.appcompat.widget.AppCompatEmojiTextHelper getEmojiTextViewHelper()
androidx.appcompat.view.menu.ActionMenuItemView: void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker)
androidx.appcompat.widget.AppCompatAutoCompleteTextView: void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList)
android.support.v4.media.RatingCompat$Api19Impl: boolean hasHeart(android.media.Rating)
io.flutter.embedding.engine.FlutterJNI: io.flutter.embedding.engine.FlutterJNI spawn(java.lang.String,java.lang.String,java.lang.String,java.util.List)
com.pichillilorenzo.flutter_inappwebview_android.find_interaction.FindInteractionChannelDelegate: void dispose()
com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy: com.pichillilorenzo.flutter_inappwebview_android.types.NavigationActionPolicy fromValue(int)
androidx.core.os.BundleApi21ImplKt: void putSize(android.os.Bundle,java.lang.String,android.util.Size)
com.google.android.material.behavior.HideBottomViewOnScrollBehavior: HideBottomViewOnScrollBehavior()
com.pichillilorenzo.flutter_inappwebview_android.webview.InAppWebViewInterface: void loadDataWithBaseURL(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.pull_to_refresh.PullToRefreshLayout$2: void onRefresh()
androidx.media.AudioAttributesImplApi21Parcelizer: androidx.media.AudioAttributesImplApi21 read(androidx.versionedparcelable.VersionedParcel)
com.google.firestore.v1.ListenRequest: ListenRequest()
androidx.appcompat.widget.AppCompatTextView: void setLineHeight(int)
com.pichillilorenzo.flutter_inappwebview_android.R$layout: R$layout()
me.carda.awesome_notifications.core.models.AbstractModel: void putDataOnSerializedMap(java.lang.String,java.util.Map,java.util.Map)
com.dexterous.flutterlocalnotifications.FlutterLocalNotificationsPlugin: void createNotificationChannel(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
androidx.appcompat.widget.LinearLayoutCompat: void setDividerPadding(int)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateType: io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$AggregateType valueOf(java.lang.String)
com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient$18: InAppWebViewChromeClient$18(com.pichillilorenzo.flutter_inappwebview_android.webview.in_app_webview.InAppWebViewChromeClient,android.webkit.PermissionRequest)
androidx.fragment.app.FragmentContainerView: void setDrawDisappearingViewsLast(boolean)
com.google.android.material.sidesheet.SideSheetCallback: SideSheetCallback()
androidx.lifecycle.ReportFragment$LifecycleCallbacks: void onActivityPrePaused(android.app.Activity)
androidx.core.app.NotificationCompatBuilder$Api26Impl: android.app.Notification$Builder createBuilder(android.content.Context,java.lang.String)
me.carda.awesome_notifications.core.models.NotificationIntervalModel: me.carda.awesome_notifications.core.models.AbstractModel fromJson(java.lang.String)
me.carda.awesome_notifications.core.models.returnedData.NotificationReceived: me.carda.awesome_notifications.core.models.returnedData.NotificationReceived fromJson(java.lang.String)
com.google.android.gms.internal.measurement.zzfy$zzj$zza: zzfy$zzj$zza()
androidx.activity.ComponentActivity: void onMultiWindowModeChanged(boolean)
com.pichillilorenzo.flutter_inappwebview_android.MyCookieManager: void dispose()
com.google.android.material.bottomappbar.BottomAppBar: float getCradleVerticalOffset()
com.pichillilorenzo.flutter_inappwebview_android.types.WebResourceResponseExt: java.lang.String getContentEncoding()
io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView: void setOnDescendantFocusChangeListener(android.view.View$OnFocusChangeListener)
androidx.media.AudioAttributesImplBaseParcelizer: void write(androidx.media.AudioAttributesImplBase,androidx.versionedparcelable.VersionedParcel)
androidx.fragment.app.SpecialEffectsController$Effect: SpecialEffectsController$Effect()
com.pichillilorenzo.flutter_inappwebview_android.webview.WebViewChannelDelegate: void onMethodCall(io.flutter.plugin.common.MethodCall,io.flutter.plugin.common.MethodChannel$Result)
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserActivity$4: boolean onMenuItemClick(android.view.MenuItem)
com.dexterous.flutterlocalnotifications.ForegroundService: ForegroundService()
me.carda.awesome_notifications.core.utils.MediaUtils: me.carda.awesome_notifications.core.enumerators.MediaSource getMediaSourceType(java.lang.String)
me.carda.awesome_notifications.core.utils.HtmlUtils: android.text.Spanned fromHtml(java.lang.String)
me.carda.awesome_notifications.core.threads.NotificationScheduler: void schedule(android.content.Context,me.carda.awesome_notifications.core.models.NotificationModel,android.content.Intent,me.carda.awesome_notifications.core.completion_handlers.NotificationThreadCompletionHandler)
androidx.core.content.ContextCompat$Api21Impl: android.graphics.drawable.Drawable getDrawable(android.content.Context,int)
com.google.firebase.platforminfo.LibraryVersion: LibraryVersion()
androidx.constraintlayout.helper.widget.Flow: void setFirstHorizontalStyle(int)
androidx.core.app.NotificationManagerCompat$Api26Impl: java.lang.String getId(android.app.NotificationChannel)
androidx.core.view.WindowInsetsCompat$Impl28: androidx.core.view.WindowInsetsCompat consumeDisplayCutout()
com.pichillilorenzo.flutter_inappwebview_android.proxy.ProxySettings: java.util.Map getRealSettings(java.lang.Object)
com.pichillilorenzo.flutter_inappwebview_android.tracing.TracingSettings: com.pichillilorenzo.flutter_inappwebview_android.ISettings parse(java.util.Map)
com.pichillilorenzo.flutter_inappwebview_android.types.MarginsExt: void setLeft(double)
com.google.gson.ReflectionAccessFilter$FilterResult: com.google.gson.ReflectionAccessFilter$FilterResult[] values()
com.google.android.material.chip.ChipGroup: void setChipSpacingVerticalResource(int)
com.pichillilorenzo.flutter_inappwebview_android.chrome_custom_tabs.ChromeCustomTabsActivity: void prepareCustomTabsIntent(androidx.browser.customtabs.CustomTabsIntent)
io.flutter.plugins.firebase.core.FlutterFirebasePluginRegistry: void registerPlugin(java.lang.String,io.flutter.plugins.firebase.core.FlutterFirebasePlugin)
me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType: me.carda.awesome_notifications.core.enumerators.DefaultRingtoneType valueOf(java.lang.String)
com.google.gson.stream.JsonWriter: JsonWriter(java.io.Writer)
androidx.appcompat.widget.AppCompatImageView: android.graphics.PorterDuff$Mode getSupportImageTintMode()
me.carda.awesome_notifications.core.managers.StatusBarManager: StatusBarManager(android.content.Context,me.carda.awesome_notifications.core.utils.StringUtils)
androidx.appcompat.app.AppCompatActivity: void setContentView(int)
androidx.constraintlayout.widget.Placeholder: void setContentId(int)
io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType: io.flutter.embedding.engine.systemchannels.PlatformChannel$SoundType[] values()
com.google.firebase.firestore.proto.Target$Builder: Target$Builder()
com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform: com.google.firebase.messaging.reporting.MessagingClientEvent$SDKPlatform valueOf(java.lang.String)
androidx.swiperefreshlayout.widget.SwipeRefreshLayout: void stopNestedScroll()
com.pichillilorenzo.flutter_inappwebview_android.in_app_browser.InAppBrowserSettings: com.pichillilorenzo.flutter_inappwebview_android.ISettings parse(java.util.Map)
com.google.android.material.textfield.TextInputEditText: void setTextInputLayoutFocusedRectEnabled(boolean)
io.flutter.plugins.firebase.firestore.GeneratedAndroidFirebaseFirestore$PigeonGetOptions: GeneratedAndroidFirebaseFirestore$PigeonGetOptions()
com.pichillilorenzo.flutter_inappwebview_android.types.URLRequest: boolean equals(java.lang.Object)
io.flutter.plugins.firebase.messaging.FlutterFirebaseMessagingBackgroundService: FlutterFirebaseMessagingBackgroundService()
androidx.core.app.JobIntentService: void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent)
android.support.v4.graphics.drawable.IconCompatParcelizer: IconCompatParcelizer()
com.pichillilorenzo.flutter_inappwebview_android.types.JsConfirmResponse: void setHandledByClient(boolean)
androidx.appcompat.widget.Toolbar: void setNavigationOnClickListener(android.view.View$OnClickListener)
com.pichillilorenzo.flutter_inappwebview_android.types.UserContentController: java.util.LinkedHashSet getPluginScriptsAt(com.pichillilorenzo.flutter_inappwebview_android.types.UserScriptInjectionTime)
androidx.core.view.WindowInsetsCompat$Impl20: boolean isRound()
androidx.core.widget.CompoundButtonCompat$Api21Impl: android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton)
androidx.appcompat.resources.Compatibility$Api21Impl: void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme)
me.carda.awesome_notifications.core.managers.SharedManager: void commit(android.content.Context)
com.google.android.gms.measurement.internal.AppMeasurementDynamiteService: AppMeasurementDynamiteService()
io.flutter.plugin.platform.PlatformViewWrapper: void setLayoutParams(android.widget.FrameLayout$LayoutParams)
androidx.privacysandbox.ads.adservices.measurement.MeasurementManager$Api33Ext5Impl: java.lang.Object registerWebTrigger(androidx.privacysandbox.ads.adservices.measurement.WebTriggerRegistrationRequest,kotlin.coroutines.Continuation)
androidx.core.view.MenuItemCompat$Api26Impl: android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem)
androidx.core.app.NotificationCompatBuilder$Api20Impl: android.app.Notification$Builder addAction(android.app.Notification$Builder,android.app.Notification$Action)
